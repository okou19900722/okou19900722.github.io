{"pageProps":{"categories":["releases","guides","news"],"posts":[{"filename":"blog/2020-07-28-eclipse-vert-x-4-beta-1-released.mdx","date":"2020-07-28","slug":"eclipse-vert-x-4-beta-1-released","meta":{"title":"Eclipse Vert.x 4 beta 1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the first 4.0 beta release of Eclipse Vert.x. Highlights of this release are the improved JDBC Client API, event loop affinity, and much more."},"readingTime":{"text":"4 min read","minutes":3.73,"time":223800,"words":746},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the first 4.0 beta re\\xADlease of Eclipse Vert.x .\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"h2\", {\n    \"id\": \"sql-client-metrics\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#sql-client-metrics\"\n  })), \"SQL client metrics\"), mdx(\"p\", null, \"Vert.x 4 sup\\xADports met\\xADrics for clients which are crit\\xADi\\xADcal for mon\\xADi\\xADtor\\xADing ap\\xADpli\\xADca\\xADtion per\\xADfor\\xADmance.\"), mdx(\"p\", null, \"While the ca\\xADpa\\xADbil\\xADi\\xADties are generic and can apply to any client, each client needs a spe\\xADcific in\\xADte\\xADgra\\xADtion.\\nOb\\xADvi\\xADously the SQL client was the per\\xADfect can\\xADdi\\xADdate in mind for this new fea\\xADture.\"), mdx(\"p\", null, \"Mi\\xADcrom\\xADe\\xADter met\\xADrics will re\\xADport these met\\xADrics as\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx_sql_queue_pend\\xADing: num\\xADber of re\\xADquests sched\\xADuled but not yet ex\\xADe\\xADcuted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx_sql_queue_time: time spent in queue be\\xADfore pro\\xADcess\\xADing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx_sql_pro\\xADcess\\xADing_pend\\xADing: num\\xADber of re\\xADquest being processed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx_sql_pro\\xADcess\\xADing_time: re\\xADquests la\\xADten\\xADcies\")), mdx(\"h2\", {\n    \"id\": \"a-better-api-for-jdbc-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#a-better-api-for-jdbc-client\"\n  })), \"A better API for JDBC Client\"), mdx(\"p\", null, \"Our JDBC client will not go away in Vert.x 4, we do rec\\xADkn\\xADog\\xADnize that JDBC is im\\xADpor\\xADtant be\\xADcause it sup\\xADports\\nthe most im\\xADpor\\xADtant num\\xADber of data\\xADbases in the ecosys\\xADtem.\"), mdx(\"p\", null, \"When we de\\xADsigned the SQL client API we strived a lot to come with the sim\\xADplest and most pow\\xADer\\xADful API\\nfor asyn\\xADcho\\xADnous SQL client.\"), mdx(\"p\", null, \"This re\\xADlease brings an im\\xADple\\xADmen\\xADta\\xADtion of the SQL client API for JDBC.\"), mdx(\"p\", null, \"The 3.x API se\\xADries will con\\xADtinue to be sup\\xADported for the life\\xADtime of Vert.x 4.\"), mdx(\"h2\", {\n    \"id\": \"event-loop-affinity\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#event-loop-affinity\"\n  })), \"Event loop affinity\"), mdx(\"p\", null, \"Using Vert.x from a non Vert.x thread is a very com\\xADmon use case we have been sup\\xADport\\xADing since Vert.x 3.\"), mdx(\"p\", null, \"When you use a Vert.x re\\xADsource (like a client) from a non Vert.x thread, Vert.x 3 ob\\xADtains a new event-\\u200Bloop\\nevery\\xADtime it hap\\xADpens.\"), mdx(\"p\", null, \"In Vert.x 4 we de\\xADcided to pin the first event loop to the non Vert.x thread. The goal is to pre\\xADvent\\nsome data races and also makes rea\\xADson\\xADning about this eas\\xADier.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ini\"\n  }), \"Vertx \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"vertx\"), \" = Vertx.vertx()\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n\\nfor (int \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"i\"), \" = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";i < 4;i++) {\"), \"\\n  String \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"msg\"), \" = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Message \\\"\"), \" + i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n  vertx.runOnContext(v -> {\\n    System.out.println(i)\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n  })\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n}\\n\")), mdx(\"p\", null, \"Run\\xADning this with Vert.x 3 will print the 4 lines but they are likely to not be re\\xADordered, this code could\\nalso be run\\xADning in par\\xADal\\xADlel (that is two dif\\xADfer\\xADent threads run\\xADning at the same time on a dif\\xADfer\\xADent CPU core).\"), mdx(\"p\", null, \"Run\\xADning this with Vert.x 4 will print the 4 lines in the cor\\xADrect order and al\\xADways with the same thread. This\\nelim\\xADi\\xADnates some po\\xADten\\xADtial data races and also al\\xADlows to rea\\xADson about what will hap\\xADpen at run\\xADtime.\"), mdx(\"h2\", {\n    \"id\": \"vertx-json-schema-supports-draft2019-09\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-json-schema-supports-draft2019-09\"\n  })), \"Vert.x Json Schema supports Draft2019-09\"), mdx(\"p\", null, \"The new \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/eclipse-vertx/vertx-json-schema\"\n  }), \"vertx-\\u200Bjson-schema\"), \" mod\\xADule now sup\\xADports the lat\\xADest Json Schema \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://json-schema.org/specification.html\"\n  }), \"Draft2019-09 spec\"), \". You can fi\\xADnally play with the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$recursiveRef\"), \" to build ex\\xADten\\xADsi\\xADble re\\xADcur\\xADsive schemas and with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unevaluatedProperties\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unevaluatedItems\"), \" to de\\xADfine strict schemas. Look at the mod\\xADule \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-web-site.github.io/docs/vertx-json-schema/java/\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion\"), \" to start using it.\"), mdx(\"h2\", {\n    \"id\": \"clustering-configuration-simplified\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#clustering-configuration-simplified\"\n  })), \"Clustering configuration simplified\"), mdx(\"p\", null, \"In Vert.x 3, clus\\xADter host was set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost\"), \" by de\\xADfault in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EventBusOptions\"), \".\\nCon\\xADse\\xADquently, a lot of new users were con\\xADfused about why event bus con\\xADsumers and pro\\xADduc\\xADers were not able to com\\xADmu\\xADni\\xADcate even if the un\\xADder\\xADly\\xADing clus\\xADter man\\xADager was con\\xADfig\\xADured cor\\xADrectly.\"), mdx(\"p\", null, \"Also, when using the CLI tool or the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Launcher\"), \" class, Vert.x tried to find a host among avail\\xADable net\\xADwork in\\xADter\\xADfaces if none was pro\\xADvided with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-cluster-host\"), \" ar\\xADgu\\xADment.\\nSome\\xADtimes, the host cho\\xADsen by the clus\\xADter man\\xADager and Vert.x were not the same.\"), mdx(\"p\", null, \"Start\\xADing with Vert.x 4 beta 1, the clus\\xADter host de\\xADfault has been re\\xADmoved and, if users don\\u2019t pro\\xADvide any, Vert.x will ask the clus\\xADter man\\xADager which one it picked be\\xADfore try\\xADing to find one it\\xADself.\\nThis ap\\xADplies whether Vert.x is em\\xADbed\\xADded in any Java pro\\xADgram or started with the CLI tool or with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Launcher\"), \" class.\"), mdx(\"p\", null, \"So far, only \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-hazelcast\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-infinispan\"), \" clus\\xADter man\\xADagers can pro\\xADvide Vert.x with a clus\\xADter host.\\nWhen other clus\\xADter man\\xADagers are used, Vert.x will choose one it\\xADself.\"), mdx(\"h2\", {\n    \"id\": \"cluster-manager-upgrades\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#cluster-manager-upgrades\"\n  })), \"Cluster manager upgrades\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-hazelcast\"), \" has been up\\xADgraded to Hazel\\xADcast 4.0.2 and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-infinispan\"), \" to In\\xADfin\\xADis\\xADpan 11.0.1.Final.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"This is the Beta1 re\\xADlase of Vert.x 4, you can of course ex\\xADpect more betas as we get feed\\xADback from the com\\xADmu\\xADnity and fix is\\xADsues that we failed to catch be\\xADfore.\"), mdx(\"p\", null, \"You can also read the mile\\xADstone an\\xADnounces to know more about the over\\xADral changes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-5-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-5-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-4-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-3-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-2-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-1-\\u200Breleased\"))), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"For this re\\xADlease there are no Docker im\\xADages.\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0.Beta1\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0.Beta1/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0.Beta1 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-web-site.github.io/docs/\"\n  }), \"https://vertx-\\u200Bweb-site.github.io/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the first 4.0 beta re­lease of Eclipse Vert.x .</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><h2 id=\"sql-client-metrics\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#sql-client-metrics\"></a>SQL client metrics</h2><p>Vert.x 4 sup­ports met­rics for clients which are crit­i­cal for mon­i­tor­ing ap­pli­ca­tion per­for­mance.</p><p>While the ca­pa­bil­i­ties are generic and can apply to any client, each client needs a spe­cific in­te­gra­tion.\nOb­vi­ously the SQL client was the per­fect can­di­date in mind for this new fea­ture.</p><p>Mi­crom­e­ter met­rics will re­port these met­rics as</p><ul><li>vertx_sql_queue_pend­ing: num­ber of re­quests sched­uled but not yet ex­e­cuted</li><li>vertx_sql_queue_time: time spent in queue be­fore pro­cess­ing</li><li>vertx_sql_pro­cess­ing_pend­ing: num­ber of re­quest being processed</li><li>vertx_sql_pro­cess­ing_time: re­quests la­ten­cies</li></ul><h2 id=\"a-better-api-for-jdbc-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#a-better-api-for-jdbc-client\"></a>A better API for JDBC Client</h2><p>Our JDBC client will not go away in Vert.x 4, we do rec­kn­og­nize that JDBC is im­por­tant be­cause it sup­ports\nthe most im­por­tant num­ber of data­bases in the ecosys­tem.</p><p>When we de­signed the SQL client API we strived a lot to come with the sim­plest and most pow­er­ful API\nfor asyn­cho­nous SQL client.</p><p>This re­lease brings an im­ple­men­ta­tion of the SQL client API for JDBC.</p><p>The 3.x API se­ries will con­tinue to be sup­ported for the life­time of Vert.x 4.</p><h2 id=\"event-loop-affinity\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#event-loop-affinity\"></a>Event loop affinity</h2><p>Using Vert.x from a non Vert.x thread is a very com­mon use case we have been sup­port­ing since Vert.x 3.</p><p>When you use a Vert.x re­source (like a client) from a non Vert.x thread, Vert.x 3 ob­tains a new event-​loop\nevery­time it hap­pens.</p><p>In Vert.x 4 we de­cided to pin the first event loop to the non Vert.x thread. The goal is to pre­vent\nsome data races and also makes rea­son­ning about this eas­ier.</p><pre><code class=\"hljs language-ini\">Vertx <span class=\"hljs-attr\">vertx</span> = Vertx.vertx()<span class=\"hljs-comment\">;</span>\n\nfor (int <span class=\"hljs-attr\">i</span> = <span class=\"hljs-number\">0</span><span class=\"hljs-comment\">;i &lt; 4;i++) {</span>\n  String <span class=\"hljs-attr\">msg</span> = <span class=\"hljs-string\">&quot;Message &quot;</span> + i<span class=\"hljs-comment\">;</span>\n  vertx.runOnContext(v -&gt; {\n    System.out.println(i)<span class=\"hljs-comment\">;</span>\n  })<span class=\"hljs-comment\">;</span>\n}\n</code></pre><p>Run­ning this with Vert.x 3 will print the 4 lines but they are likely to not be re­ordered, this code could\nalso be run­ning in par­al­lel (that is two dif­fer­ent threads run­ning at the same time on a dif­fer­ent CPU core).</p><p>Run­ning this with Vert.x 4 will print the 4 lines in the cor­rect order and al­ways with the same thread. This\nelim­i­nates some po­ten­tial data races and also al­lows to rea­son about what will hap­pen at run­time.</p><h2 id=\"vertx-json-schema-supports-draft2019-09\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-json-schema-supports-draft2019-09\"></a>Vert.x Json Schema supports Draft2019-09</h2><p>The new <a href=\"https://github.com/eclipse-vertx/vertx-json-schema\">vertx-​json-schema</a> mod­ule now sup­ports the lat­est Json Schema <a href=\"http://json-schema.org/specification.html\">Draft2019-09 spec</a>. You can fi­nally play with the new <code>$recursiveRef</code> to build ex­ten­si­ble re­cur­sive schemas and with <code>unevaluatedProperties</code>/<code>unevaluatedItems</code> to de­fine strict schemas. Look at the mod­ule <a href=\"https://vertx-web-site.github.io/docs/vertx-json-schema/java/\">doc­u­men­ta­tion</a> to start using it.</p><h2 id=\"clustering-configuration-simplified\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#clustering-configuration-simplified\"></a>Clustering configuration simplified</h2><p>In Vert.x 3, clus­ter host was set to <code>localhost</code> by de­fault in <code>EventBusOptions</code>.\nCon­se­quently, a lot of new users were con­fused about why event bus con­sumers and pro­duc­ers were not able to com­mu­ni­cate even if the un­der­ly­ing clus­ter man­ager was con­fig­ured cor­rectly.</p><p>Also, when using the CLI tool or the <code>Launcher</code> class, Vert.x tried to find a host among avail­able net­work in­ter­faces if none was pro­vided with the <code>-cluster-host</code> ar­gu­ment.\nSome­times, the host cho­sen by the clus­ter man­ager and Vert.x were not the same.</p><p>Start­ing with Vert.x 4 beta 1, the clus­ter host de­fault has been re­moved and, if users don’t pro­vide any, Vert.x will ask the clus­ter man­ager which one it picked be­fore try­ing to find one it­self.\nThis ap­plies whether Vert.x is em­bed­ded in any Java pro­gram or started with the CLI tool or with the <code>Launcher</code> class.</p><p>So far, only <code>vertx-hazelcast</code> and <code>vertx-infinispan</code> clus­ter man­agers can pro­vide Vert.x with a clus­ter host.\nWhen other clus­ter man­agers are used, Vert.x will choose one it­self.</p><h2 id=\"cluster-manager-upgrades\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#cluster-manager-upgrades\"></a>Cluster manager upgrades</h2><p><code>vertx-hazelcast</code> has been up­graded to Hazel­cast 4.0.2 and <code>vertx-infinispan</code> to In­fin­is­pan 11.0.1.Final.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>This is the Beta1 re­lase of Vert.x 4, you can of course ex­pect more betas as we get feed­back from the com­mu­nity and fix is­sues that we failed to catch be­fore.</p><p>You can also read the mile­stone an­nounces to know more about the over­ral changes:</p><ul><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-5-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-5-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-4-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-3-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-2-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-1-​released</a></li></ul><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>For this re­lease there are no Docker im­ages.</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0.Beta1\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0.Beta1/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0.Beta1 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-web-site.github.io/docs/\">https://vertx-​web-site.github.io/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"client","tf":11},{"term":"cluster","tf":10},{"term":"releas","tf":9},{"term":"will","tf":9},{"term":"us","tf":7},{"term":"http","tf":7},{"term":"io","tf":7},{"term":"support","tf":6},{"term":"manag","tf":6},{"term":"mileston","tf":6},{"term":"sql","tf":5},{"term":"new","tf":5},{"term":"not","tf":5},{"term":"api","tf":5},{"term":"thread","tf":5},{"term":"schema","tf":5},{"term":"host","tf":5},{"term":"blog","tf":5},{"term":"metric","tf":4},{"term":"jdbc","tf":4},{"term":"event","tf":4},{"term":"run","tf":4},{"term":"start","tf":4},{"term":"beta","tf":3},{"term":"number","tf":3}]},{"filename":"blog/2020-07-21-eclipse-vert-x-3-9-2-released.mdx","date":"2020-07-21","slug":"eclipse-vert-x-3-9-2-released","meta":{"title":"Eclipse Vert.x 3.9.2 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The new Eclipse Vert.x version 3.9.2 has just been released. It includes a few bug fixes, a new reactive DB2 client, and reactive MySQL Client domain socket support."},"readingTime":{"text":"2 min read","minutes":1.33,"time":79800.00000000001,"words":266},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce that the Eclipse Vert.x ver\\xADsion 3.9.2 has been re\\xADleased.\"), mdx(\"p\", null, \"Among all bug fixes you can find in 3.9.2 this en\\xADhance\\xADment\"), mdx(\"h2\", {\n    \"id\": \"meet-the-reactive-db2-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#meet-the-reactive-db2-client\"\n  })), \"Meet the Reactive DB2 Client\"), mdx(\"p\", null, \"The Re\\xADac\\xADtive SQL Client fam\\xADily gets a new child with an im\\xADple\\xADmen\\xADta\\xADtion con\\xADtributed by our fel\\xADlow main\\xADtainer\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/andrew_guibert\"\n  }), \"Andy Guib\\xADert\"), \".\"), mdx(\"p\", null, \"Using DB2 client is as straight\\xADfor\\xADward as its elder sib\\xADblings:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"DB2ConnectOptions connectOptions = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" DB2ConnectOptions()\\n  .setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"50000\"), \")\\n  .setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-host\\\"\"), \")\\n  .setDatabase(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-db\\\"\"), \")\\n  .setUser(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"user\\\"\"), \")\\n  .setPassword(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"secret\\\"\"), \");\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Create the client pool\"), \"\\nDB2Pool client = DB2Pool.pool(connectOptions, poolOptions);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// A simple query\"), \"\\nclient\\n  .query(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id='julien'\\\"\"), \")\\n  .execute(ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    RowSet<Row> result = ar.result();\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Got \\\"\"), \" + result.size() + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" rows \\\"\"), \");\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure: \\\"\"), \" + ar.cause().getMessage());\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now close the pool\"), \"\\n  client.close();\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"reactive-mysql-client-domain-socket-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#reactive-mysql-client-domain-socket-support\"\n  })), \"Reactive MySQL Client domain socket support\"), mdx(\"p\", null, \"The MySQL re\\xADac\\xADtive Client can now con\\xADnect using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/eclipse-vertx/vertx-sql-client/issues/521\"\n  }), \"do\\xADmain sock\\xADets\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Connect Options\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Socket file name /var/run/mysqld/mysqld.sock\"), \"\\nMySQLConnectOptions connectOptions = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MySQLConnectOptions()\\n    .setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/var/run/mysqld/mysqld.sock\\\"\"), \")\\n    .setDatabase(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-db\\\"\"), \");\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Create the pooled client\"), \"\\nMySQLPool client = MySQLPool.pool(connectOptions, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" PoolOptions().setMaxSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"5\"), \"));\\n\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.2-Release-Notes\"\n  }), \"3.9.2 re\\xADlease notes\"), \" can be found on the wiki, as well as the\\nlist of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.2-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.2%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.9.2/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce that the Eclipse Vert.x ver­sion 3.9.2 has been re­leased.</p><p>Among all bug fixes you can find in 3.9.2 this en­hance­ment</p><h2 id=\"meet-the-reactive-db2-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#meet-the-reactive-db2-client\"></a>Meet the Reactive DB2 Client</h2><p>The Re­ac­tive SQL Client fam­ily gets a new child with an im­ple­men­ta­tion con­tributed by our fel­low main­tainer\n<a href=\"https://twitter.com/andrew_guibert\">Andy Guib­ert</a>.</p><p>Using DB2 client is as straight­for­ward as its elder sib­blings:</p><pre><code class=\"hljs language-java\">DB2ConnectOptions connectOptions = <span class=\"hljs-keyword\">new</span> DB2ConnectOptions()\n  .setPort(<span class=\"hljs-number\">50000</span>)\n  .setHost(<span class=\"hljs-string\">&quot;the-host&quot;</span>)\n  .setDatabase(<span class=\"hljs-string\">&quot;the-db&quot;</span>)\n  .setUser(<span class=\"hljs-string\">&quot;user&quot;</span>)\n  .setPassword(<span class=\"hljs-string\">&quot;secret&quot;</span>);\n\n<span class=\"hljs-comment\">// Create the client pool</span>\nDB2Pool client = DB2Pool.pool(connectOptions, poolOptions);\n\n<span class=\"hljs-comment\">// A simple query</span>\nclient\n  .query(<span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=&#x27;julien&#x27;&quot;</span>)\n  .execute(ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    RowSet&lt;Row&gt; result = ar.result();\n    System.out.println(<span class=\"hljs-string\">&quot;Got &quot;</span> + result.size() + <span class=\"hljs-string\">&quot; rows &quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failure: &quot;</span> + ar.cause().getMessage());\n  }\n\n  <span class=\"hljs-comment\">// Now close the pool</span>\n  client.close();\n});\n</code></pre><h2 id=\"reactive-mysql-client-domain-socket-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#reactive-mysql-client-domain-socket-support\"></a>Reactive MySQL Client domain socket support</h2><p>The MySQL re­ac­tive Client can now con­nect using <a href=\"https://github.com/eclipse-vertx/vertx-sql-client/issues/521\">do­main sock­ets</a>.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Connect Options</span>\n<span class=\"hljs-comment\">// Socket file name /var/run/mysqld/mysqld.sock</span>\nMySQLConnectOptions connectOptions = <span class=\"hljs-keyword\">new</span> MySQLConnectOptions()\n    .setHost(<span class=\"hljs-string\">&quot;/var/run/mysqld/mysqld.sock&quot;</span>)\n    .setDatabase(<span class=\"hljs-string\">&quot;the-db&quot;</span>);\n\n<span class=\"hljs-comment\">// Create the pooled client</span>\nMySQLPool client = MySQLPool.pool(connectOptions, <span class=\"hljs-keyword\">new</span> PoolOptions().setMaxSize(<span class=\"hljs-number\">5</span>));\n</code></pre><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.2-Release-Notes\">3.9.2 re­lease notes</a> can be found on the wiki, as well as the\nlist of <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.2-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.2%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.9.2/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"client","tf":6},{"term":"reactiv","tf":4},{"term":"releas","tf":3},{"term":"us","tf":3},{"term":"avail","tf":3},{"term":"db2","tf":2},{"term":"mysql","tf":2},{"term":"domain","tf":2},{"term":"socket","tf":2},{"term":"docker","tf":2},{"term":"distribut","tf":2},{"term":"extrem","tf":1},{"term":"pleas","tf":1},{"term":"announc","tf":1},{"term":"version","tf":1},{"term":"among","tf":1},{"term":"bug","tf":1},{"term":"fix","tf":1},{"term":"find","tf":1},{"term":"enhanc","tf":1},{"term":"meet","tf":1},{"term":"sql","tf":1},{"term":"famili","tf":1},{"term":"get","tf":1},{"term":"new","tf":1}]},{"filename":"blog/2020-06-10-eclipse-vert-x-4-milestone-5-released.mdx","date":"2020-06-10","slug":"eclipse-vert-x-4-milestone-5-released","meta":{"title":"Eclipse Vert.x 4 milestone 5 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce the fifth 4.0 milestone release of Eclipse Vert.x. This release aims to provide a reliable distribution of the current development of Vert.x 4."},"readingTime":{"text":"7 min read","minutes":6.295,"time":377700,"words":1259},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the fifth 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x.\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple that\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"\n  })), \"New kids on the block: Json Schema, Web Validation and Web OpenAPI\"), mdx(\"p\", null, \"we de\\xADcide to take HTTP re\\xADquest val\\xADi\\xADda\\xADtion in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web\"), \" and Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification\"\n  }), \"Ope\\xADnAPI\"), \"\\nto a next level in Vert.x 4, allow us to in\\xADtro\\xADduce:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/eclipse-vertx/vertx-json-schema\"\n  }), \"Vert.x Json Schema\"), \": Ex\\xADten\\xADsi\\xADble sync/async json-\\u200Bschema val\\xADida\\xADtor de\\xADsigned for Vert.x JSON types, sup\\xADport\\xADing Json Schema Draft-\\u200B7 and Ope\\xADnAPI di\\xADalect.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-validation\"\n  }), \"Vert.x Web Val\\xADi\\xADda\\xADtion\"), \": Ex\\xADten\\xADsi\\xADble sync/async HTTP re\\xADquest val\\xADida\\xADtor, pro\\xADvid\\xADing a DSL to de\\xADscribe ex\\xADpected HTTP re\\xADquests.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-openapi\"\n  }), \"Vert.x Web Ope\\xADnAPI\"), \": New sup\\xADport for Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment based on Ope\\xADnAPI\")), mdx(\"p\", null, \"Vert.x Json Schema is a pow\\xADer\\xADful \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://json-schema.org/\"\n  }), \"Json Schema\"), \" val\\xADida\\xADtor which in\\xADcludes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Async \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$ref\"), \" res\\xADo\\xADlu\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cus\\xADtom key\\xADwords/Cus\\xADtom di\\xADalects sup\\xADport\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A DSL to build schemas\")), mdx(\"p\", null, \"Com\\xADbin\\xADing Vert.x Json Schema and Vert.x Web Val\\xADi\\xADda\\xADtion you can eas\\xADily val\\xADi\\xADdate HTTP re\\xADquests:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"ValidationHandler handler = ValidationHandler\\n  .builder(schemaParser)\\n  .pathParameter(Parameters.param(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"myPathParam\\\"\"), \", stringSchema()))\\n  .queryParameter(Parameters.optionalParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"myQueryParam\\\"\"), \", intSchema()))\\n  .body(Bodies.json(Schemas.ref(JsonPointer.fromURI(URI.create(\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"some_schema.json\\\"\"), \"\\n  )))))\\n  .build();\\n\\nrouter.post(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/{myPathParam}\\\"\"), \").handler(handler);\\n\")), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-validation/src/main/java/examples/WebValidationExamples.java\"\n  }), \"Web val\\xADi\\xADda\\xADtion ex\\xADam\\xADples\"), \" and pro\\xADvide feed\\xADback on the APIs!\"), mdx(\"p\", null, \"Vert.x Web Val\\xADi\\xADda\\xADtion al\\xADlows you to use Vert.x Web API Ser\\xADvice with\\xADout Vert.x Web API Con\\xADtract:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-api-service/src/main/java/examples\"\n  }), \"Vert.x Web API Ser\\xADvice ex\\xADam\\xADple\")), mdx(\"p\", null, \"You can achieve Con\\xADtract Dri\\xADven de\\xADvel\\xADop\\xADment, with Vert.x Web Ope\\xADnAPI:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RouterFactory.create(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/resources/petstore.yaml\\\"\"), \",\\n  routerFactoryAsyncResult -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (routerFactoryAsyncResult.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success, retrieve the router\"), \"\\n    RouterFactory routerFactory = routerFactoryAsyncResult.result();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// You can enable or disable different features of router factory using RouterFactoryOptions\"), \"\\n    RouterFactoryOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RouterFactoryOptions();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Set the options\"), \"\\n    routerFactory.setOptions(options);\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add an handler to operation listPets\"), \"\\n    routerFactory.operation(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"listPets\\\"\"), \").handler(routingContext -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle listPets operation\"), \"\\n      routingContext.response().setStatusMessage(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Called listPets\\\"\"), \").end();\\n    }).failureHandler(routingContext -> { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add a failure handler to the same operation\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// This is the failure handler\"), \"\\n      Throwable failure = routingContext.failure();\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (failure \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"instanceof\"), \" BadRequestException)\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle Validation Exception\"), \"\\n        routingContext\\n          .response()\\n          .setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"400\"), \")\\n          .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"content-type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")\\n          .end(((BadRequestException)failure).toJson().toBuffer());\\n    });\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add a security handler\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here\"), \"\\n    routerFactory.securityHandler(\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"api_key\\\"\"), \",\\n      JWTAuthHandler.create(jwtAuth)\\n    );\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now you have to generate the router\"), \"\\n    Router router = routerFactory.createRouter();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Vert.x Web Ope\\xADnAPI is the new way to do Vert.x Web API Con\\xADtract, how\\xADever Vert.x Web API Con\\xADtract re\\xADmains sup\\xADported\\nfor the whole life\\xADtime of Vert.x 4 to pro\\xADvide a mi\\xADgra\\xADtion path: we will pro\\xADvide soon a mi\\xADgra\\xADtion guide for Vert.x Web API Con\\xADtract.\"), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-openapi/src/main/java/examples/OpenAPI3Examples.java\"\n  }), \"Web Ope\\xADnAPI ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"sql-client-templates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#sql-client-templates\"\n  })), \"SQL Client templates\"), mdx(\"p\", null, \"SQL Client Tem\\xADplates is a small li\\xADbrary de\\xADsigned to fa\\xADcil\\xADi\\xADtate the ex\\xADe\\xADcu\\xADtion of SQL queries.\"), mdx(\"p\", null, \"Sim\\xADply put you ex\\xADe\\xADcute pre\\xADpared SQL queries with a map in\\xADstead of a tuple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Map<String, Object> parameters = Collections.singletonMap(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \");\\n\\nSqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .execute(parameters)\\n  .onSuccess(users -> {\\n    users.forEach(row -> {\\n      System.out.println(row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"first_name\\\"\"), \") + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + row.getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"last_name\\\"\"), \"));\\n    });\\n  });\\n\")), mdx(\"p\", null, \"A tem\\xADplate can per\\xADform tuple to ob\\xADject map\\xADping for pa\\xADra\\xADme\\xADters and rows.\"), mdx(\"p\", null, \"Here is row map\\xADping using Jack\\xADson Data\\xADbind.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .mapTo(User.class)\\n  .execute(Collections.singletonMap(\\\"id\\\", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \"))\\n  .onSuccess(users -> {\\n    users.forEach(user -> {\\n      System.out.println(user.firstName + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + user.lastName);\\n    });\\n  });\\n\")), mdx(\"p\", null, \"You can also uses Vert.x data ob\\xADjects to gen\\xADer\\xADate map\\xADpers in\\xADstead: when a data ob\\xADject is an\\xADno\\xADtate with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@RowMapped\"), \" a row map\\xADper\\nfunc\\xADtion will be gen\\xADer\\xADated\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@DataObject\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@RowMapped\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"User\"), \" \"), \"{\\n  ...\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Generated by SQL template code generator\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"UserRowMapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implements\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"java\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"util\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"function\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Function\"), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"io\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"vertx\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"sqlclient\"), \".\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Row\"), \", \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"User\"), \"> \"), \"{\\n  ...\\n}\\n\")), mdx(\"p\", null, \"You can then use this map\\xADper in\\xADstead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"User.class\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SqlTemplate\\n  .forQuery(client, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id=#{id}\\\"\"), \")\\n  .mapTo(UserRowMapper.INSTANCE)\\n  .execute(Collections.singletonMap(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \"))\\n  .onSuccess(users -> {\\n    users.forEach(user -> {\\n      System.out.println(user.firstName + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" \\\"\"), \" + user.lastName);\\n    });\\n  });\\n\")), mdx(\"h2\", {\n    \"id\": \"a-new-clustering-spi\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#a-new-clustering-spi\"\n  })), \"A new clustering SPI\"), mdx(\"p\", null, \"This mile\\xADstone in\\xADtro\\xADduces the clus\\xADter\\xADing SPI re\\xADdesign that al\\xADlows to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sim\\xADplify both Vert.x core and clus\\xADter man\\xADager im\\xADple\\xADmen\\xADta\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lever\\xADage ca\\xADpa\\xADbil\\xADi\\xADties of some clus\\xADter man\\xADagers (e.g. data loss pro\\xADtec\\xADtion)\")), mdx(\"p\", null, \"Read the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/RFC:-clustering-SPI-revisited\"\n  }), \"RFC\"), \" doc\\xADu\\xADment if you would like to know more.\"), mdx(\"p\", null, \"As a de\\xADvel\\xADoper, you should not see much dif\\xADfer\\xADence, the Event\\xADBus and Shared data API re\\xADmain un\\xADchanged.\"), mdx(\"p\", null, \"How\\xADever, if you op\\xADer\\xADate a clus\\xADter in pro\\xADduc\\xADtion, you can\\xADnot mix Vert.x 3 and Vert.x 4 nodes.\"), mdx(\"p\", null, \"The fol\\xADlow\\xADing clus\\xADter man\\xADagers im\\xADple\\xADmen\\xADta\\xADtions have been up\\xADdated: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-hazelcast/java/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-hazelcast\")), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-infinispan/java/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-infinispan\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-ignite/java/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-iginite\")), \" (thanks \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/zyclonite\"\n  }), \"Lukas Pret\\xADten\\xADthaler\"), \" for your help).\\nThe \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-zookeeper/java/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-zookeeper\")), \" up\\xADdate will be avail\\xADable in the next re\\xADlease.\"), mdx(\"h2\", {\n    \"id\": \"upgrade-to-infinispan-10-and-ignite-280\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#upgrade-to-infinispan-10-and-ignite-280\"\n  })), \"Upgrade to Infinispan 10 and Ignite 2.8.0\"), mdx(\"p\", null, \"Following-\\u200Bup on the clus\\xADter\\xADing SPI up\\xADdate :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the In\\xADfin\\xADis\\xADpan clus\\xADter man\\xADager now de\\xADpends on In\\xADfin\\xADis\\xADpan 10\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Apache Ig\\xADnite clus\\xADter man\\xADager on 2.8.0\")), mdx(\"h2\", {\n    \"id\": \"complete-refactoring-on-vertx-auth-authnauthz-split\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#complete-refactoring-on-vertx-auth-authnauthz-split\"\n  })), \"Complete refactoring on vertx-auth authn/authz split\"), mdx(\"p\", null, \"Au\\xADthen\\xADti\\xADca\\xADtion has been de\\xADcou\\xADpled from au\\xADtho\\xADriza\\xADtion, all mod\\xADules now im\\xADple\\xADment at least one of the two in\\xADter\\xADfaces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AuthenticationProvider\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AuthorizationProvider\"))), mdx(\"p\", null, \"This im\\xADprove\\xADment pro\\xADvides more flex\\xADi\\xADb\\xADlity such as user au\\xADthen\\xADti\\xADca\\xADtion using a prop\\xADerty file and au\\xADtho\\xADriza\\xADtion against a data\\xADbase.\"), mdx(\"p\", null, \"This mile\\xADstone also in\\xADcludes a few new im\\xADple\\xADmen\\xADta\\xADtions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-ldap\"), \" su\\xADper\\xADsedes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shiro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-authproperties\"), \" su\\xADper\\xADsedes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shiro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-sql\"), \" to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sql-client\"), \"s as source of user data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-auth-webauthn\"), \" pro\\xADvides \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FIDO2\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"webauthn\"), \" au\\xADthen\\xADti\\xADca\\xADtion\")), mdx(\"p\", null, \"Many bug fixes have been done and miss\\xADing fea\\xADtures such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JWK\"), \" ro\\xADta\\xADtion sup\\xADport for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuth2/OIDC\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JWT\"), \" is now im\\xADple\\xADmented.\"), mdx(\"h2\", {\n    \"id\": \"vertx-web-updates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-updates\"\n  })), \"Vertx-web updates\"), mdx(\"p\", null, \"Vert.x-Web also got some up\\xADdates.\"), mdx(\"p\", null, \"The ses\\xADsion han\\xADdler code now al\\xADlows other stor\\xADages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cookie-session-store\"), \" - stores all ses\\xADsion data in a cookie\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"redis-session-store\"), \" - store all ses\\xADsion data in a redis key store data\\xADbase\")), mdx(\"p\", null, \"Ses\\xADsions fol\\xADlows the lat\\xADest OWASP rec\\xADom\\xADmen\\xADda\\xADtions and al\\xADlows to now use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cookieless\"), \" ses\\xADsions, where the ses\\xADsion key is passed in the URL.\"), mdx(\"p\", null, \"Routers are now proxy aware: when en\\xADabled, routers can parse the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Forward\"), \" head\\xADers and re\\xADbind the in\\xADter\\xADnal val\\xADues\\nfor pro\\xADto\\xADcol, host and port for user con\\xADvinience. This is quite use\\xADful when ap\\xADpli\\xADca\\xADtions are de\\xADployed be\\xADhind\\na caching server, which can mod\\xADify the orig\\xADi\\xADnal re\\xADquest.\"), mdx(\"h2\", {\n    \"id\": \"junit-5-support-updates\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#junit-5-support-updates\"\n  })), \"JUnit 5 support updates\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-junit5\"), \" mod\\xADule has had the fol\\xADlow\\xADing up\\xADdates since the last mile\\xADstone.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes#split-the-core-implementation-and-extensions\"\n  }), \"The in\\xADter\\xADnals have been refac\\xADtored\"), \" to split the im\\xADple\\xADmen\\xADta\\xADtion and ex\\xADten\\xADsions around a service-\\u200Bprovider in\\xADter\\xADface.\\nWhile this is largely trans\\xADpar\\xADent in terms of API, you need to be aware that:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Vertx pa\\xADra\\xADme\\xADter should be placed be\\xADfore any pa\\xADra\\xADme\\xADter that re\\xADquires it for cre\\xADation, such as when in\\xADject\\xADing a We\\xADb\\xADClient,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the vertx-\\u200Bjunit5 mod\\xADule now only of\\xADfers APIs for the Vert.x core mod\\xADule (vertx-\\u200Bcore),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/reactiverse/reactiverse-junit5-extensions\"\n  }), \"reactiverse-\\u200Bjunit5-\\u200Bextensions mod\\xADule\"), \" now hosts ex\\xADten\\xADsions that offer extra pa\\xADra\\xADme\\xADter types like We\\xADb\\xADClient,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Rx\\xADJava 1 and 2 bind\\xADings are now of\\xADfered as vertx-\\u200Bjunit5-\\u200Brx-java and vertx-\\u200Bjunit5-\\u200Brx-java2 mod\\xADules in the vertx-\\u200Bjunit5-\\u200Bextensions repos\\xADi\\xADtory.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"succeeding()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"failing()\"), \" meth\\xADods in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"VertxTestContext\"), \" have been dep\\xADre\\xADcated to im\\xADprove er\\xADgonom\\xADics, you should in\\xADstead use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"succeedingThenComplete()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"failingThenComplete()\"), \".\")), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone4-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the fifth mile\\xADstone of Vert.x 4, you can of course ex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"p\", null, \"You can also read the pre\\xADvi\\xADous mile\\xADstone an\\xADnounces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-4-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-3-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-2-\\u200Breleased\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released\"\n  }), \"https://vertx.io/blog/eclipse-\\u200Bvert-x-4-\\u200Bmilestone-1-\\u200Breleased\"))), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone5\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone5/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0-\\u200Bmilestone5 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the fifth 4.0 mile­stone re­lease of Eclipse Vert.x.</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple that\nwant to try it and pro­vide feed­back.</p><h2 id=\"new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#new-kids-on-the-block-json-schema-web-validation-and-web-openapi\"></a>New kids on the block: Json Schema, Web Validation and Web OpenAPI</h2><p>we de­cide to take HTTP re­quest val­i­da­tion in <code>vertx-web</code> and Con­tract Dri­ven de­vel­op­ment using <a href=\"https://github.com/OAI/OpenAPI-Specification\">Ope­nAPI</a>\nto a next level in Vert.x 4, allow us to in­tro­duce:</p><ul><li><a href=\"https://github.com/eclipse-vertx/vertx-json-schema\">Vert.x Json Schema</a>: Ex­ten­si­ble sync/async json-​schema val­ida­tor de­signed for Vert.x JSON types, sup­port­ing Json Schema Draft-​7 and Ope­nAPI di­alect.</li><li><a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-validation\">Vert.x Web Val­i­da­tion</a>: Ex­ten­si­ble sync/async HTTP re­quest val­ida­tor, pro­vid­ing a DSL to de­scribe ex­pected HTTP re­quests.</li><li><a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-openapi\">Vert.x Web Ope­nAPI</a>: New sup­port for Con­tract Dri­ven de­vel­op­ment based on Ope­nAPI</li></ul><p>Vert.x Json Schema is a pow­er­ful <a href=\"https://json-schema.org/\">Json Schema</a> val­ida­tor which in­cludes:</p><ul><li>Async <code>$ref</code> res­o­lu­tion</li><li>Cus­tom key­words/Cus­tom di­alects sup­port</li><li>A DSL to build schemas</li></ul><p>Com­bin­ing Vert.x Json Schema and Vert.x Web Val­i­da­tion you can eas­ily val­i­date HTTP re­quests:</p><pre><code class=\"hljs language-java\">ValidationHandler handler = ValidationHandler\n  .builder(schemaParser)\n  .pathParameter(Parameters.param(<span class=\"hljs-string\">&quot;myPathParam&quot;</span>, stringSchema()))\n  .queryParameter(Parameters.optionalParam(<span class=\"hljs-string\">&quot;myQueryParam&quot;</span>, intSchema()))\n  .body(Bodies.json(Schemas.ref(JsonPointer.fromURI(URI.create(\n    <span class=\"hljs-string\">&quot;some_schema.json&quot;</span>\n  )))))\n  .build();\n\nrouter.post(<span class=\"hljs-string\">&quot;/{myPathParam}&quot;</span>).handler(handler);\n</code></pre><p>Check out the <a href=\"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-validation/src/main/java/examples/WebValidationExamples.java\">Web val­i­da­tion ex­am­ples</a> and pro­vide feed­back on the APIs!</p><p>Vert.x Web Val­i­da­tion al­lows you to use Vert.x Web API Ser­vice with­out Vert.x Web API Con­tract:\n<a href=\"https://github.com/vert-x3/vertx-web/tree/master/vertx-web-api-service/src/main/java/examples\">Vert.x Web API Ser­vice ex­am­ple</a></p><p>You can achieve Con­tract Dri­ven de­vel­op­ment, with Vert.x Web Ope­nAPI:</p><pre><code class=\"hljs language-java\">RouterFactory.create(vertx, <span class=\"hljs-string\">&quot;src/main/resources/petstore.yaml&quot;</span>,\n  routerFactoryAsyncResult -&gt; {\n  <span class=\"hljs-keyword\">if</span> (routerFactoryAsyncResult.succeeded()) {\n    <span class=\"hljs-comment\">// Spec loaded with success, retrieve the router</span>\n    RouterFactory routerFactory = routerFactoryAsyncResult.result();\n    <span class=\"hljs-comment\">// You can enable or disable different features of router factory using RouterFactoryOptions</span>\n    RouterFactoryOptions options = <span class=\"hljs-keyword\">new</span> RouterFactoryOptions();\n    <span class=\"hljs-comment\">// Set the options</span>\n    routerFactory.setOptions(options);\n    <span class=\"hljs-comment\">// Add an handler to operation listPets</span>\n    routerFactory.operation(<span class=\"hljs-string\">&quot;listPets&quot;</span>).handler(routingContext -&gt; {\n      <span class=\"hljs-comment\">// Handle listPets operation</span>\n      routingContext.response().setStatusMessage(<span class=\"hljs-string\">&quot;Called listPets&quot;</span>).end();\n    }).failureHandler(routingContext -&gt; { <span class=\"hljs-comment\">// Add a failure handler to the same operation</span>\n      <span class=\"hljs-comment\">// This is the failure handler</span>\n      Throwable failure = routingContext.failure();\n      <span class=\"hljs-keyword\">if</span> (failure <span class=\"hljs-keyword\">instanceof</span> BadRequestException)\n        <span class=\"hljs-comment\">// Handle Validation Exception</span>\n        routingContext\n          .response()\n          .setStatusCode(<span class=\"hljs-number\">400</span>)\n          .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-string\">&quot;application/json&quot;</span>)\n          .end(((BadRequestException)failure).toJson().toBuffer());\n    });\n\n    <span class=\"hljs-comment\">// Add a security handler</span>\n    <span class=\"hljs-comment\">// Handle security here</span>\n    routerFactory.securityHandler(\n      <span class=\"hljs-string\">&quot;api_key&quot;</span>,\n      JWTAuthHandler.create(jwtAuth)\n    );\n\n    <span class=\"hljs-comment\">// Now you have to generate the router</span>\n    Router router = routerFactory.createRouter();\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n  }\n});\n</code></pre><p>Vert.x Web Ope­nAPI is the new way to do Vert.x Web API Con­tract, how­ever Vert.x Web API Con­tract re­mains sup­ported\nfor the whole life­time of Vert.x 4 to pro­vide a mi­gra­tion path: we will pro­vide soon a mi­gra­tion guide for Vert.x Web API Con­tract.</p><p>Check out the <a href=\"https://github.com/vert-x3/vertx-web/blob/master/vertx-web-openapi/src/main/java/examples/OpenAPI3Examples.java\">Web Ope­nAPI ex­am­ples</a></p><h2 id=\"sql-client-templates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#sql-client-templates\"></a>SQL Client templates</h2><p>SQL Client Tem­plates is a small li­brary de­signed to fa­cil­i­tate the ex­e­cu­tion of SQL queries.</p><p>Sim­ply put you ex­e­cute pre­pared SQL queries with a map in­stead of a tuple:</p><pre><code class=\"hljs language-java\">Map&lt;String, Object&gt; parameters = Collections.singletonMap(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-number\">1</span>);\n\nSqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .execute(parameters)\n  .onSuccess(users -&gt; {\n    users.forEach(row -&gt; {\n      System.out.println(row.getString(<span class=\"hljs-string\">&quot;first_name&quot;</span>) + <span class=\"hljs-string\">&quot; &quot;</span> + row.getString(<span class=\"hljs-string\">&quot;last_name&quot;</span>));\n    });\n  });\n</code></pre><p>A tem­plate can per­form tuple to ob­ject map­ping for pa­ra­me­ters and rows.</p><p>Here is row map­ping using Jack­son Data­bind.</p><pre><code class=\"hljs language-java\">SqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .mapTo(User.class)\n  .execute(Collections.singletonMap(&quot;id&quot;, <span class=\"hljs-number\">1</span>))\n  .onSuccess(users -&gt; {\n    users.forEach(user -&gt; {\n      System.out.println(user.firstName + <span class=\"hljs-string\">&quot; &quot;</span> + user.lastName);\n    });\n  });\n</code></pre><p>You can also uses Vert.x data ob­jects to gen­er­ate map­pers in­stead: when a data ob­ject is an­no­tate with <code>@RowMapped</code> a row map­per\nfunc­tion will be gen­er­ated</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@DataObject</span>\n<span class=\"hljs-meta\">@RowMapped</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> </span>{\n  ...\n}\n\n<span class=\"hljs-comment\">// Generated by SQL template code generator</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserRowMapper</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">util</span>.<span class=\"hljs-title\">function</span>.<span class=\"hljs-title\">Function</span>&lt;<span class=\"hljs-title\">io</span>.<span class=\"hljs-title\">vertx</span>.<span class=\"hljs-title\">sqlclient</span>.<span class=\"hljs-title\">Row</span>, <span class=\"hljs-title\">User</span>&gt; </span>{\n  ...\n}\n</code></pre><p>You can then use this map­per in­stead of <code>User.class</code></p><pre><code class=\"hljs language-java\">SqlTemplate\n  .forQuery(client, <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=#{id}&quot;</span>)\n  .mapTo(UserRowMapper.INSTANCE)\n  .execute(Collections.singletonMap(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-number\">1</span>))\n  .onSuccess(users -&gt; {\n    users.forEach(user -&gt; {\n      System.out.println(user.firstName + <span class=\"hljs-string\">&quot; &quot;</span> + user.lastName);\n    });\n  });\n</code></pre><h2 id=\"a-new-clustering-spi\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#a-new-clustering-spi\"></a>A new clustering SPI</h2><p>This mile­stone in­tro­duces the clus­ter­ing SPI re­design that al­lows to:</p><ul><li>sim­plify both Vert.x core and clus­ter man­ager im­ple­men­ta­tions</li><li>lever­age ca­pa­bil­i­ties of some clus­ter man­agers (e.g. data loss pro­tec­tion)</li></ul><p>Read the <a href=\"https://github.com/vert-x3/wiki/wiki/RFC:-clustering-SPI-revisited\">RFC</a> doc­u­ment if you would like to know more.</p><p>As a de­vel­oper, you should not see much dif­fer­ence, the Event­Bus and Shared data API re­main un­changed.</p><p>How­ever, if you op­er­ate a clus­ter in pro­duc­tion, you can­not mix Vert.x 3 and Vert.x 4 nodes.</p><p>The fol­low­ing clus­ter man­agers im­ple­men­ta­tions have been up­dated: <a href=\"https://vertx.io/docs/vertx-hazelcast/java/\"><code>vertx-hazelcast</code></a>, <a href=\"https://vertx.io/docs/vertx-infinispan/java/\"><code>vertx-infinispan</code></a> and <a href=\"https://vertx.io/docs/vertx-ignite/java/\"><code>vertx-iginite</code></a> (thanks <a href=\"https://github.com/zyclonite\">Lukas Pret­ten­thaler</a> for your help).\nThe <a href=\"https://vertx.io/docs/vertx-zookeeper/java/\"><code>vertx-zookeeper</code></a> up­date will be avail­able in the next re­lease.</p><h2 id=\"upgrade-to-infinispan-10-and-ignite-280\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#upgrade-to-infinispan-10-and-ignite-280\"></a>Upgrade to Infinispan 10 and Ignite 2.8.0</h2><p>Following-​up on the clus­ter­ing SPI up­date :</p><ul><li>the In­fin­is­pan clus­ter man­ager now de­pends on In­fin­is­pan 10</li><li>the Apache Ig­nite clus­ter man­ager on 2.8.0</li></ul><h2 id=\"complete-refactoring-on-vertx-auth-authnauthz-split\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#complete-refactoring-on-vertx-auth-authnauthz-split\"></a>Complete refactoring on vertx-auth authn/authz split</h2><p>Au­then­ti­ca­tion has been de­cou­pled from au­tho­riza­tion, all mod­ules now im­ple­ment at least one of the two in­ter­faces:</p><ul><li><code>AuthenticationProvider</code></li><li><code>AuthorizationProvider</code></li></ul><p>This im­prove­ment pro­vides more flex­i­b­lity such as user au­then­ti­ca­tion using a prop­erty file and au­tho­riza­tion against a data­base.</p><p>This mile­stone also in­cludes a few new im­ple­men­ta­tions:</p><ul><li><code>vertx-auth-ldap</code> su­per­sedes <code>shiro</code></li><li><code>vertx-authproperties</code> su­per­sedes <code>shiro</code></li><li><code>vertx-auth-sql</code> to use <code>sql-client</code>s as source of user data</li><li><code>vertx-auth-webauthn</code> pro­vides <code>FIDO2</code> <code>webauthn</code> au­then­ti­ca­tion</li></ul><p>Many bug fixes have been done and miss­ing fea­tures such as <code>JWK</code> ro­ta­tion sup­port for <code>OAuth2/OIDC</code>/<code>JWT</code> is now im­ple­mented.</p><h2 id=\"vertx-web-updates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-updates\"></a>Vertx-web updates</h2><p>Vert.x-Web also got some up­dates.</p><p>The ses­sion han­dler code now al­lows other stor­ages:</p><ul><li><code>cookie-session-store</code> - stores all ses­sion data in a cookie</li><li><code>redis-session-store</code> - store all ses­sion data in a redis key store data­base</li></ul><p>Ses­sions fol­lows the lat­est OWASP rec­om­men­da­tions and al­lows to now use <code>cookieless</code> ses­sions, where the ses­sion key is passed in the URL.</p><p>Routers are now proxy aware: when en­abled, routers can parse the <code>Forward</code> head­ers and re­bind the in­ter­nal val­ues\nfor pro­to­col, host and port for user con­vinience. This is quite use­ful when ap­pli­ca­tions are de­ployed be­hind\na caching server, which can mod­ify the orig­i­nal re­quest.</p><h2 id=\"junit-5-support-updates\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#junit-5-support-updates\"></a>JUnit 5 support updates</h2><p>The <code>vertx-junit5</code> mod­ule has had the fol­low­ing up­dates since the last mile­stone.</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes#split-the-core-implementation-and-extensions\">The in­ter­nals have been refac­tored</a> to split the im­ple­men­ta­tion and ex­ten­sions around a service-​provider in­ter­face.\nWhile this is largely trans­par­ent in terms of API, you need to be aware that:<ul><li>the Vertx pa­ra­me­ter should be placed be­fore any pa­ra­me­ter that re­quires it for cre­ation, such as when in­ject­ing a We­b­Client,</li><li>the vertx-​junit5 mod­ule now only of­fers APIs for the Vert.x core mod­ule (vertx-​core),</li><li>the <a href=\"https://github.com/reactiverse/reactiverse-junit5-extensions\">reactiverse-​junit5-​extensions mod­ule</a> now hosts ex­ten­sions that offer extra pa­ra­me­ter types like We­b­Client,</li><li>the Rx­Java 1 and 2 bind­ings are now of­fered as vertx-​junit5-​rx-java and vertx-​junit5-​rx-java2 mod­ules in the vertx-​junit5-​extensions repos­i­tory.</li></ul></li><li>The <code>succeeding()</code> and <code>failing()</code> meth­ods in <code>VertxTestContext</code> have been dep­re­cated to im­prove er­gonom­ics, you should in­stead use <code>succeedingThenComplete()</code> and <code>failingThenComplete()</code>.</li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone4-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the fifth mile­stone of Vert.x 4, you can of course ex­pect more mile­stones to out­line the progress of the ef­fort.</p><p>You can also read the pre­vi­ous mile­stone an­nounces:</p><ul><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-4-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-3-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-2-​released</a></li><li><a href=\"https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released\">https://vertx.io/blog/eclipse-​vert-x-4-​milestone-1-​released</a></li></ul><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone5\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone5/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0-​milestone5 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"web","tf":19},{"term":"us","tf":12},{"term":"mileston","tf":11},{"term":"valid","tf":10},{"term":"http","tf":10},{"term":"api","tf":10},{"term":"provid","tf":9},{"term":"cluster","tf":9},{"term":"releas","tf":8},{"term":"json","tf":8},{"term":"schema","tf":8},{"term":"openapi","tf":8},{"term":"develop","tf":7},{"term":"contract","tf":7},{"term":"data","tf":7},{"term":"updat","tf":7},{"term":"new","tf":6},{"term":"extens","tf":6},{"term":"support","tf":6},{"term":"implement","tf":6},{"term":"modul","tf":6},{"term":"session","tf":6},{"term":"io","tf":6},{"term":"request","tf":5},{"term":"allow","tf":5}]},{"filename":"blog/2020-05-22-eclipse-vert-x-3-9-1-released.mdx","date":"2020-05-22","slug":"eclipse-vert-x-3-9-1-released","meta":{"title":"Eclipse Vert.x 3.9.1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The new version comes with many enhancements including an SQL client for DB2 and out-of-the-box support for HTTP/2 on JDK 8."},"readingTime":{"text":"1 min read","minutes":0.93,"time":55800.00000000001,"words":186},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce that the Eclipse Vert.x ver\\xADsion 3.9.1 has been re\\xADleased.\"), mdx(\"p\", null, \"Among all bug fixes you can find in 3.9.1 these en\\xADhance\\xADment.\"), mdx(\"h2\", {\n    \"id\": \"jdk-8-http2-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#jdk-8-http2-support\"\n  })), \"JDK 8 HTTP/2 support\"), mdx(\"p\", null, \"Pre\\xADvi\\xADously using the Jetty ALPN agent or netty-\\u200Btcnative was re\\xADquired to use HTTP/2 on JDK 8.\"), mdx(\"p\", null, \"TLS ALPN sup\\xADport has been back-\\u200Bported to JDK 8 re\\xADcently and Vert.x has been up\\xADgraded to sup\\xADport it, which means now you\\ncan have HTTP/2 on JDK 8 out of the box. You need to most re\\xADcent ver\\xADsion of Open\\xADJDK 8 or Or\\xADa\\xADcle JDK 8.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.1-Release-Notes\"\n  }), \"3.9.1 re\\xADlease notes\"), \" can be found on the wiki, as well as the\\nlist of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.1-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.1%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.9.1/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce that the Eclipse Vert.x ver­sion 3.9.1 has been re­leased.</p><p>Among all bug fixes you can find in 3.9.1 these en­hance­ment.</p><h2 id=\"jdk-8-http2-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#jdk-8-http2-support\"></a>JDK 8 HTTP/2 support</h2><p>Pre­vi­ously using the Jetty ALPN agent or netty-​tcnative was re­quired to use HTTP/2 on JDK 8.</p><p>TLS ALPN sup­port has been back-​ported to JDK 8 re­cently and Vert.x has been up­graded to sup­port it, which means now you\ncan have HTTP/2 on JDK 8 out of the box. You need to most re­cent ver­sion of Open­JDK 8 or Or­a­cle JDK 8.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.1-Release-Notes\">3.9.1 re­lease notes</a> can be found on the wiki, as well as the\nlist of <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.1-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.1%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.9.1/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"jdk","tf":5},{"term":"releas","tf":3},{"term":"http","tf":3},{"term":"support","tf":3},{"term":"us","tf":3},{"term":"avail","tf":3},{"term":"version","tf":2},{"term":"alpn","tf":2},{"term":"recent","tf":2},{"term":"docker","tf":2},{"term":"distribut","tf":2},{"term":"extrem","tf":1},{"term":"pleas","tf":1},{"term":"announc","tf":1},{"term":"among","tf":1},{"term":"bug","tf":1},{"term":"fix","tf":1},{"term":"find","tf":1},{"term":"enhanc","tf":1},{"term":"previous","tf":1},{"term":"jetti","tf":1},{"term":"agent","tf":1},{"term":"netti","tf":1},{"term":"tcnativ","tf":1},{"term":"requir","tf":1}]},{"filename":"blog/2020-04-02-eclipse-vert-x-3-9-0-released.mdx","date":"2020-04-02","slug":"eclipse-vert-x-3-9-0-released","meta":{"title":"Eclipse Vert.x 3.9.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"New features include fluent queries in SQL clients, a new Redis client, an updated Kafka client, an improved Future API, and many more things."},"readingTime":{"text":"3 min read","minutes":2.83,"time":169800,"words":566},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce that the Eclipse Vert.x ver\\xADsion 3.9.0 has been re\\xADleased.\"), mdx(\"h2\", {\n    \"id\": \"sql-client-fluent-queries\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#sql-client-fluent-queries\"\n  })), \"SQL Client fluent queries\"), mdx(\"p\", null, \"The query API be\\xADcomes flu\\xADent with the ad\\xADdi\\xADtion of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Query\"), \" API for queries cre\\xADation and con\\xADfig\\xADu\\xADra\\xADtion.\"), mdx(\"p\", null, \"Col\\xADlec\\xADtors query now be\\xADcomes part of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Query\"), \" in\\xADter\\xADface.\"), mdx(\"p\", null, \"This is a break\\xADing API change done under the tech pre\\xADview sta\\xADtus given that SQL client is a Vert.x 4 fea\\xADture back-\\u200Bported to Vert.x 3.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"client.prepareQuery(sql).execute(tuple, ar -> ...);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// With a collector\"), \"\\nclient.preparedQuery(sql).collecting(Collectors.toList()).execute(tuple, ar -> ...);\\n\")), mdx(\"p\", null, \"You can read more about this new fea\\xADture \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes#fluent-query-api\"\n  }), \"here\"), \".\"), mdx(\"h2\", {\n    \"id\": \"redis-client-backport\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#redis-client-backport\"\n  })), \"Redis client backport\"), mdx(\"p\", null, \"For Vert.x 4.0 we are doing a full re\\xADboot to the redis client. The func\\xADtion\\xADal\\xADity for the new client is ready to test on the mas\\xADter branch. In order to give users the op\\xADpor\\xADtu\\xADnity to test and make the up\\xADcom\\xADing client even bet\\xADter it has been back\\xADported to the 3.9.0 re\\xADlease. The new client will allow users to con\\xADnect to a sin\\xADgle node, sen\\xADtinel or clus\\xADter of redis nodes. The eas\\xADi\\xADest way to start is:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Redis.createClient(\\n      vertx,\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RedisOptions()\\n        .setConnectionString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"redis://localhost:7006\\\"\"), \"))\\n      .send(Request.cmd(Command.PING), send -> {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (send.succeeded()) {\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Should have received a pong...\"), \"\\n        }\\n      });\\n\")), mdx(\"h2\", {\n    \"id\": \"same-site-cookies\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#same-site-cookies\"\n  })), \"Same-site cookies\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tools.ietf.org/html/draft-west-first-party-cookies-07\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"SameSite\"), \" Cookie\"), \" pol\\xADicy has been added to the HTTP Server Cook\\xADies.\"), mdx(\"p\", null, \"This is also ap\\xADplic\\xADa\\xADble to web which al\\xADlows cookie ses\\xADsions to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SameSite\"), \" cook\\xADies:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SessionHandler.create(store)\\n  .setCookieSameSite(CookieSameSite.STRICT);\\n\")), mdx(\"p\", null, \"Same-\\u200Bsite cook\\xADies let servers re\\xADquire that a cookie shouldn\\u2019t be sent with cross-\\u200Bsite (where Site is de\\xADfined by the reg\\xADis\\xADtra\\xADble do\\xADmain) re\\xADquests,\\nwhich pro\\xADvides some pro\\xADtec\\xADtion against cross-\\u200Bsite re\\xADquest forgery at\\xADtacks (CSRF).\"), mdx(\"h2\", {\n    \"id\": \"kafka-client-upgrade\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#kafka-client-upgrade\"\n  })), \"Kafka client upgrade\"), mdx(\"p\", null, \"The Kafka client has been up\\xADgraded to Kafka 2.4.0 .\"), mdx(\"p\", null, \"Our re\\xADac\\xADtive client ex\\xADposes the Kafka Admin API. As of 2.4.0 this API has been re\\xADplaced by a new Kafka Admin API and there\\xADfore\\nthe Vert.x Kafka Admin API changes, e.g list\\xADing con\\xADsumers groups\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"adminClient.listConsumerGroups(ar -> {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ConsumerGroups= \\\"\"), \" + ar.result());\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"future-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#future-api\"\n  })), \"Future API\"), mdx(\"p\", null, \"With the re\\xADcent ad\\xADdi\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future#onComplete(...)\"), \" sup\\xADport\\xADing sev\\xADeral han\\xADdlers per \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" in 3.9 made the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future#setHandler(...)\"), \" method feel awk\\xADward. In\\xADdeed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setHandler\"), \" con\\xADveys the mean\\xADing that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" man\\xADages\\na sin\\xADgle han\\xADdler. In 3.9 we dep\\xADre\\xADcate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future#setHandler\"), \" in favor of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future#onComplete\"), \".\"), mdx(\"h2\", {\n    \"id\": \"edns-disabled-by-default\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#edns-disabled-by-default\"\n  })), \"EDNS disabled by default\"), mdx(\"p\", null, \"EDNS is an ex\\xADten\\xADsion mech\\xADa\\xADnism for DNS (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://fr.wikipedia.org/wiki/EDNS\"\n  }), \"https://fr.wikipedia.org/wiki/EDNS\"), \") that should be dis\\xADabled by de\\xADfault. It might\\ncause un\\xADwanted issue and should be dis\\xADabled by de\\xADfault.\"), mdx(\"h2\", {\n    \"id\": \"auth-deprecation-warnings\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#auth-deprecation-warnings\"\n  })), \"Auth Deprecation warnings\"), mdx(\"p\", null, \"As of 3.9.0 many APIs will be start warn\\xADing about dep\\xADre\\xADca\\xADtions. There is a big refac\\xADtor\\xADing and some break\\xADing API changes com\\xADing\\non 4.0.0 and these warn\\xADings are just to give users a heads up that API will change on the up\\xADcom\\xADing ver\\xADsion.\"), mdx(\"p\", null, \"For more in\\xADfor\\xADma\\xADtion about the up\\xADcom\\xADing 4.0 changes you can read \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"4.0.0-\\u200BDeprecations-and-breaking-changes\")), mdx(\"h2\", {\n    \"id\": \"dependency-upgrades\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#dependency-upgrades\"\n  })), \"Dependency upgrades\"), mdx(\"p\", null, \"In 3.9 we up\\xADdate a few ver\\xADsions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Netty 4.1.48.Final\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jack\\xADson 2.10.2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Guava 25.1-jre\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GraphQL Java 14\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.0-Release-Notes\"\n  }), \"3.9.0 re\\xADlease notes\"), \" can be found on the wiki, as well as the\\nlist of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.9.0/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce that the Eclipse Vert.x ver­sion 3.9.0 has been re­leased.</p><h2 id=\"sql-client-fluent-queries\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#sql-client-fluent-queries\"></a>SQL Client fluent queries</h2><p>The query API be­comes flu­ent with the ad­di­tion of a <code>Query</code> API for queries cre­ation and con­fig­u­ra­tion.</p><p>Col­lec­tors query now be­comes part of the <code>Query</code> in­ter­face.</p><p>This is a break­ing API change done under the tech pre­view sta­tus given that SQL client is a Vert.x 4 fea­ture back-​ported to Vert.x 3.</p><pre><code class=\"hljs language-java\">client.prepareQuery(sql).execute(tuple, ar -&gt; ...);\n\n<span class=\"hljs-comment\">// With a collector</span>\nclient.preparedQuery(sql).collecting(Collectors.toList()).execute(tuple, ar -&gt; ...);\n</code></pre><p>You can read more about this new fea­ture <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes#fluent-query-api\">here</a>.</p><h2 id=\"redis-client-backport\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#redis-client-backport\"></a>Redis client backport</h2><p>For Vert.x 4.0 we are doing a full re­boot to the redis client. The func­tion­al­ity for the new client is ready to test on the mas­ter branch. In order to give users the op­por­tu­nity to test and make the up­com­ing client even bet­ter it has been back­ported to the 3.9.0 re­lease. The new client will allow users to con­nect to a sin­gle node, sen­tinel or clus­ter of redis nodes. The eas­i­est way to start is:</p><pre><code class=\"hljs language-java\">Redis.createClient(\n      vertx,\n      <span class=\"hljs-keyword\">new</span> RedisOptions()\n        .setConnectionString(<span class=\"hljs-string\">&quot;redis://localhost:7006&quot;</span>))\n      .send(Request.cmd(Command.PING), send -&gt; {\n        <span class=\"hljs-keyword\">if</span> (send.succeeded()) {\n          <span class=\"hljs-comment\">// Should have received a pong...</span>\n        }\n      });\n</code></pre><h2 id=\"same-site-cookies\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#same-site-cookies\"></a>Same-site cookies</h2><p><a href=\"https://tools.ietf.org/html/draft-west-first-party-cookies-07\"><code>SameSite</code> Cookie</a> pol­icy has been added to the HTTP Server Cook­ies.</p><p>This is also ap­plic­a­ble to web which al­lows cookie ses­sions to use <code>SameSite</code> cook­ies:</p><pre><code class=\"hljs language-java\">SessionHandler.create(store)\n  .setCookieSameSite(CookieSameSite.STRICT);\n</code></pre><p>Same-​site cook­ies let servers re­quire that a cookie shouldn’t be sent with cross-​site (where Site is de­fined by the reg­is­tra­ble do­main) re­quests,\nwhich pro­vides some pro­tec­tion against cross-​site re­quest forgery at­tacks (CSRF).</p><h2 id=\"kafka-client-upgrade\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#kafka-client-upgrade\"></a>Kafka client upgrade</h2><p>The Kafka client has been up­graded to Kafka 2.4.0 .</p><p>Our re­ac­tive client ex­poses the Kafka Admin API. As of 2.4.0 this API has been re­placed by a new Kafka Admin API and there­fore\nthe Vert.x Kafka Admin API changes, e.g list­ing con­sumers groups</p><pre><code class=\"hljs language-java\">adminClient.listConsumerGroups(ar -&gt; {\n    System.out.println(<span class=\"hljs-string\">&quot;ConsumerGroups= &quot;</span> + ar.result());\n});\n</code></pre><h2 id=\"future-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#future-api\"></a>Future API</h2><p>With the re­cent ad­di­tion of <code>Future#onComplete(...)</code> sup­port­ing sev­eral han­dlers per <code>Future</code> in 3.9 made the\n<code>Future#setHandler(...)</code> method feel awk­ward. In­deed <code>setHandler</code> con­veys the mean­ing that the <code>Future</code> man­ages\na sin­gle han­dler. In 3.9 we dep­re­cate <code>Future#setHandler</code> in favor of <code>Future#onComplete</code>.</p><h2 id=\"edns-disabled-by-default\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#edns-disabled-by-default\"></a>EDNS disabled by default</h2><p>EDNS is an ex­ten­sion mech­a­nism for DNS (<a href=\"https://fr.wikipedia.org/wiki/EDNS\">https://fr.wikipedia.org/wiki/EDNS</a>) that should be dis­abled by de­fault. It might\ncause un­wanted issue and should be dis­abled by de­fault.</p><h2 id=\"auth-deprecation-warnings\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#auth-deprecation-warnings\"></a>Auth Deprecation warnings</h2><p>As of 3.9.0 many APIs will be start warn­ing about dep­re­ca­tions. There is a big refac­tor­ing and some break­ing API changes com­ing\non 4.0.0 and these warn­ings are just to give users a heads up that API will change on the up­com­ing ver­sion.</p><p>For more in­for­ma­tion about the up­com­ing 4.0 changes you can read <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">4.0.0-​Deprecations-and-breaking-changes</a></p><h2 id=\"dependency-upgrades\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#dependency-upgrades\"></a>Dependency upgrades</h2><p>In 3.9 we up­date a few ver­sions:</p><ul><li>Netty 4.1.48.Final</li><li>Jack­son 2.10.2</li><li>Guava 25.1-jre</li><li>GraphQL Java 14</li></ul><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.0-Release-Notes\">3.9.0 re­lease notes</a> can be found on the wiki, as well as the\nlist of <a href=\"https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.9.0/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"client","tf":11},{"term":"api","tf":11},{"term":"chang","tf":7},{"term":"cooki","tf":7},{"term":"kafka","tf":6},{"term":"site","tf":5},{"term":"deprec","tf":5},{"term":"releas","tf":4},{"term":"queri","tf":4},{"term":"break","tf":4},{"term":"new","tf":4},{"term":"user","tf":4},{"term":"version","tf":3},{"term":"redi","tf":3},{"term":"upcom","tf":3},{"term":"will","tf":3},{"term":"upgrad","tf":3},{"term":"admin","tf":3},{"term":"edn","tf":3},{"term":"disabl","tf":3},{"term":"default","tf":3},{"term":"warn","tf":3},{"term":"avail","tf":3},{"term":"sql","tf":2},{"term":"fluent","tf":2}]},{"filename":"blog/2020-03-16-easy-sso-for-vert-x-with-keycloak.mdx","date":"2020-03-16","slug":"easy-sso-for-vert-x-with-keycloak","meta":{"title":"Easy SSO for Vert.x with Keycloak","category":"guides","authors":[{"name":"Thomas Darimont","github_id":"thomasdarimont"}],"summary":"In this blog post, you'll learn how to implement Single Sign-on with OpenID Connect and how to use Keycloak together with Eclipse Vert.x."},"readingTime":{"text":"11 min read","minutes":10.11,"time":606599.9999999999,"words":2022},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TL;DR:\")), mdx(\"p\", null, \"In this blog post you\\u2019ll learn:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to im\\xADple\\xADment Sin\\xADgle Sign-\\u200Bon with OpenID Con\\xADnect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to use Key\\xADcloak\\u2019s OpenID Dis\\xADcov\\xADery to infer OpenID provider con\\xADfig\\xADu\\xADra\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to ob\\xADtain user in\\xADfor\\xADma\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to check for au\\xADtho\\xADriza\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to call a Bearer pro\\xADtected ser\\xADvice with an Ac\\xADcess Token\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to im\\xADple\\xADment a form based lo\\xADgout\")), mdx(\"h2\", {\n    \"id\": \"hello-blog\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#hello-blog\"\n  })), \"Hello Blog\"), mdx(\"p\", null, \"This is my first post in the Vert.x Blog and I must admit that up until now I have never used Vert.x in a real project.\\n\\u201CWhy are you here?\\u201D, you might ask\\u2026 Well I cur\\xADrently have two main hob\\xADbies, learn\\xADing new things and se\\xADcur\\xADing apps with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.keycloak.org/\"\n  }), \"Key\\xADcloak\"), \".\\nSo a few days ago, I stum\\xADbled upon the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=LsaXy7SRXMY&list=PLkeCJDaCC2ZsnySdg04Aq9D9FpAZY6K5D\"\n  }), \"In\\xADtro\\xADduc\\xADtion to Vert.x video se\\xADries on youtube\"), \" by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/infosec812\"\n  }), \"Deven Phillips\"), \" and I was im\\xADme\\xADdi\\xADately hooked. Vert.x was a new thing for me, so the next log\\xADi\\xADcal step was to fig\\xADure out how to se\\xADcure a Vert.x app with Key\\xADcloak.\"), mdx(\"p\", null, \"For this ex\\xADam\\xADple I build a small web app with Vert.x that shows how to im\\xADple\\xADment Sin\\xADgle Sign-\\u200Bon (SSO) with Key\\xADcloak\\nand OpenID Con\\xADnect, ob\\xADtain in\\xADfor\\xADma\\xADtion about the cur\\xADrent user, check for roles, call bearer pro\\xADtected ser\\xADvices and prop\\xADerly han\\xADdling lo\\xADgout.\"), mdx(\"h2\", {\n    \"id\": \"keycloak\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#keycloak\"\n  })), \"Keycloak\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.keycloak.org/\"\n  }), \"Key\\xADcloak\"), \" is a Open Source Iden\\xADtity and Ac\\xADcess Man\\xADage\\xADment so\\xADlu\\xADtion which pro\\xADvides sup\\xADport for OpenID Con\\xADnect\\nbased Singe-\\u200BSign on, among many other things. I briefly looked for ways to se\\xADcur\\xADing a Vert.x app with Key\\xADcloak\\nand quickly found an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/blog/vertx-3-and-keycloak-tutorial/\"\n  }), \"older Vert.x Key\\xADcloak in\\xADte\\xADgra\\xADtion ex\\xADam\\xADple\"), \" in this very blog.\\nWhilst this is a good start for be\\xADgin\\xADners, the ex\\xADam\\xADple con\\xADtains a few is\\xADsues, e.g.:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It uses hard\\xADcoded OpenID provider con\\xADfig\\xADu\\xADra\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fea\\xADtures a very sim\\xADplis\\xADtic in\\xADte\\xADgra\\xADtion (for the sake of sim\\xADplic\\xADity)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No user in\\xADfor\\xADma\\xADtion used\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No lo\\xADgout func\\xADtion\\xADal\\xADity is shown\")), mdx(\"p\", null, \"That some\\xADhow nerd\\xADsniped me a bit and so it came that, after a long day of con\\xADsult\\xADing work, I sat down to cre\\xADate an ex\\xADam\\xADple for a com\\xADplete Key\\xADcloak in\\xADte\\xADgra\\xADtion based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-auth-oauth2/java/\"\n  }), \"Vert.x OpenID Con\\xADnect / OAuth2 Sup\\xADport\"), \".\"), mdx(\"p\", null, \"So let\\u2019s get started!\"), mdx(\"h3\", {\n    \"id\": \"keycloak-setup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#keycloak-setup\"\n  })), \"Keycloak Setup\"), mdx(\"p\", null, \"To se\\xADcure a Vert.x app with Key\\xADcloak we of course need a Key\\xADcloak in\\xADstance. Al\\xADthough \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.keycloak.org/docs/latest/getting_started/\"\n  }), \"Key\\xADcloak has a great get\\xADting started guide\"), \" I wanted to make it a bit eas\\xADier to put every\\xADthing to\\xADgether, there\\xADfore I pre\\xADpared a local Key\\xADcloak docker con\\xADtainer \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx#start-keycloak-with-the-vertx-realm\"\n  }), \"as de\\xADscribed here\"), \" that you can start eas\\xADily, which comes with all the re\\xADquired con\\xADfig\\xADu\\xADra\\xADtion in place.\"), mdx(\"p\", null, \"The pre\\xADcon\\xADfig\\xADured Key\\xADcloak realm named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx\"), \" con\\xADtains a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"demo-client\"), \" for our Vert.x web app and a set\\nof users for test\\xADing.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-haml\"\n  }), \"docker run \\\\\\n  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"it \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"-name vertx-keycloak \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"-rm \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"e KEYCLOAK_USER=admin \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"e KEYCLOAK_PASSWORD=admin \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"e KEYCLOAK_IMPORT=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/tmp/vertx\"), \"-realm.json \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"v $PWD/vertx-realm.\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-symbol\"\n  }), \"json:\"), \"/tmp/vertx-realm.json \\\\\\n\"), \"  -\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"ruby\"\n  }), \"p \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-symbol\"\n  }), \":\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \" \\\\\\n\"), \"  quay.io/keycloak/keycloak:9.0.0\\n\")), mdx(\"h2\", {\n    \"id\": \"vertx-web-app\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-app\"\n  })), \"Vert.x Web App\"), mdx(\"p\", null, \"The sim\\xADple web app con\\xADsists of a sin\\xADgle \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Verticle\"), \", runs on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8090\"), \" and pro\\xADvides a few routes with pro\\xADtected re\\xADsources. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thomasdarimont/vertx-playground/blob/master/keycloak-vertx/src/main/java/demo/MainVerticle.java\"\n  }), \"You can find the com\\xADplete ex\\xADam\\xADple here\"), \".\"), mdx(\"p\", null, \"The web app con\\xADtains the fol\\xADlow\\xADing routes with han\\xADdlers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/\"), \" - The un\\xADpro\\xADtected index page\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/protected\"), \" - The pro\\xADtected page, which shows a greet\\xADing mes\\xADsage, users need to login to ac\\xADcess pages be\\xADneath this path.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/protected/user\"), \" - The pro\\xADtected user page, which shows some in\\xADfor\\xADma\\xADtion about the user.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/protected/admin\"), \" - The pro\\xADtected admin page, which shows some in\\xADfor\\xADma\\xADtion about the admin, only users with role \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"admin\"), \" can ac\\xADcess this page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/protected/userinfo\"), \" - The pro\\xADtected user\\xADinfo page, ob\\xADtains user in\\xADfor\\xADma\\xADtion from the bearer token pro\\xADtected user\\xADinfo end\\xADpoint in Key\\xADcloak.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/logout\"), \" - The pro\\xADtected lo\\xADgout re\\xADsource, which trig\\xADgers the user lo\\xADgout.\")), mdx(\"h3\", {\n    \"id\": \"running-the-app\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#running-the-app\"\n  })), \"Running the app\"), mdx(\"p\", null, \"To run the app, we need to build our app via:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"cd\"), \" keycloak-vertx\\nmvn clean package\\n\")), mdx(\"p\", null, \"This cre\\xADates a runnable jar, which we can run via:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"java -jar target/*.jar\\n\")), mdx(\"p\", null, \"Note, that you need to start Key\\xADcloak, since our app will try to fetch con\\xADfig\\xADu\\xADra\\xADtion from Key\\xADcloak.\"), mdx(\"p\", null, \"If the ap\\xADpli\\xADca\\xADtion is run\\xADning, just browse to: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8090/\"), \".\"), mdx(\"p\", null, \"An ex\\xADam\\xADple in\\xADter\\xADac\\xADtion with the app can be seen in the fol\\xADlow\\xADing gif:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-keycloak-integration/2020-03-07-vertx-keycloak-integration.gif\",\n    \"alt\": \"Vert.x Keycloak Integration Demo\"\n  }))), mdx(\"h3\", {\n    \"id\": \"router-sessionstore-and-csrf-protection\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#router-sessionstore-and-csrf-protection\"\n  })), \"Router, SessionStore and CSRF Protection\"), mdx(\"p\", null, \"We start the con\\xADfig\\xADu\\xADra\\xADtion of our web app by cre\\xADat\\xADing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" where we can add cus\\xADtom han\\xADdler func\\xADtions for our routes.\\nTo prop\\xADerly han\\xADdle the au\\xADthen\\xADti\\xADca\\xADtion state we need to cre\\xADate a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SessionStore\"), \" and at\\xADtach it to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \".\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SessionStore\"), \" is used by our OAuth2/OpenID Con\\xADnect in\\xADfra\\xADstruc\\xADture to as\\xADso\\xADciate au\\xADthen\\xADti\\xADca\\xADtion in\\xADfor\\xADma\\xADtion with a ses\\xADsion.\\nBy the way, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SessionStore\"), \" can also be clus\\xADtered if you need to dis\\xADtrib\\xADute the server-\\u200Bside state.\"), mdx(\"p\", null, \"Note that if you want to keep your server state\\xADless but still want to sup\\xADport clus\\xADter\\xADing,\\nthen you could pro\\xADvide your own im\\xADple\\xADmen\\xADta\\xADtion of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SessionStore\"), \" which stores the ses\\xADsion in\\xADfor\\xADma\\xADtion\\nas an en\\xADcrypted cookie on the Client.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Router router = Router.router(vertx);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Store session information on the server side\"), \"\\nSessionStore sessionStore = LocalSessionStore.create(vertx);\\nSessionHandler sessionHandler = SessionHandler.create(sessionStore);\\nrouter.route().handler(sessionHandler);\\n\")), mdx(\"p\", null, \"In order to pro\\xADtected against CSRF at\\xADtacks it is good prac\\xADtice to pro\\xADtect HTML forms with a CSRF token.\\nWe need this for our lo\\xADgout form that we\\u2019ll see later.\"), mdx(\"p\", null, \"To do this we con\\xADfig\\xADure a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CSRFHandler\"), \" and add it to our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// CSRF handler setup required for logout form\"), \"\\nString csrfSecret = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"zwiebelfische\\\"\"), \";\\nCSRFHandler csrfHandler = CSRFHandler.create(csrfSecret);\\nrouter.route().handler(ctx -> {\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Ensures that the csrf token request parameter is available for the CsrfHandler\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// after the logout form was submitted.\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// See \\\"Handling HTML forms\\\" https://vertx.io/docs/vertx-core/java/#_handling_requests\"), \"\\n            ctx.request().setExpectMultipart(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"true\"), \");\\n            ctx.request().endHandler(v -> csrfHandler.handle(ctx));\\n        }\\n);\\n\")), mdx(\"h3\", {\n    \"id\": \"keycloak-setup-via-openid-connect-discovery\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#keycloak-setup-via-openid-connect-discovery\"\n  })), \"Keycloak Setup via OpenID Connect Discovery\"), mdx(\"p\", null, \"Our app is reg\\xADis\\xADtered as a con\\xADfi\\xADden\\xADtial OpenID Con\\xADnect client with Au\\xADtho\\xADriza\\xADtion Code Flow in Key\\xADcloak,\\nthus we need to con\\xADfig\\xADure \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"client_id\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"client_secret\"), \". Con\\xADfi\\xADden\\xADtial clients are typ\\xADi\\xADcally used\\nfor server-\\u200Bside web ap\\xADpli\\xADca\\xADtions, where one can se\\xADcurely store the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"client_secret\"), \". You can find out more\\nabout\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.keycloak.org/docs/latest/server_admin/index.html#_access-type\"\n  }), \"The dif\\xADfer\\xADent Client Ac\\xADcess Types\"), \" in the Key\\xADcloak doc\\xADu\\xADmen\\xADta\\xADtion.\"), mdx(\"p\", null, \"Since we don\\u2019t want to con\\xADfig\\xADure things like OAuth2 / OpenID Con\\xADnect End\\xADpoints our\\xADselves, we use Key\\xADcloak\\u2019s OpenID Con\\xADnect dis\\xADcov\\xADery end\\xADpoint to infer the nec\\xADes\\xADsary Oauth2 / OpenID Con\\xADnect end\\xADpoint URLs.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"String hostname = System.getProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http.host\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port = Integer.getInteger(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http.port\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8090\"), \");\\nString baseUrl = String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://%s:%d\\\"\"), \", hostname, port);\\nString oauthCallbackPath = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/callback\\\"\"), \";\\n\\nOAuth2ClientOptions clientOptions = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" OAuth2ClientOptions()\\n    .setFlow(OAuth2FlowType.AUTH_CODE)\\n    .setSite(System.getProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"oauth2.issuer\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://localhost:8080/auth/realms/vertx\\\"\"), \"))\\n    .setClientID(System.getProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"oauth2.client_id\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"demo-client\\\"\"), \"))\\n    .setClientSecret(System.getProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"oauth2.client_secret\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1f88bd14-7e7f-45e7-be27-d680da6e48d8\\\"\"), \"));\\n\\nKeycloakAuth.discover(vertx, clientOptions, asyncResult -> {\\n\\n    OAuth2Auth oauth2Auth = asyncResult.result();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (oauth2Auth == \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \") {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"throw\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RuntimeException(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Could not configure Keycloak integration via OpenID Connect Discovery Endpoint. Is Keycloak running?\\\"\"), \");\\n    }\\n\\n    AuthHandler oauth2 = OAuth2AuthHandler.create(oauth2Auth, baseUrl + oauthCallbackPath)\\n        .setupCallback(router.get(oauthCallbackPath))\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Additional scopes: openid for OpenID Connect\"), \"\\n        .addAuthority(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"openid\\\"\"), \");\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// session handler needs access to the authenticated user, otherwise we get an infinite redirect loop\"), \"\\n    sessionHandler.setAuthProvider(oauth2Auth);\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// protect resources beneath /protected/* with oauth2 handler\"), \"\\n    router.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/protected/*\\\"\"), \").handler(oauth2);\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// configure route handlers\"), \"\\n    configureRoutes(router, webClient, oauth2Auth);\\n});\\n\\ngetVertx().createHttpServer().requestHandler(router).listen(port);\\n\")), mdx(\"h3\", {\n    \"id\": \"route-handlers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#route-handlers\"\n  })), \"Route handlers\"), mdx(\"p\", null, \"We con\\xADfig\\xADure our route han\\xADdlers via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"configureRoutes\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"configureRoutes\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Router router, WebClient webClient, OAuth2Auth oauth2Auth)\"), \" \"), \"{\\n\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/\\\"\"), \").handler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \"::handleIndex);\\n\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/protected\\\"\"), \").handler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \"::handleGreet);\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/protected/user\\\"\"), \").handler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \"::handleUserPage);\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/protected/admin\\\"\"), \").handler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \"::handleAdminPage);\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// extract discovered userinfo endpoint url\"), \"\\n    String userInfoUrl =  ((OAuth2AuthProviderImpl)oauth2Auth).getConfig().getUserInfoPath();\\n    router.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/protected/userinfo\\\"\"), \").handler(createUserInfoHandler(webClient, userInfoUrl));\\n\\n    router.post(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/logout\\\"\"), \").handler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \"::handleLogout);\\n}\\n\")), mdx(\"p\", null, \"The index han\\xADdler ex\\xADposes an un\\xADpro\\xADtected re\\xADsource:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"handleIndex\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n    respondWithOk(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>Welcome to Vert.x Keycloak Example</h1><br><a href=\\\\\\\"/protected\\\\\\\">Protected</a>\\\"\"), \");\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"extract-user-information-from-the-openid-connect-id-token\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#extract-user-information-from-the-openid-connect-id-token\"\n  })), \"Extract User Information from the OpenID Connect ID Token\"), mdx(\"p\", null, \"Our app ex\\xADposes a sim\\xADple greet\\xADing page which shows some in\\xADfor\\xADma\\xADtion about the user and pro\\xADvides links to other pages.\"), mdx(\"p\", null, \"The user greet\\xADing han\\xADdler is pro\\xADtected by the Key\\xADcloak OAuth2 / OpenID Con\\xADnect in\\xADte\\xADgra\\xADtion. To show in\\xADfor\\xADma\\xADtion about\\nthe cur\\xADrent user, we first need to call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctx.user()\"), \" method to get an user ob\\xADject we can work with.\\nTo ac\\xADcess the OAuth2 token in\\xADfor\\xADma\\xADtion, we need to cast it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OAuth2TokenImpl\"), \".\"), mdx(\"p\", null, \"We can ex\\xADtract the user in\\xADfor\\xADma\\xADtion like the user\\xADname from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IDToken\"), \" ex\\xADposed by the user ob\\xADject via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user.idToken().getString(\\\"preferred_username\\\")\"), \".\\nNote, there are many more claims like (name, email, give\\xADnanme, fam\\xADi\\xADly\\xADname etc.) avail\\xADable. The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://openid.net/specs/openid-connect-core-1_0.html#Claims\"\n  }), \"OpenID Con\\xADnect Core Spec\\xADi\\xADfi\\xADca\\xADtion\"), \" con\\xADtains a list of avail\\xADable claims.\"), mdx(\"p\", null, \"We also gen\\xADer\\xADate a list with links to the other pages which are sup\\xADported:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"handleGreet\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n\\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\\n\\n    String username = oAuth2Token.idToken().getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"preferred_username\\\"\"), \");\\n\\n    String greeting = String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>Hi %s @%s</h1><ul>\\\"\"), \" +\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<li><a href=\\\\\\\"/protected/user\\\\\\\">User Area</a></li>\\\"\"), \" +\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<li><a href=\\\\\\\"/protected/admin\\\\\\\">Admin Area</a></li>\\\"\"), \" +\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<li><a href=\\\\\\\"/protected/userinfo\\\\\\\">User Info (Remote Call)</a></li>\\\"\"), \" +\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"</ul>\\\"\"), \", username, Instant.now());\\n\\n    String logoutForm = createLogoutForm(ctx);\\n\\n    respondWithOk(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", greeting + logoutForm);\\n}\\n\")), mdx(\"p\", null, \"The user page han\\xADdler shows in\\xADfor\\xADma\\xADtion about the cur\\xADrent user:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"handleUserPage\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n\\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\\n\\n    String username = user.idToken().getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"preferred_username\\\"\"), \");\\n    String displayName = oAuth2Token.idToken().getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \");\\n\\n    String content = String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>User Page: %s (%s) @%s</h1><a href=\\\\\\\"/protected\\\\\\\">Protected Area</a>\\\"\"), \",\\n                                   username, displayName, Instant.now());\\n    respondWithOk(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", content);\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"authorization-checking-for-required-roles\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#authorization-checking-for-required-roles\"\n  })), \"Authorization: Checking for Required Roles\"), mdx(\"p\", null, \"Our app ex\\xADposes a sim\\xADple admin page which shows some in\\xADfor\\xADma\\xADtion for ad\\xADmins, which should only be vis\\xADi\\xADble for ad\\xADmins. Thus we re\\xADquire that users must have the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"admin\"), \" realm role in Key\\xADcloak to be able to ac\\xADcess the admin page.\"), mdx(\"p\", null, \"This is done via a call to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user.isAuthorized(\\\"realm:admin\\\", cb)\"), \". The han\\xADdler func\\xADtion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cb\"), \" ex\\xADposes\\nthe re\\xADsult of the au\\xADtho\\xADriza\\xADtion check via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AsyncResult<Boolean> res\"), \". If the cur\\xADrent user has the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"admin\"), \" role then the re\\xADsult is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" oth\\xADer\\xADwise \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"handleAdminPage\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n\\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// check for realm-role \\\"admin\\\"\"), \"\\n    user.isAuthorized(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"realm:admin\\\"\"), \", res -> {\\n\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!res.succeeded() || !res.result()) {\\n            respondWith(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"403\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>Forbidden</h1>\\\"\"), \");\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \";\\n        }\\n\\n        String username = user.idToken().getString(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"preferred_username\\\"\"), \");\\n\\n        String content = String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>Admin Page: %s @%s</h1><a href=\\\\\\\"/protected\\\\\\\">Protected Area</a>\\\"\"), \",\\n                                        username, Instant.now());\\n        respondWithOk(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", content);\\n    });\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"call-services-protected-with-bearer-token\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#call-services-protected-with-bearer-token\"\n  })), \"Call Services protected with Bearer Token\"), mdx(\"p\", null, \"Often we need to call other ser\\xADvices from our web app that are pro\\xADtected via Bearer Au\\xADthen\\xADti\\xADca\\xADtion. This means\\nthat we need a valid \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access token\"), \" to ac\\xADcess a re\\xADsource pro\\xADvided on an\\xADother server.\"), mdx(\"p\", null, \"To demon\\xADstrate this we use Key\\xADcloak\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/userinfo\"), \" end\\xADpoint as a straw man to demon\\xADstrate back\\xADend calls with a bearer token.\"), mdx(\"p\", null, \"We can ob\\xADtain the cur\\xADrent valid \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access token\"), \" via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user.opaqueAccessToken()\"), \".\\nSince we use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebClient\"), \" to call the pro\\xADtected end\\xADpoint, we need to pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access token\"), \"\\nvia the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Authorization\"), \" header by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bearerTokenAuthentication(user.opaqueAccessToken())\"), \"\\nin the cur\\xADrent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpRequest\"), \" ob\\xADject:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" Handler<RoutingContext> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"createUserInfoHandler\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(WebClient webClient, String userInfoUrl)\"), \" \"), \"{\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" (RoutingContext ctx) -> {\\n\\n        OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\\n\\n        URI userInfoEndpointUri = URI.create(userInfoUrl);\\n        webClient\\n            .get(userInfoEndpointUri.getPort(), userInfoEndpointUri.getHost(), userInfoEndpointUri.getPath())\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// use the access token for calls to other services protected via JWT Bearer authentication\"), \"\\n            .bearerTokenAuthentication(user.opaqueAccessToken())\\n            .as(BodyCodec.jsonObject())\\n            .send(ar -> {\\n\\n                \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!ar.succeeded()) {\\n                    respondWith(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"500\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"{}\\\"\"), \");\\n                    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \";\\n                }\\n\\n                JsonObject body = ar.result().body();\\n                respondWithOk(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \", body.encode());\\n            });\\n    };\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"handle-logout\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#handle-logout\"\n  })), \"Handle logout\"), mdx(\"p\", null, \"Now that we got a work\\xADing SSO login with au\\xADtho\\xADriza\\xADtion, it would be great if we would allow users to lo\\xADgout again.\\nTo do this we can lever\\xADage the built-\\u200Bin OpenID Con\\xADnect lo\\xADgout func\\xADtion\\xADal\\xADity which can be called via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"oAuth2Token.logout(cb)\"), \".\"), mdx(\"p\", null, \"The han\\xADdler func\\xADtion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cb\"), \" ex\\xADposes the re\\xADsult of the lo\\xADgout ac\\xADtion via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AsyncResult<Void> res\"), \".\\nIf the lo\\xADgout was suc\\xADcess\\xADfull we destory our ses\\xADsion via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctx.session().destroy()\"), \" and redi\\xADrect the user to the index page.\"), mdx(\"p\", null, \"The lo\\xADgout form is gen\\xADer\\xADated via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createLogoutForm\"), \" method.\"), mdx(\"p\", null, \"As men\\xADtioned ear\\xADlier, we need to pro\\xADtect our lo\\xADgout form with a CSRF token to pre\\xADvent \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://owasp.org/www-community/attacks/csrf\"\n  }), \"CSRF at\\xADtacks\"), \".\"), mdx(\"p\", null, \"Note: If we had end\\xADpoints that would ac\\xADcept data sent to the server, then we\\u2019d need to guard those end\\xADpoints with an CSRF token as well.\"), mdx(\"p\", null, \"We need to ob\\xADtain the gen\\xADer\\xADated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CSRFToken\"), \" and ren\\xADder it into a hid\\xADden form input field that\\u2019s trans\\xADfered via HTTP POST when the lo\\xADgout form is sub\\xADmit\\xADted:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"handleLogout\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n\\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\\n    oAuth2Token.logout(res -> {\\n\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!res.succeeded()) {\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// the user might not have been logged out, to know why:\"), \"\\n            respondWith(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"500\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"text/html\\\"\"), \", String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<h1>Logout failed %s</h1>\\\"\"), \", res.cause()));\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \";\\n        }\\n\\n        ctx.session().destroy();\\n        ctx.response().putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"location\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/?logout=true\\\"\"), \").setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"302\"), \").end();\\n    });\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" String \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"createLogoutForm\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx)\"), \" \"), \"{\\n\\n    String csrfToken = ctx.get(CSRFHandler.DEFAULT_HEADER_NAME);\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<form action=\\\\\\\"/logout\\\\\\\" method=\\\\\\\"post\\\\\\\">\\\"\"), \"\\n            + String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"%s\\\\\\\" value=\\\\\\\"%s\\\\\\\">\\\"\"), \", CSRFHandler.DEFAULT_HEADER_NAME, csrfToken)\\n            + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<button>Logout</button></form>\\\"\"), \";\\n}\\n\")), mdx(\"p\", null, \"Some ad\\xADdi\\xADtional plumb\\xADing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"respondWithOk\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx, String contentType, String content)\"), \" \"), \"{\\n    respondWith(ctx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"200\"), \", contentType, content);\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"respondWith\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(RoutingContext ctx, \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" statusCode, String contentType, String content)\"), \" \"), \"{\\n    ctx.request().response() \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//\"), \"\\n            .putHeader(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"content-type\\\"\"), \", contentType) \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//\"), \"\\n            .setStatusCode(statusCode)\\n            .end(content);\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"more-examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#more-examples\"\n  })), \"More examples\"), mdx(\"p\", null, \"This con\\xADcludes the Key\\xADcloak in\\xADte\\xADgra\\xADtion ex\\xADam\\xADple.\"), mdx(\"p\", null, \"Check out the com\\xADplete ex\\xADam\\xADple in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx\"\n  }), \"keycloak-\\u200Bvertx Ex\\xADam\\xADples Repo\"), \".\"), mdx(\"p\", null, \"Thank you for your time, stay tuned for more up\\xADdates! If you want to learn more about Key\\xADcloak, feel free to reach out to me. You can find me via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/thomasdarimont\"\n  }), \"thomas\\xADda\\xADri\\xADmont on twit\\xADter\"), \".\"), mdx(\"p\", null, \"Happy Hack\\xADing!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><strong>TL;DR:</strong></p><p>In this blog post you’ll learn:</p><ul><li>How to im­ple­ment Sin­gle Sign-​on with OpenID Con­nect</li><li>How to use Key­cloak’s OpenID Dis­cov­ery to infer OpenID provider con­fig­u­ra­tion</li><li>How to ob­tain user in­for­ma­tion</li><li>How to check for au­tho­riza­tion</li><li>How to call a Bearer pro­tected ser­vice with an Ac­cess Token</li><li>How to im­ple­ment a form based lo­gout</li></ul><h2 id=\"hello-blog\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#hello-blog\"></a>Hello Blog</h2><p>This is my first post in the Vert.x Blog and I must admit that up until now I have never used Vert.x in a real project.\n“Why are you here?”, you might ask… Well I cur­rently have two main hob­bies, learn­ing new things and se­cur­ing apps with <a href=\"https://www.keycloak.org/\">Key­cloak</a>.\nSo a few days ago, I stum­bled upon the <a href=\"https://www.youtube.com/watch?v=LsaXy7SRXMY&amp;list=PLkeCJDaCC2ZsnySdg04Aq9D9FpAZY6K5D\">In­tro­duc­tion to Vert.x video se­ries on youtube</a> by <a href=\"https://twitter.com/infosec812\">Deven Phillips</a> and I was im­me­di­ately hooked. Vert.x was a new thing for me, so the next log­i­cal step was to fig­ure out how to se­cure a Vert.x app with Key­cloak.</p><p>For this ex­am­ple I build a small web app with Vert.x that shows how to im­ple­ment Sin­gle Sign-​on (SSO) with Key­cloak\nand OpenID Con­nect, ob­tain in­for­ma­tion about the cur­rent user, check for roles, call bearer pro­tected ser­vices and prop­erly han­dling lo­gout.</p><h2 id=\"keycloak\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#keycloak\"></a>Keycloak</h2><p><a href=\"https://www.keycloak.org/\">Key­cloak</a> is a Open Source Iden­tity and Ac­cess Man­age­ment so­lu­tion which pro­vides sup­port for OpenID Con­nect\nbased Singe-​Sign on, among many other things. I briefly looked for ways to se­cur­ing a Vert.x app with Key­cloak\nand quickly found an <a href=\"https://vertx.io/blog/vertx-3-and-keycloak-tutorial/\">older Vert.x Key­cloak in­te­gra­tion ex­am­ple</a> in this very blog.\nWhilst this is a good start for be­gin­ners, the ex­am­ple con­tains a few is­sues, e.g.:</p><ul><li>It uses hard­coded OpenID provider con­fig­u­ra­tion</li><li>Fea­tures a very sim­plis­tic in­te­gra­tion (for the sake of sim­plic­ity)</li><li>No user in­for­ma­tion used</li><li>No lo­gout func­tion­al­ity is shown</li></ul><p>That some­how nerd­sniped me a bit and so it came that, after a long day of con­sult­ing work, I sat down to cre­ate an ex­am­ple for a com­plete Key­cloak in­te­gra­tion based on <a href=\"https://vertx.io/docs/vertx-auth-oauth2/java/\">Vert.x OpenID Con­nect / OAuth2 Sup­port</a>.</p><p>So let’s get started!</p><h3 id=\"keycloak-setup\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#keycloak-setup\"></a>Keycloak Setup</h3><p>To se­cure a Vert.x app with Key­cloak we of course need a Key­cloak in­stance. Al­though <a href=\"https://www.keycloak.org/docs/latest/getting_started/\">Key­cloak has a great get­ting started guide</a> I wanted to make it a bit eas­ier to put every­thing to­gether, there­fore I pre­pared a local Key­cloak docker con­tainer <a href=\"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx#start-keycloak-with-the-vertx-realm\">as de­scribed here</a> that you can start eas­ily, which comes with all the re­quired con­fig­u­ra­tion in place.</p><p>The pre­con­fig­ured Key­cloak realm named <code>vertx</code> con­tains a <code>demo-client</code> for our Vert.x web app and a set\nof users for test­ing.</p><pre><code class=\"hljs language-haml\">docker run \\\n  -<span class=\"ruby\">it \\\n</span>  -<span class=\"ruby\">-name vertx-keycloak \\\n</span>  -<span class=\"ruby\">-rm \\\n</span>  -<span class=\"ruby\">e KEYCLOAK_USER=admin \\\n</span>  -<span class=\"ruby\">e KEYCLOAK_PASSWORD=admin \\\n</span>  -<span class=\"ruby\">e KEYCLOAK_IMPORT=<span class=\"hljs-regexp\">/tmp/vertx</span>-realm.json \\\n</span>  -<span class=\"ruby\">v $PWD/vertx-realm.<span class=\"hljs-symbol\">json:</span>/tmp/vertx-realm.json \\\n</span>  -<span class=\"ruby\">p <span class=\"hljs-number\">8080</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">8080</span> \\\n</span>  quay.io/keycloak/keycloak:9.0.0\n</code></pre><h2 id=\"vertx-web-app\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-app\"></a>Vert.x Web App</h2><p>The sim­ple web app con­sists of a sin­gle <code>Verticle</code>, runs on <code>http://localhost:8090</code> and pro­vides a few routes with pro­tected re­sources. <a href=\"https://github.com/thomasdarimont/vertx-playground/blob/master/keycloak-vertx/src/main/java/demo/MainVerticle.java\">You can find the com­plete ex­am­ple here</a>.</p><p>The web app con­tains the fol­low­ing routes with han­dlers:</p><ul><li><code>/</code> - The un­pro­tected index page</li><li><code>/protected</code> - The pro­tected page, which shows a greet­ing mes­sage, users need to login to ac­cess pages be­neath this path.</li><li><code>/protected/user</code> - The pro­tected user page, which shows some in­for­ma­tion about the user.</li><li><code>/protected/admin</code> - The pro­tected admin page, which shows some in­for­ma­tion about the admin, only users with role <code>admin</code> can ac­cess this page.</li><li><code>/protected/userinfo</code> - The pro­tected user­info page, ob­tains user in­for­ma­tion from the bearer token pro­tected user­info end­point in Key­cloak.</li><li><code>/logout</code> - The pro­tected lo­gout re­source, which trig­gers the user lo­gout.</li></ul><h3 id=\"running-the-app\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#running-the-app\"></a>Running the app</h3><p>To run the app, we need to build our app via:</p><pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">cd</span> keycloak-vertx\nmvn clean package\n</code></pre><p>This cre­ates a runnable jar, which we can run via:</p><pre><code class=\"hljs language-bash\">java -jar target/*.jar\n</code></pre><p>Note, that you need to start Key­cloak, since our app will try to fetch con­fig­u­ra­tion from Key­cloak.</p><p>If the ap­pli­ca­tion is run­ning, just browse to: <code>http://localhost:8090/</code>.</p><p>An ex­am­ple in­ter­ac­tion with the app can be seen in the fol­low­ing gif:</p><p><img src=\"/images/blog/vertx-keycloak-integration/2020-03-07-vertx-keycloak-integration.gif\" alt=\"Vert.x Keycloak Integration Demo\"/></p><h3 id=\"router-sessionstore-and-csrf-protection\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#router-sessionstore-and-csrf-protection\"></a>Router, SessionStore and CSRF Protection</h3><p>We start the con­fig­u­ra­tion of our web app by cre­at­ing a <code>Router</code> where we can add cus­tom han­dler func­tions for our routes.\nTo prop­erly han­dle the au­then­ti­ca­tion state we need to cre­ate a <code>SessionStore</code> and at­tach it to the <code>Router</code>.\nThe <code>SessionStore</code> is used by our OAuth2/OpenID Con­nect in­fra­struc­ture to as­so­ciate au­then­ti­ca­tion in­for­ma­tion with a ses­sion.\nBy the way, the <code>SessionStore</code> can also be clus­tered if you need to dis­trib­ute the server-​side state.</p><p>Note that if you want to keep your server state­less but still want to sup­port clus­ter­ing,\nthen you could pro­vide your own im­ple­men­ta­tion of a <code>SessionStore</code> which stores the ses­sion in­for­ma­tion\nas an en­crypted cookie on the Client.</p><pre><code class=\"hljs language-java\">Router router = Router.router(vertx);\n\n<span class=\"hljs-comment\">// Store session information on the server side</span>\nSessionStore sessionStore = LocalSessionStore.create(vertx);\nSessionHandler sessionHandler = SessionHandler.create(sessionStore);\nrouter.route().handler(sessionHandler);\n</code></pre><p>In order to pro­tected against CSRF at­tacks it is good prac­tice to pro­tect HTML forms with a CSRF token.\nWe need this for our lo­gout form that we’ll see later.</p><p>To do this we con­fig­ure a <code>CSRFHandler</code> and add it to our <code>Router</code>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// CSRF handler setup required for logout form</span>\nString csrfSecret = <span class=\"hljs-string\">&quot;zwiebelfische&quot;</span>;\nCSRFHandler csrfHandler = CSRFHandler.create(csrfSecret);\nrouter.route().handler(ctx -&gt; {\n            <span class=\"hljs-comment\">// Ensures that the csrf token request parameter is available for the CsrfHandler</span>\n            <span class=\"hljs-comment\">// after the logout form was submitted.</span>\n            <span class=\"hljs-comment\">// See &quot;Handling HTML forms&quot; https://vertx.io/docs/vertx-core/java/#_handling_requests</span>\n            ctx.request().setExpectMultipart(<span class=\"hljs-keyword\">true</span>);\n            ctx.request().endHandler(v -&gt; csrfHandler.handle(ctx));\n        }\n);\n</code></pre><h3 id=\"keycloak-setup-via-openid-connect-discovery\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#keycloak-setup-via-openid-connect-discovery\"></a>Keycloak Setup via OpenID Connect Discovery</h3><p>Our app is reg­is­tered as a con­fi­den­tial OpenID Con­nect client with Au­tho­riza­tion Code Flow in Key­cloak,\nthus we need to con­fig­ure <code>client_id</code> and <code>client_secret</code>. Con­fi­den­tial clients are typ­i­cally used\nfor server-​side web ap­pli­ca­tions, where one can se­curely store the <code>client_secret</code>. You can find out more\nabout<a href=\"https://www.keycloak.org/docs/latest/server_admin/index.html#_access-type\">The dif­fer­ent Client Ac­cess Types</a> in the Key­cloak doc­u­men­ta­tion.</p><p>Since we don’t want to con­fig­ure things like OAuth2 / OpenID Con­nect End­points our­selves, we use Key­cloak’s OpenID Con­nect dis­cov­ery end­point to infer the nec­es­sary Oauth2 / OpenID Con­nect end­point URLs.</p><pre><code class=\"hljs language-java\">String hostname = System.getProperty(<span class=\"hljs-string\">&quot;http.host&quot;</span>, <span class=\"hljs-string\">&quot;localhost&quot;</span>);\n<span class=\"hljs-keyword\">int</span> port = Integer.getInteger(<span class=\"hljs-string\">&quot;http.port&quot;</span>, <span class=\"hljs-number\">8090</span>);\nString baseUrl = String.format(<span class=\"hljs-string\">&quot;http://%s:%d&quot;</span>, hostname, port);\nString oauthCallbackPath = <span class=\"hljs-string\">&quot;/callback&quot;</span>;\n\nOAuth2ClientOptions clientOptions = <span class=\"hljs-keyword\">new</span> OAuth2ClientOptions()\n    .setFlow(OAuth2FlowType.AUTH_CODE)\n    .setSite(System.getProperty(<span class=\"hljs-string\">&quot;oauth2.issuer&quot;</span>, <span class=\"hljs-string\">&quot;http://localhost:8080/auth/realms/vertx&quot;</span>))\n    .setClientID(System.getProperty(<span class=\"hljs-string\">&quot;oauth2.client_id&quot;</span>, <span class=\"hljs-string\">&quot;demo-client&quot;</span>))\n    .setClientSecret(System.getProperty(<span class=\"hljs-string\">&quot;oauth2.client_secret&quot;</span>, <span class=\"hljs-string\">&quot;1f88bd14-7e7f-45e7-be27-d680da6e48d8&quot;</span>));\n\nKeycloakAuth.discover(vertx, clientOptions, asyncResult -&gt; {\n\n    OAuth2Auth oauth2Auth = asyncResult.result();\n\n    <span class=\"hljs-keyword\">if</span> (oauth2Auth == <span class=\"hljs-keyword\">null</span>) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">&quot;Could not configure Keycloak integration via OpenID Connect Discovery Endpoint. Is Keycloak running?&quot;</span>);\n    }\n\n    AuthHandler oauth2 = OAuth2AuthHandler.create(oauth2Auth, baseUrl + oauthCallbackPath)\n        .setupCallback(router.get(oauthCallbackPath))\n        <span class=\"hljs-comment\">// Additional scopes: openid for OpenID Connect</span>\n        .addAuthority(<span class=\"hljs-string\">&quot;openid&quot;</span>);\n\n    <span class=\"hljs-comment\">// session handler needs access to the authenticated user, otherwise we get an infinite redirect loop</span>\n    sessionHandler.setAuthProvider(oauth2Auth);\n\n    <span class=\"hljs-comment\">// protect resources beneath /protected/* with oauth2 handler</span>\n    router.route(<span class=\"hljs-string\">&quot;/protected/*&quot;</span>).handler(oauth2);\n\n    <span class=\"hljs-comment\">// configure route handlers</span>\n    configureRoutes(router, webClient, oauth2Auth);\n});\n\ngetVertx().createHttpServer().requestHandler(router).listen(port);\n</code></pre><h3 id=\"route-handlers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#route-handlers\"></a>Route handlers</h3><p>We con­fig­ure our route han­dlers via <code>configureRoutes</code>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">configureRoutes</span><span class=\"hljs-params\">(Router router, WebClient webClient, OAuth2Auth oauth2Auth)</span> </span>{\n\n    router.get(<span class=\"hljs-string\">&quot;/&quot;</span>).handler(<span class=\"hljs-keyword\">this</span>::handleIndex);\n\n    router.get(<span class=\"hljs-string\">&quot;/protected&quot;</span>).handler(<span class=\"hljs-keyword\">this</span>::handleGreet);\n    router.get(<span class=\"hljs-string\">&quot;/protected/user&quot;</span>).handler(<span class=\"hljs-keyword\">this</span>::handleUserPage);\n    router.get(<span class=\"hljs-string\">&quot;/protected/admin&quot;</span>).handler(<span class=\"hljs-keyword\">this</span>::handleAdminPage);\n\n    <span class=\"hljs-comment\">// extract discovered userinfo endpoint url</span>\n    String userInfoUrl =  ((OAuth2AuthProviderImpl)oauth2Auth).getConfig().getUserInfoPath();\n    router.get(<span class=\"hljs-string\">&quot;/protected/userinfo&quot;</span>).handler(createUserInfoHandler(webClient, userInfoUrl));\n\n    router.post(<span class=\"hljs-string\">&quot;/logout&quot;</span>).handler(<span class=\"hljs-keyword\">this</span>::handleLogout);\n}\n</code></pre><p>The index han­dler ex­poses an un­pro­tected re­source:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">handleIndex</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n    respondWithOk(ctx, <span class=\"hljs-string\">&quot;text/html&quot;</span>, <span class=\"hljs-string\">&quot;&lt;h1&gt;Welcome to Vert.x Keycloak Example&lt;/h1&gt;&lt;br&gt;&lt;a href=\\&quot;/protected\\&quot;&gt;Protected&lt;/a&gt;&quot;</span>);\n}\n</code></pre><h3 id=\"extract-user-information-from-the-openid-connect-id-token\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#extract-user-information-from-the-openid-connect-id-token\"></a>Extract User Information from the OpenID Connect ID Token</h3><p>Our app ex­poses a sim­ple greet­ing page which shows some in­for­ma­tion about the user and pro­vides links to other pages.</p><p>The user greet­ing han­dler is pro­tected by the Key­cloak OAuth2 / OpenID Con­nect in­te­gra­tion. To show in­for­ma­tion about\nthe cur­rent user, we first need to call the <code>ctx.user()</code> method to get an user ob­ject we can work with.\nTo ac­cess the OAuth2 token in­for­ma­tion, we need to cast it to <code>OAuth2TokenImpl</code>.</p><p>We can ex­tract the user in­for­ma­tion like the user­name from the <code>IDToken</code> ex­posed by the user ob­ject via <code>user.idToken().getString(&quot;preferred_username&quot;)</code>.\nNote, there are many more claims like (name, email, give­nanme, fam­i­ly­name etc.) avail­able. The <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Claims\">OpenID Con­nect Core Spec­i­fi­ca­tion</a> con­tains a list of avail­able claims.</p><p>We also gen­er­ate a list with links to the other pages which are sup­ported:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">handleGreet</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\n\n    String username = oAuth2Token.idToken().getString(<span class=\"hljs-string\">&quot;preferred_username&quot;</span>);\n\n    String greeting = String.format(<span class=\"hljs-string\">&quot;&lt;h1&gt;Hi %s @%s&lt;/h1&gt;&lt;ul&gt;&quot;</span> +\n            <span class=\"hljs-string\">&quot;&lt;li&gt;&lt;a href=\\&quot;/protected/user\\&quot;&gt;User Area&lt;/a&gt;&lt;/li&gt;&quot;</span> +\n            <span class=\"hljs-string\">&quot;&lt;li&gt;&lt;a href=\\&quot;/protected/admin\\&quot;&gt;Admin Area&lt;/a&gt;&lt;/li&gt;&quot;</span> +\n            <span class=\"hljs-string\">&quot;&lt;li&gt;&lt;a href=\\&quot;/protected/userinfo\\&quot;&gt;User Info (Remote Call)&lt;/a&gt;&lt;/li&gt;&quot;</span> +\n            <span class=\"hljs-string\">&quot;&lt;/ul&gt;&quot;</span>, username, Instant.now());\n\n    String logoutForm = createLogoutForm(ctx);\n\n    respondWithOk(ctx, <span class=\"hljs-string\">&quot;text/html&quot;</span>, greeting + logoutForm);\n}\n</code></pre><p>The user page han­dler shows in­for­ma­tion about the cur­rent user:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">handleUserPage</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n    String username = user.idToken().getString(<span class=\"hljs-string\">&quot;preferred_username&quot;</span>);\n    String displayName = oAuth2Token.idToken().getString(<span class=\"hljs-string\">&quot;name&quot;</span>);\n\n    String content = String.format(<span class=\"hljs-string\">&quot;&lt;h1&gt;User Page: %s (%s) @%s&lt;/h1&gt;&lt;a href=\\&quot;/protected\\&quot;&gt;Protected Area&lt;/a&gt;&quot;</span>,\n                                   username, displayName, Instant.now());\n    respondWithOk(ctx, <span class=\"hljs-string\">&quot;text/html&quot;</span>, content);\n}\n</code></pre><h3 id=\"authorization-checking-for-required-roles\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#authorization-checking-for-required-roles\"></a>Authorization: Checking for Required Roles</h3><p>Our app ex­poses a sim­ple admin page which shows some in­for­ma­tion for ad­mins, which should only be vis­i­ble for ad­mins. Thus we re­quire that users must have the <code>admin</code> realm role in Key­cloak to be able to ac­cess the admin page.</p><p>This is done via a call to <code>user.isAuthorized(&quot;realm:admin&quot;, cb)</code>. The han­dler func­tion <code>cb</code> ex­poses\nthe re­sult of the au­tho­riza­tion check via the <code>AsyncResult&lt;Boolean&gt; res</code>. If the cur­rent user has the\n<code>admin</code> role then the re­sult is <code>true</code> oth­er­wise <code>false</code>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">handleAdminPage</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n\n    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n    <span class=\"hljs-comment\">// check for realm-role &quot;admin&quot;</span>\n    user.isAuthorized(<span class=\"hljs-string\">&quot;realm:admin&quot;</span>, res -&gt; {\n\n        <span class=\"hljs-keyword\">if</span> (!res.succeeded() || !res.result()) {\n            respondWith(ctx, <span class=\"hljs-number\">403</span>, <span class=\"hljs-string\">&quot;text/html&quot;</span>, <span class=\"hljs-string\">&quot;&lt;h1&gt;Forbidden&lt;/h1&gt;&quot;</span>);\n            <span class=\"hljs-keyword\">return</span>;\n        }\n\n        String username = user.idToken().getString(<span class=\"hljs-string\">&quot;preferred_username&quot;</span>);\n\n        String content = String.format(<span class=\"hljs-string\">&quot;&lt;h1&gt;Admin Page: %s @%s&lt;/h1&gt;&lt;a href=\\&quot;/protected\\&quot;&gt;Protected Area&lt;/a&gt;&quot;</span>,\n                                        username, Instant.now());\n        respondWithOk(ctx, <span class=\"hljs-string\">&quot;text/html&quot;</span>, content);\n    });\n}\n</code></pre><h4 id=\"call-services-protected-with-bearer-token\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#call-services-protected-with-bearer-token\"></a>Call Services protected with Bearer Token</h4><p>Often we need to call other ser­vices from our web app that are pro­tected via Bearer Au­then­ti­ca­tion. This means\nthat we need a valid <code>access token</code> to ac­cess a re­source pro­vided on an­other server.</p><p>To demon­strate this we use Key­cloak’s <code>/userinfo</code> end­point as a straw man to demon­strate back­end calls with a bearer token.</p><p>We can ob­tain the cur­rent valid <code>access token</code> via <code>user.opaqueAccessToken()</code>.\nSince we use a <code>WebClient</code> to call the pro­tected end­point, we need to pass the <code>access token</code>\nvia the <code>Authorization</code> header by call­ing <code>bearerTokenAuthentication(user.opaqueAccessToken())</code>\nin the cur­rent <code>HttpRequest</code> ob­ject:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> Handler&lt;RoutingContext&gt; <span class=\"hljs-title\">createUserInfoHandler</span><span class=\"hljs-params\">(WebClient webClient, String userInfoUrl)</span> </span>{\n\n    <span class=\"hljs-keyword\">return</span> (RoutingContext ctx) -&gt; {\n\n        OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();\n\n        URI userInfoEndpointUri = URI.create(userInfoUrl);\n        webClient\n            .get(userInfoEndpointUri.getPort(), userInfoEndpointUri.getHost(), userInfoEndpointUri.getPath())\n            <span class=\"hljs-comment\">// use the access token for calls to other services protected via JWT Bearer authentication</span>\n            .bearerTokenAuthentication(user.opaqueAccessToken())\n            .as(BodyCodec.jsonObject())\n            .send(ar -&gt; {\n\n                <span class=\"hljs-keyword\">if</span> (!ar.succeeded()) {\n                    respondWith(ctx, <span class=\"hljs-number\">500</span>, <span class=\"hljs-string\">&quot;application/json&quot;</span>, <span class=\"hljs-string\">&quot;{}&quot;</span>);\n                    <span class=\"hljs-keyword\">return</span>;\n                }\n\n                JsonObject body = ar.result().body();\n                respondWithOk(ctx, <span class=\"hljs-string\">&quot;application/json&quot;</span>, body.encode());\n            });\n    };\n}\n</code></pre><h3 id=\"handle-logout\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#handle-logout\"></a>Handle logout</h3><p>Now that we got a work­ing SSO login with au­tho­riza­tion, it would be great if we would allow users to lo­gout again.\nTo do this we can lever­age the built-​in OpenID Con­nect lo­gout func­tion­al­ity which can be called via <code>oAuth2Token.logout(cb)</code>.</p><p>The han­dler func­tion <code>cb</code> ex­poses the re­sult of the lo­gout ac­tion via the <code>AsyncResult&lt;Void&gt; res</code>.\nIf the lo­gout was suc­cess­full we destory our ses­sion via <code>ctx.session().destroy()</code> and redi­rect the user to the index page.</p><p>The lo­gout form is gen­er­ated via the <code>createLogoutForm</code> method.</p><p>As men­tioned ear­lier, we need to pro­tect our lo­gout form with a CSRF token to pre­vent <a href=\"https://owasp.org/www-community/attacks/csrf\">CSRF at­tacks</a>.</p><p>Note: If we had end­points that would ac­cept data sent to the server, then we’d need to guard those end­points with an CSRF token as well.</p><p>We need to ob­tain the gen­er­ated <code>CSRFToken</code> and ren­der it into a hid­den form input field that’s trans­fered via HTTP POST when the lo­gout form is sub­mit­ted:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">handleLogout</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n\n    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();\n    oAuth2Token.logout(res -&gt; {\n\n        <span class=\"hljs-keyword\">if</span> (!res.succeeded()) {\n            <span class=\"hljs-comment\">// the user might not have been logged out, to know why:</span>\n            respondWith(ctx, <span class=\"hljs-number\">500</span>, <span class=\"hljs-string\">&quot;text/html&quot;</span>, String.format(<span class=\"hljs-string\">&quot;&lt;h1&gt;Logout failed %s&lt;/h1&gt;&quot;</span>, res.cause()));\n            <span class=\"hljs-keyword\">return</span>;\n        }\n\n        ctx.session().destroy();\n        ctx.response().putHeader(<span class=\"hljs-string\">&quot;location&quot;</span>, <span class=\"hljs-string\">&quot;/?logout=true&quot;</span>).setStatusCode(<span class=\"hljs-number\">302</span>).end();\n    });\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> String <span class=\"hljs-title\">createLogoutForm</span><span class=\"hljs-params\">(RoutingContext ctx)</span> </span>{\n\n    String csrfToken = ctx.get(CSRFHandler.DEFAULT_HEADER_NAME);\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&lt;form action=\\&quot;/logout\\&quot; method=\\&quot;post\\&quot;&gt;&quot;</span>\n            + String.format(<span class=\"hljs-string\">&quot;&lt;input type=\\&quot;hidden\\&quot; name=\\&quot;%s\\&quot; value=\\&quot;%s\\&quot;&gt;&quot;</span>, CSRFHandler.DEFAULT_HEADER_NAME, csrfToken)\n            + <span class=\"hljs-string\">&quot;&lt;button&gt;Logout&lt;/button&gt;&lt;/form&gt;&quot;</span>;\n}\n</code></pre><p>Some ad­di­tional plumb­ing:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">respondWithOk</span><span class=\"hljs-params\">(RoutingContext ctx, String contentType, String content)</span> </span>{\n    respondWith(ctx, <span class=\"hljs-number\">200</span>, contentType, content);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">respondWith</span><span class=\"hljs-params\">(RoutingContext ctx, <span class=\"hljs-keyword\">int</span> statusCode, String contentType, String content)</span> </span>{\n    ctx.request().response() <span class=\"hljs-comment\">//</span>\n            .putHeader(<span class=\"hljs-string\">&quot;content-type&quot;</span>, contentType) <span class=\"hljs-comment\">//</span>\n            .setStatusCode(statusCode)\n            .end(content);\n}\n</code></pre><h2 id=\"more-examples\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#more-examples\"></a>More examples</h2><p>This con­cludes the Key­cloak in­te­gra­tion ex­am­ple.</p><p>Check out the com­plete ex­am­ple in <a href=\"https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx\">keycloak-​vertx Ex­am­ples Repo</a>.</p><p>Thank you for your time, stay tuned for more up­dates! If you want to learn more about Key­cloak, feel free to reach out to me. You can find me via <a href=\"https://twitter.com/thomasdarimont\">thomas­da­ri­mont on twit­ter</a>.</p><p>Happy Hack­ing!</p>","scope":{}},"tfIdfTerms":[{"term":"keycloak","tf":28},{"term":"user","tf":23},{"term":"app","tf":19},{"term":"openid","tf":17},{"term":"protect","tf":17},{"term":"need","tf":16},{"term":"via","tf":16},{"term":"inform","tf":15},{"term":"connect","tf":14},{"term":"logout","tf":14},{"term":"page","tf":14},{"term":"call","tf":10},{"term":"exampl","tf":10},{"term":"us","tf":9},{"term":"configur","tf":9},{"term":"token","tf":9},{"term":"handler","tf":9},{"term":"access","tf":8},{"term":"web","tf":8},{"term":"show","tf":8},{"term":"endpoint","tf":8},{"term":"provid","tf":7},{"term":"form","tf":7},{"term":"current","tf":7},{"term":"bearer","tf":6}]}],"numPages":16},"__N_SSG":true}