{"pageProps":{"categories":["releases","guides","news"],"category":"guides","page":3,"posts":[{"filename":"blog/2017-12-20-tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build.mdx","date":"2017-12-20","slug":"tcp-client-using-eclipse-vert-x-kotlin-and-gradle-build","meta":{"title":"TCP Client using Eclipse Vert.x, Kotlin and Gradle build","category":"guides","authors":[{"name":"Usman Saleem","github_id":"usmansaleem"}],"summary":"In this blog post, I demonstrate how to write a very simple TCP client that keeps a connection open to a custom-written server in cloud."},"readingTime":{"text":"5 min read","minutes":4.185,"time":251099.99999999997,"words":837},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As part of my hobby project to con\\xADtrol Rasp\\xADber\\xADryPi using Google Home Mini and/or Alexa, I wanted to write a very sim\\xADple TCP client that keeps a con\\xADnec\\xADtion open to one of my cus\\xADtom writ\\xADten server in cloud (I will write an\\xADother blog post to cover the server side on a later date). The re\\xADquire\\xADment of the client is to send a shared se\\xADcret upon con\\xADnect\\xADing and then keep wait\\xADing for mes\\xADsage from server. Vert.x, Kotlin and Gra\\xADdle allow rapid de\\xADvel\\xADop\\xADment of such project. The gen\\xADer\\xADated jar can be ex\\xADe\\xADcuted on Rasp\\xADberry Pi. These steps out\\xADline the project setup and re\\xADlated source code to show\\xADcase a Vert.x and Kotlin project with Gra\\xADdle.\"), mdx(\"h2\", {\n    \"id\": \"project-directory-structure\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#project-directory-structure\"\n  })), \"Project Directory Structure\"), mdx(\"p\", null, \"From com\\xADmand line (or via Win\\xADdows Ex\\xADplorer, what\\xADever you pre\\xADfer to use) cre\\xADate a di\\xADrec\\xADtory for project,for in\\xADstance \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-net-client\"), \". Since we are using Kotlin, we will place all Kotlin files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/main/kotlin\"), \" folder. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/main/resources\"), \" folder will con\\xADtain our log\\xADging con\\xADfig\\xADu\\xADra\\xADtion re\\xADlated files.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-awk\"\n  }), \"cd vertx-net-client\\nmkdir -p src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"kotlin\\nmkdir -p src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"resources\\n\")), mdx(\"h3\", {\n    \"id\": \"project-files\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#project-files\"\n  })), \"Project Files\"), mdx(\"p\", null, \"We need to add fol\\xADlow\\xADing files in the project\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitignore\"), \"\\nIf you want to check your project into git, you may con\\xADsider adding fol\\xADlow\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitignore\"), \" file at root of your project\")), mdx(Gist, {\n    url: \"https://gist.github.com/usmansaleem/b5838484a20cb8b08f236f2265ad7a8e\",\n    mdxType: \"Gist\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"logback.xml\"), \"\\nThis ex\\xADam\\xADple is using slf4j and log\\xADback for log\\xADging. If you de\\xADcide to use it in your project, you may also add fol\\xADlow\\xADing log\\xADback.xml file in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/main/resources\"), \". Mod\\xADify it as per your re\\xADquire\\xADments. This ex\\xADam\\xADple will\\nlog on con\\xADsole.\")), mdx(Gist, {\n    url: \"https://gist.github.com/usmansaleem/750c6d1cad0721b52be2ff00f758fb9f\",\n    mdxType: \"Gist\"\n  }), mdx(\"h2\", {\n    \"id\": \"gradle-setup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#gradle-setup\"\n  })), \"Gradle Setup\"), mdx(\"p\", null, \"We will use Gra\\xADdle build sys\\xADtem for this project. If you don\\u2019t al\\xADready have Gra\\xADdle avail\\xADable on your sys\\xADtem, down\\xADload and unzip gra\\xADdle in a di\\xADrec\\xADtory of your choice (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$GRADLE_HOME\"), \" is used here to rep\\xADre\\xADsent this di\\xADrec\\xADtory). This gra\\xADdle dis\\xADtri\\xADb\\xADu\\xADtion will be used as a start\\xADing point to cre\\xADate Gra\\xADdle wrap\\xADper scripts for our project. These scripts will allow our project to down\\xADload and use cor\\xADrect ver\\xADsion of gra\\xADdle dis\\xADtri\\xADb\\xADu\\xADtion au\\xADto\\xADmat\\xADi\\xADcally with\\xADout mess\\xADing up sys\\xADtem. Re\\xADally use\\xADful when build\\xADing your project on CI tool or on any other de\\xADvel\\xADoper\\u2019s ma\\xADchine.\"), mdx(\"p\", null, \"Run fol\\xADlow\\xADing com\\xADmand in project\\u2019s di\\xADrec\\xADtory\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-variable\"\n  }), \"$GRADLE_HOME\"), \"/bin/gradle wrapper\\n\")), mdx(\"p\", null, \"The above com\\xADmands will gen\\xADer\\xADate fol\\xADlow\\xADing files and di\\xADrec\\xADto\\xADries.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"gradle/  gradlew  gradlew.bat\\n\")), mdx(\"h3\", {\n    \"id\": \"gradle-build-file-buildgradle\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#gradle-build-file-buildgradle\"\n  })), \"Gradle build file \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"build.gradle\")), mdx(\"p\", null, \"Cre\\xADate (and/or copy and mod\\xADify) fol\\xADlow\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" in your project\\u2019s root di\\xADrec\\xADtory. Our ex\\xADam\\xADple gra\\xADdle build file is using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jponge/vertx-gradle-plugin/\"\n  }), \"vertx-\\u200Bgradle-plugin\"), \".\"), mdx(Gist, {\n    url: \"https://gist.github.com/usmansaleem/e723f25b827e0a925eaef2957a80132d\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"In the project di\\xADrec\\xADtory, run fol\\xADlow\\xADing com\\xADmand to down\\xADload local gra\\xADdle dis\\xADtri\\xADb\\xADu\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"./gradlew\\n\")), mdx(\"p\", null, \"(or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\\\\gradlew.bat\"), \" if in Win\\xADdows)\"), mdx(\"p\", null, \"At this stage we should have fol\\xADlow\\xADing file struc\\xADture. This is also a good time to com\\xADmit changes if you are work\\xADing with git.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitignore\"), \"                              \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"build.gradle\"), \"                            \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle/wrapper/gradle-wrapper.jar\"), \"       \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle/wrapper/gradle-wrapper.properties\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradlew\"), \"                                 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradlew.bat\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/main/resources/logback.xml\"))), mdx(\"p\", null, \"Now that our project struc\\xADture is ready, time to add the meat of the project. You may use any IDE of your choice. My pref\\xADer\\xADence is In\\xADtel\\xADliJ IDEA.\"), mdx(\"p\", null, \"Cre\\xADate a new pack\\xADage under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/main/kotlin\"), \". The pack\\xADage name should be adapted from the fol\\xADlow\\xADing sec\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ebnf\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attribute\"\n  }), \"vertx\"), \" {\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attribute\"\n  }), \"    mainVerticle\"), \" = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"info.usmans.blog.vertx.NetClientVerticle\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"From the above ex\\xADam\\xADple, the pack\\xADage name is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"info.usmans.blog.vertx\")), mdx(\"p\", null, \"Add a new Kotlin Class/file in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/main/kotlin/info/usmans/blog/vertx\"), \" as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NetClientVerticle.kt\")), mdx(\"p\", null, \"The con\\xADtents of this class is as fol\\xADlows\"), mdx(Gist, {\n    url: \"https://gist.github.com/usmansaleem/2a176a7b752fcb72f7f31964809696fe\",\n    mdxType: \"Gist\"\n  }), mdx(\"h2\", {\n    \"id\": \"explaining-the-code\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#explaining-the-code\"\n  })), \"Explaining the Code\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fun main(args: Array<String>)\"), \" is not strictly re\\xADquired, it quickly al\\xADlows run\\xADning the Vert.x ver\\xADti\\xADcle from within IDE. You will also no\\xADtice a small hack in the method for set\\xADting sys\\xADtem prop\\xADerty \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx.disableDnsResolver\"), \" which is to avoid a Netty bug that I ob\\xADserved when run\\xADning on Win\\xADdows ma\\xADchine and re\\xADmote server is down. Of course, since we are using vertx-\\u200Bgradle-plugin, we can also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gradle vertxRun\"), \" to run our ver\\xADti\\xADcle. In this case the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main\"), \" method will not get called.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"override fun start()\"), \" method calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fireReconnectTimer\"), \" which in turn calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reconnect\"), \" method. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reconnect\"), \" method con\\xADtains the con\\xADnec\\xADtion logic to server as well as it calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fireReconnectTimer\"), \" if it is un\\xADable to con\\xADnect to server or dis\\xADcon\\xADnects from server. In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reconnect\"), \" method the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"socket.handler\"), \" gets called when server send mes\\xADsage to client.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xl\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"socket\"), \".handler({ \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"data\"), \" ->\"), \"\\n                        logger.info(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Data received: ${data}\\\"\"), \")\\n                        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-doctag\"\n  }), \"TODO:\"), \" Do the work here ...\"), \"\\n               })\\n\")), mdx(\"h2\", {\n    \"id\": \"distributing-the-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#distributing-the-project\"\n  })), \"Distributing the project\"), mdx(\"p\", null, \"To cre\\xADate re\\xADdis\\xADtrib\\xADutable jar, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew shadowJar\"), \" com\\xADmand. Or if using In\\xADtel\\xADliJ: from Gra\\xADdle projects, Tasks, shadow, shad\\xADow\\xADJar (right click run). This com\\xADmand will gen\\xADer\\xADate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./build/libs/vertx-net-client-fat.jar\"), \".\"), mdx(\"h3\", {\n    \"id\": \"executing-the-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#executing-the-client\"\n  })), \"Executing the client\"), mdx(\"p\", null, \"The client jar can be ex\\xADe\\xADcuted using fol\\xADlow\\xADing com\\xADmand:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \" java -DserverHost=127.0.0.1 -DserverPort=8888 -DconnectMessage=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hello\\\"\"), \" -jar vertx-net-client-full.jar\\n\")), mdx(\"p\", null, \"If you wish to use SLF4J for Vert.x in\\xADter\\xADnal log\\xADging, you need to pass sys\\xADtem prop\\xADerty \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx.logger-delegate-factory-class-name\"), \" with value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx.core.logging.SLF4JLogDelegateFactory\"), \". The final com\\xADmand would look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"java -DserverHost=127.0.0.1 -DserverPort=8888 -DconnectMessage=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hello\\\"\"), \" -Dvertx.logger-delegate-factory-class-name=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.vertx.core.logging.SLF4JLogDelegateFactory\\\"\"), \" -jar vertx-net-client-full.jar\\n\")), mdx(\"p\", null, \"You can con\\xADfig\\xADure Vert.x log\\xADging lev\\xADels in log\\xADback.xml file if re\\xADquired.\"), mdx(\"h2\", {\n    \"id\": \"conclusion\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#conclusion\"\n  })), \"Conclusion\"), mdx(\"p\", null, \"This post de\\xADscribes how easy it is to cre\\xADate a sim\\xADple TCP client using Vert.x, Kotlin and Gra\\xADdle build sys\\xADtem. Hope\\xADfully the tech\\xADniques shown here will serve as a start\\xADing point for your next DIY project.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"This post is adapted and re\\xADpro\\xADduced from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://usmans.info/view/blog/tcp_client_using_vertx_kotlin_gradle\"\n  }), \"au\\xADthor\\u2019s blog post\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>As part of my hobby project to con­trol Rasp­ber­ryPi using Google Home Mini and/or Alexa, I wanted to write a very sim­ple TCP client that keeps a con­nec­tion open to one of my cus­tom writ­ten server in cloud (I will write an­other blog post to cover the server side on a later date). The re­quire­ment of the client is to send a shared se­cret upon con­nect­ing and then keep wait­ing for mes­sage from server. Vert.x, Kotlin and Gra­dle allow rapid de­vel­op­ment of such project. The gen­er­ated jar can be ex­e­cuted on Rasp­berry Pi. These steps out­line the project setup and re­lated source code to show­case a Vert.x and Kotlin project with Gra­dle.</p><h2 id=\"project-directory-structure\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#project-directory-structure\"></a>Project Directory Structure</h2><p>From com­mand line (or via Win­dows Ex­plorer, what­ever you pre­fer to use) cre­ate a di­rec­tory for project,for in­stance <code>vertx-net-client</code>. Since we are using Kotlin, we will place all Kotlin files in <code>src/main/kotlin</code> folder. The <code>src/main/resources</code> folder will con­tain our log­ging con­fig­u­ra­tion re­lated files.</p><pre><code class=\"hljs language-awk\">cd vertx-net-client\nmkdir -p src<span class=\"hljs-regexp\">/main/</span>kotlin\nmkdir -p src<span class=\"hljs-regexp\">/main/</span>resources\n</code></pre><h3 id=\"project-files\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#project-files\"></a>Project Files</h3><p>We need to add fol­low­ing files in the project</p><ul><li><code>.gitignore</code>\nIf you want to check your project into git, you may con­sider adding fol­low­ing <code>.gitignore</code> file at root of your project</li></ul><div>...waiting for Gist...</div><ul><li><code>logback.xml</code>\nThis ex­am­ple is using slf4j and log­back for log­ging. If you de­cide to use it in your project, you may also add fol­low­ing log­back.xml file in <code>src/main/resources</code>. Mod­ify it as per your re­quire­ments. This ex­am­ple will\nlog on con­sole.</li></ul><div>...waiting for Gist...</div><h2 id=\"gradle-setup\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#gradle-setup\"></a>Gradle Setup</h2><p>We will use Gra­dle build sys­tem for this project. If you don’t al­ready have Gra­dle avail­able on your sys­tem, down­load and unzip gra­dle in a di­rec­tory of your choice (<code>$GRADLE_HOME</code> is used here to rep­re­sent this di­rec­tory). This gra­dle dis­tri­b­u­tion will be used as a start­ing point to cre­ate Gra­dle wrap­per scripts for our project. These scripts will allow our project to down­load and use cor­rect ver­sion of gra­dle dis­tri­b­u­tion au­to­mat­i­cally with­out mess­ing up sys­tem. Re­ally use­ful when build­ing your project on CI tool or on any other de­vel­oper’s ma­chine.</p><p>Run fol­low­ing com­mand in project’s di­rec­tory</p><pre><code class=\"hljs language-bash\"><span class=\"hljs-variable\">$GRADLE_HOME</span>/bin/gradle wrapper\n</code></pre><p>The above com­mands will gen­er­ate fol­low­ing files and di­rec­to­ries.</p><pre><code class=\"hljs language-bash\">gradle/  gradlew  gradlew.bat\n</code></pre><h3 id=\"gradle-build-file-buildgradle\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#gradle-build-file-buildgradle\"></a>Gradle build file <code>build.gradle</code></h3><p>Cre­ate (and/or copy and mod­ify) fol­low­ing <code>build.gradle</code> in your project’s root di­rec­tory. Our ex­am­ple gra­dle build file is using <a href=\"https://github.com/jponge/vertx-gradle-plugin/\">vertx-​gradle-plugin</a>.</p><div>...waiting for Gist...</div><p>In the project di­rec­tory, run fol­low­ing com­mand to down­load local gra­dle dis­tri­b­u­tion:</p><pre><code class=\"hljs language-bash\">./gradlew\n</code></pre><p>(or <code>.\\gradlew.bat</code> if in Win­dows)</p><p>At this stage we should have fol­low­ing file struc­ture. This is also a good time to com­mit changes if you are work­ing with git.</p><ul><li><code>.gitignore</code>                              </li><li><code>build.gradle</code>                            </li><li><code>gradle/wrapper/gradle-wrapper.jar</code>       </li><li><code>gradle/wrapper/gradle-wrapper.properties</code></li><li><code>gradlew</code>                                 </li><li><code>gradlew.bat</code></li><li><code>src/main/resources/logback.xml</code></li></ul><p>Now that our project struc­ture is ready, time to add the meat of the project. You may use any IDE of your choice. My pref­er­ence is In­tel­liJ IDEA.</p><p>Cre­ate a new pack­age under <code>src/main/kotlin</code>. The pack­age name should be adapted from the fol­low­ing sec­tion of <code>build.gradle</code></p><pre><code class=\"hljs language-ebnf\"><span class=\"hljs-attribute\">vertx</span> {\n<span class=\"hljs-attribute\">    mainVerticle</span> = <span class=\"hljs-string\">&quot;info.usmans.blog.vertx.NetClientVerticle&quot;</span>\n}\n</code></pre><p>From the above ex­am­ple, the pack­age name is <code>info.usmans.blog.vertx</code></p><p>Add a new Kotlin Class/file in <code>src/main/kotlin/info/usmans/blog/vertx</code> as <code>NetClientVerticle.kt</code></p><p>The con­tents of this class is as fol­lows</p><div>...waiting for Gist...</div><h2 id=\"explaining-the-code\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#explaining-the-code\"></a>Explaining the Code</h2><p>The <code>fun main(args: Array&lt;String&gt;)</code> is not strictly re­quired, it quickly al­lows run­ning the Vert.x ver­ti­cle from within IDE. You will also no­tice a small hack in the method for set­ting sys­tem prop­erty <code>vertx.disableDnsResolver</code> which is to avoid a Netty bug that I ob­served when run­ning on Win­dows ma­chine and re­mote server is down. Of course, since we are using vertx-​gradle-plugin, we can also use <code>gradle vertxRun</code> to run our ver­ti­cle. In this case the <code>main</code> method will not get called.</p><p>The <code>override fun start()</code> method calls <code>fireReconnectTimer</code> which in turn calls <code>reconnect</code> method. <code>reconnect</code> method con­tains the con­nec­tion logic to server as well as it calls <code>fireReconnectTimer</code> if it is un­able to con­nect to server or dis­con­nects from server. In <code>reconnect</code> method the <code>socket.handler</code> gets called when server send mes­sage to client.</p><pre><code class=\"hljs language-xl\"><span class=\"hljs-function\"><span class=\"hljs-title\">socket</span>.handler({ <span class=\"hljs-keyword\">data</span> -&gt;</span>\n                        logger.info(<span class=\"hljs-string\">&quot;Data received: ${data}&quot;</span>)\n                        <span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> Do the work here ...</span>\n               })\n</code></pre><h2 id=\"distributing-the-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#distributing-the-project\"></a>Distributing the project</h2><p>To cre­ate re­dis­trib­utable jar, use <code>./gradlew shadowJar</code> com­mand. Or if using In­tel­liJ: from Gra­dle projects, Tasks, shadow, shad­ow­Jar (right click run). This com­mand will gen­er­ate <code>./build/libs/vertx-net-client-fat.jar</code>.</p><h3 id=\"executing-the-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#executing-the-client\"></a>Executing the client</h3><p>The client jar can be ex­e­cuted using fol­low­ing com­mand:</p><pre><code class=\"hljs language-bash\"> java -DserverHost=127.0.0.1 -DserverPort=8888 -DconnectMessage=<span class=\"hljs-string\">&quot;hello&quot;</span> -jar vertx-net-client-full.jar\n</code></pre><p>If you wish to use SLF4J for Vert.x in­ter­nal log­ging, you need to pass sys­tem prop­erty <code>vertx.logger-delegate-factory-class-name</code> with value of <code>io.vertx.core.logging.SLF4JLogDelegateFactory</code>. The final com­mand would look like:</p><pre><code class=\"hljs language-bash\">java -DserverHost=127.0.0.1 -DserverPort=8888 -DconnectMessage=<span class=\"hljs-string\">&quot;hello&quot;</span> -Dvertx.logger-delegate-factory-class-name=<span class=\"hljs-string\">&quot;io.vertx.core.logging.SLF4JLogDelegateFactory&quot;</span> -jar vertx-net-client-full.jar\n</code></pre><p>You can con­fig­ure Vert.x log­ging lev­els in log­back.xml file if re­quired.</p><h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#conclusion\"></a>Conclusion</h2><p>This post de­scribes how easy it is to cre­ate a sim­ple TCP client using Vert.x, Kotlin and Gra­dle build sys­tem. Hope­fully the tech­niques shown here will serve as a start­ing point for your next DIY project.</p><div class=\"alert info\"><p>This post is adapted and re­pro­duced from <a href=\"https://usmans.info/view/blog/tcp_client_using_vertx_kotlin_gradle\">au­thor’s blog post</a></p></div>","scope":{}},"tfIdfTerms":[{"term":"project","tf":23},{"term":"us","tf":19},{"term":"gradl","tf":16},{"term":"will","tf":12},{"term":"file","tf":12},{"term":"follow","tf":11},{"term":"server","tf":8},{"term":"directori","tf":8},{"term":"command","tf":8},{"term":"client","tf":6},{"term":"kotlin","tf":6},{"term":"creat","tf":6},{"term":"system","tf":6},{"term":"run","tf":6},{"term":"method","tf":6},{"term":"log","tf":5},{"term":"build","tf":5},{"term":"call","tf":5},{"term":"connect","tf":4},{"term":"post","tf":4},{"term":"requir","tf":4},{"term":"add","tf":4},{"term":"exampl","tf":4},{"term":"distribut","tf":4},{"term":"allow","tf":3}]},{"filename":"blog/2017-11-14-eclipse-vert-x-meets-graphql.mdx","date":"2017-11-14","slug":"eclipse-vert-x-meets-graphql","meta":{"title":"Eclipse Vert.x meets GraphQL","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"In this blog post, we will look at an example application written in Vert.x that uses the new GraphQL API of Gentics Mesh."},"readingTime":{"text":"7 min read","minutes":6.31,"time":378599.99999999994,"words":1262},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I re\\xADcently added GraphQL sup\\xADport to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gentics/mesh\"\n  }), \"Gen\\xADtics Mesh\"), \" and I thought it would be a good idea to boil down the essence of my im\\xADple\\xADmen\\xADta\\xADtion in ex\\xADam\\xADple so that I could share it in a sim\\xADpler form.\\nThe ex\\xADam\\xADple I\\u2019m about to show will not cover all as\\xADpects that I have added to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://getmesh.io/docs/beta/graphql.html\"\n  }), \"Gen\\xADtics Mesh API\"), \" (e.g. pag\\xADing, search and error han\\xADdling) but it will give you a basic overview of the parts that I put to\\xADgether.\\nGraphQL does not re\\xADquire a GraphDB even if the name might sug\\xADgest it.\"), mdx(\"p\", null, \"Using a graphdb in com\\xADbi\\xADna\\xADtion with GraphQL does nev\\xADer\\xADthe\\xADless pro\\xADvide you with some ad\\xADvan\\xADtages which I will high\\xADlight later on.\"), mdx(\"h2\", {\n    \"id\": \"what-is-graphql-what-is-it-good-for\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#what-is-graphql-what-is-it-good-for\"\n  })), \"What is GraphQL? What is it good for?\"), mdx(\"p\", null, \"GraphQL as the name sug\\xADgests is a new query lan\\xADguage which can be used to load ex\\xADactly the amount of data which you ask for. \"), mdx(\"p\", null, \"The query is de\\xADfined in way that the query fields cor\\xADre\\xADlate to the JSON data that is being re\\xADtrieved.\\nIn our Star\\xADWars Demo do\\xADmain model this query will load the name of human 1001 which is Darth Vader.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-css\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attribute\"\n  }), \"vader\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"human\"), \"(id: \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1001\"), \") {\\n    name\\n  }\\n}\\n\")), mdx(\"p\", null, \"Would re\\xADsult in:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"data\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"vader\\\"\"), \": {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Darth Vader\\\"\"), \"\\n    }\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"the-demo-app\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-demo-app\"\n  })), \"The Demo App\"), mdx(\"p\", null, \"The demo ap\\xADpli\\xADca\\xADtion I build makes use of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-java/graphql-java\"\n  }), \"graphql-\\u200Bjava\"), \" li\\xADbrary. The data is being stored in a graph data\\xADbase.\\nI use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://orientdb.com/orientdb/\"\n  }), \"Ori\\xADentDB\"), \" in com\\xADbi\\xADna\\xADtion with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Syncleus/Ferma\"\n  }), \"OGM Ferma\"), \" to pro\\xADvide a data ac\\xADcess layer.\\nGraphQL does not nec\\xADes\\xADsar\\xADily re\\xADquire a graph data\\xADbase but in this ex\\xADam\\xADple I will make use of one and high\\xADlight the ben\\xADe\\xADfits of using a GraphDB for my use\\xADcase.\"), mdx(\"p\", null, \"You can find the sources here: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example\"\n  }), \"https://github.com/Jotschi/vertx-\\u200Bgraphql-example\")), mdx(\"h3\", {\n    \"id\": \"data\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#data\"\n  })), \"Data\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/data/StarWarsData.java\"\n  }), \"Star\\xADWars\\xADData\"), \" class cre\\xADates a Graph which con\\xADtains the Star Wars Movies and Char\\xADac\\xADters, Plan\\xADets and their re\\xADla\\xADtions.\\nThe model is fairly sim\\xADple. There is a sin\\xADgle Star\\xADWars\\xADRoot ver\\xADtex which acts as a start el\\xADe\\xADment for var\\xADi\\xADous ag\\xADgre\\xADga\\xADtion ver\\xADtices: Movies are stored in Movie\\xADRoot, Plan\\xADets in Plan\\xADet\\xADs\\xADRoot, Char\\xADac\\xADters are stored in Hu\\xADman\\xADs\\xADRoot and Droid\\xADs\\xADRoot.\"), mdx(\"p\", null, \"The model classes are used for wrap\\xADpers of the spe\\xADcific graph ver\\xADtices. The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://syncleus.com/Ferma/\"\n  }), \"Ferma OGM\"), \" is used to pro\\xADvide these wrap\\xADpers. Each class con\\xADtains meth\\xADods which can be used to tra\\xADverse the graph to lo\\xADcate the needed ver\\xADtices.\\nThe found ver\\xADtices are in turn again wrapped and can be used to lo\\xADcate other graph el\\xADe\\xADments.\"), mdx(\"h3\", {\n    \"id\": \"schema\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#schema\"\n  })), \"Schema\"), mdx(\"p\", null, \"The next thing we need is the GraphQL schema. The schema de\\xADscribes each el\\xADe\\xADment which can be re\\xADtrieved. It also de\\xADscribes the prop\\xADer\\xADties and re\\xADla\\xADtion\\xADships for these el\\xADe\\xADments.\"), mdx(\"p\", null, \"The graphql-\\u200Bjava li\\xADbrary pro\\xADvides an API to cre\\xADate the ob\\xADject types and schema in\\xADfor\\xADma\\xADtion.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-clojure\"\n  }), \"private GraphQLObjectType createMovieType() {\\n  return newObject().name(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Movie\\\"\"), \")\\n    .description(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"One of the films in the Star Wars universe.\\\"\"), \")\\n\\n    // .title\\n    .field(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"newFieldDefinition\"), \"().name(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"title\\\"\"), \")\\n        .description(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Title of the episode.\\\"\"), \")\\n        .type(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"GraphQLString\"), \")\\n        .dataFetcher((\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"env\"), \") -> {\\n          Movie movie = env.getSource()\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n          return movie.getName()\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n        }))\\n\\n    // .description\\n    .field(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"newFieldDefinition\"), \"().name(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \")\\n        .description(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Description of the episode.\\\"\"), \")\\n        .type(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"GraphQLString\"), \"))\\n\\n    .build()\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \";\"), \"\\n}\\n\")), mdx(\"p\", null, \"A type can be ref\\xADer\\xADenced via a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQLTypeReference\"), \" once it has been cre\\xADated and added to the schema. This is es\\xADpe\\xADcially im\\xADpor\\xADtant if you need to add fields which ref\\xADer\\xADence other types.\\nData fetch\\xADers are used to ac\\xADcess the con\\xADtext, tra\\xADverse the graph and re\\xADtrieve prop\\xADer\\xADties from graph el\\xADe\\xADments.\"), mdx(\"p\", null, \"An\\xADother great source to learn more about the schema op\\xADtions is the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql-java/graphql-java/blob/master/src/test/groovy/graphql/GarfieldSchema.java\"\n  }), \"Garfield\\xADSchema\"), \" ex\\xADam\\xADple.\"), mdx(\"p\", null, \"Fi\\xADnally all the cre\\xADated types must be ref\\xADer\\xADenced by a cen\\xADtral ob\\xADject type \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/data/StarWarsSchema.java#L204\"\n  }), \"Query\\xADType\"), \".\\nThe query type ob\\xADject is ba\\xADsi\\xADcally the root ob\\xADject for the query.\\nIt de\\xADfines what query op\\xADtions are ini\\xADtially pos\\xADsi\\xADble. In our case it is pos\\xADsi\\xADble to load the hero of the sage, spe\\xADcific movies, hu\\xADmans or droids.\"), mdx(\"h3\", {\n    \"id\": \"verticle\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#verticle\"\n  })), \"Verticle\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/GraphQLVerticle.java\"\n  }), \"GraphQLVer\\xADti\\xADcle\"), \" is used to ac\\xADcept the GraphQL re\\xADquest and process it.\"), mdx(\"p\", null, \"The ver\\xADti\\xADcle also con\\xADtains a Sta\\xADticHan\\xADdler to pro\\xADvide the Graphiql Browser web in\\xADter\\xADface. This in\\xADter\\xADface will allow you to quickly dis\\xADcover and ex\\xADper\\xADi\\xADment with GraphQL.\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/GraphQLVerticle.java#L77\"\n  }), \"query han\\xADdler\"), \" ac\\xADcepts the query JSON data. \"), mdx(\"p\", null, \"An Ori\\xADentDB trans\\xADac\\xADtion is being opened and the query is ex\\xADe\\xADcuted:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"demoData.getGraph().asyncTx((tx) -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Invoke the query and handle the resulting JSON\"), \"\\n  GraphQL graphQL = newGraphQL(schema).build();\\n  ExecutionInput input = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" ExecutionInput(query, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \", queryJson, demoData.getRoot(), extractVariables(queryJson));\\n  tx.complete(graphQL.execute(input));\\n}, (AsyncResult<ExecutionResult> rh) -> {\\n  ...\\n});\\n\")), mdx(\"p\", null, \"The ex\\xADe\\xADcute method ini\\xADtially needs a con\\xADtext vari\\xADable. This con\\xADtext passed along with the query.\\nIn our case the con\\xADtext is the root el\\xADe\\xADment of the graph \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"demoData.getRoot()\"), \".\\nThis con\\xADtext el\\xADe\\xADment also serves as the ini\\xADtial source for our data fetch\\xADers.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \".dataFetcher((env) -> {\\n  StarWarsRoot root = env.getSource();\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" root.getHero();\\n}))\\n\")), mdx(\"p\", null, \"The data fetch\\xADers for the hero type on the other hand will be able to ac\\xADcess the hero el\\xADe\\xADment since the fetcher above re\\xADturned the el\\xADe\\xADment.\\nUsing this mech\\xADa\\xADnism it is pos\\xADsi\\xADble to tra\\xADverse the graph. It is im\\xADpor\\xADtant to note that each in\\xADvo\\xADca\\xADtion on the do\\xADmain model meth\\xADods will di\\xADrectly ac\\xADcess the graph data\\xADbase.\\nThis way it is pos\\xADsi\\xADble to in\\xADflu\\xADence the graph data\\xADbase query down to the low\\xADest level. When omit\\xADting a prop\\xADerty from the graphql query it will not be loaded from the graph.\\nThus there is no need to write an ad\\xADdi\\xADtional data ac\\xADcess layer. All op\\xADer\\xADa\\xADtions are di\\xADrectly mapped to graph data\\xADbase.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StarWarsRoot\"), \" Ferma class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getHero()\"), \" method in turn de\\xADfines a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://tinkerpop.apache.org/docs/3.3.0/tutorials/getting-started/#_graph_traversal_staying_simple\"\n  }), \"Tin\\xADker\\xADPop Grem\\xADlin tra\\xADver\\xADsal\"), \" which is used to load the Ver\\xADtex which rep\\xADre\\xADsents the hero of the Star Wars saga.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://tinkerpop.apache.org/\"\n  }), \"Apache Tin\\xADker\\xADPop\"), \" is an open source, vendor-\\u200Bagnostic, graph frame\\xADwork / API which is sup\\xADported by many graph data\\xADbase ven\\xADdors.\\nOne part of Tin\\xADker\\xADPop is the Grem\\xADlin tra\\xADver\\xADsal lan\\xADguage which is great to query graph data\\xADbases.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"...\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" Droid \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"getHero\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Follow the HAS_ROOT edge and return the first found Vertex which could be found. \"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Wrap the Vertex explicitly in the Droid Ferma class.  \"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" traverse((g) -> g.out(HAS_HERO)).nextOrDefaultExplicit(Droid.class, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \");\\n}\\n...\\n\")), mdx(\"p\", null, \"Once the query has been ex\\xADe\\xADcuted the re\\xADsult han\\xADdler is being in\\xADvoked. It con\\xADtains some code to process the re\\xADsult data and po\\xADten\\xADtial er\\xADrors.\\nIt is im\\xADpor\\xADtant to note that a GraphQL query will al\\xADways be an\\xADswered with a 2xx HTTP sta\\xADtus code.\\nIf an el\\xADe\\xADment which is being ref\\xADer\\xADenced in the query can\\u2019t be loaded an error will be added to the re\\xADsponse JSON ob\\xADject.\"), mdx(\"h3\", {\n    \"id\": \"testing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#testing\"\n  })), \"Testing\"), mdx(\"p\", null, \"Test\\xADing is fairly straight for\\xADward. Al\\xADthough there are mul\\xADti\\xADple ap\\xADproaches. One ap\\xADproach is to use unit test\\xADing di\\xADrectly on the GraphQL types.\\nAn\\xADother op\\xADtion is to run queries against the end\\xADpoint.  \"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/test/java/de/jotschi/vertx/GraphQLTest.java\"\n  }), \"GraphQL\\xADTest class\"), \" I wrote will run mul\\xADti\\xADple queries against the end\\xADpoint.\\nA Pa\\xADra\\xADme\\xADter\\xADized JUnit test is used it\\xADer\\xADate over the queries.\"), mdx(\"p\", null, \"A \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/test/resources/graphql/full-query\"\n  }), \"typ\\xADi\\xADcal query\"), \" does not only con\\xADtain the query data.\\nThe as\\xADser\\xADtions on the re\\xADsponse JSON are di\\xADrectly in\\xADcluded in query using plain com\\xADments.\"), mdx(\"p\", null, \"I build an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://joel-costigliola.github.io/assertj/\"\n  }), \"As\\xADsertJ\"), \" as\\xADser\\xADtion to check the com\\xADments of a query and ver\\xADify that the as\\xADser\\xADtion matches the re\\xADsponse.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"  assertThat(response).compliesToAssertions(queryName);\\n\")), mdx(\"h2\", {\n    \"id\": \"run-the-example\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#run-the-example\"\n  })), \"Run the example\"), mdx(\"p\", null, \"You can run the ex\\xADam\\xADple by ex\\xADe\\xADcut\\xADing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQLServer\"), \" class and ac\\xADcess the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://localhost:3000/browser/?query=%7B%0A%20%20movies%20%7B%0A%20%20%20%20title%0A%20%20%7D%0A%20%20hero%20%7B%0A%20%20%20%20name%0A%20%20%7D%0A%7D%0A\"\n  }), \"Graphiql browser on http://lo\\xADcal\\xADhost:3000/browser/\")), mdx(\"h2\", {\n    \"id\": \"where-to-go-from-here\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#where-to-go-from-here\"\n  })), \"Where to go from here?\"), mdx(\"p\", null, \"The ex\\xADam\\xADple is read-\\u200Bonly. GraphQL also sup\\xADports data mu\\xADta\\xADtion which can be used to ac\\xADtu\\xADally mod\\xADify and store data.\\nI have not yet ex\\xADplored that part of GraphQL but I as\\xADsume it might not be that hard to add mu\\xADta\\xADtion sup\\xADport to the ex\\xADam\\xADple.\"), mdx(\"p\", null, \"Ad\\xADdi\\xADtion\\xADally it does not cover how to ac\\xADtu\\xADally make use of such API. I re\\xADcently \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gentics/mesh-vertx-example/\"\n  }), \"up\\xADdated my Vert.x ex\\xADam\\xADple\"), \" which shows how to use Vert.x tem\\xADplate han\\xADdlers to build a small server which ren\\xADders some pages using data which was loaded via GraphQL.\"), mdx(\"p\", null, \"Thanks for read\\xADing. If you have any fur\\xADther ques\\xADtions or feed\\xADback don\\u2019t hes\\xADi\\xADtate to send me a tweet to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/Jotschi/\"\n  }), \"@Jotschi\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/genticsmesh/\"\n  }), \"@gen\\xADtic\\xADsmesh\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I re­cently added GraphQL sup­port to <a href=\"https://github.com/gentics/mesh\">Gen­tics Mesh</a> and I thought it would be a good idea to boil down the essence of my im­ple­men­ta­tion in ex­am­ple so that I could share it in a sim­pler form.\nThe ex­am­ple I’m about to show will not cover all as­pects that I have added to the <a href=\"https://getmesh.io/docs/beta/graphql.html\">Gen­tics Mesh API</a> (e.g. pag­ing, search and error han­dling) but it will give you a basic overview of the parts that I put to­gether.\nGraphQL does not re­quire a GraphDB even if the name might sug­gest it.</p><p>Using a graphdb in com­bi­na­tion with GraphQL does nev­er­the­less pro­vide you with some ad­van­tages which I will high­light later on.</p><h2 id=\"what-is-graphql-what-is-it-good-for\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#what-is-graphql-what-is-it-good-for\"></a>What is GraphQL? What is it good for?</h2><p>GraphQL as the name sug­gests is a new query lan­guage which can be used to load ex­actly the amount of data which you ask for. </p><p>The query is de­fined in way that the query fields cor­re­late to the JSON data that is being re­trieved.\nIn our Star­Wars Demo do­main model this query will load the name of human 1001 which is Darth Vader.</p><pre><code class=\"hljs language-css\">{\n  <span class=\"hljs-attribute\">vader</span>: <span class=\"hljs-built_in\">human</span>(id: <span class=\"hljs-number\">1001</span>) {\n    name\n  }\n}\n</code></pre><p>Would re­sult in:</p><pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">&quot;data&quot;</span>: {\n    <span class=\"hljs-attr\">&quot;vader&quot;</span>: {\n      <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;Darth Vader&quot;</span>\n    }\n  }\n}\n</code></pre><h2 id=\"the-demo-app\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-demo-app\"></a>The Demo App</h2><p>The demo ap­pli­ca­tion I build makes use of the <a href=\"https://github.com/graphql-java/graphql-java\">graphql-​java</a> li­brary. The data is being stored in a graph data­base.\nI use <a href=\"http://orientdb.com/orientdb/\">Ori­entDB</a> in com­bi­na­tion with the <a href=\"https://github.com/Syncleus/Ferma\">OGM Ferma</a> to pro­vide a data ac­cess layer.\nGraphQL does not nec­es­sar­ily re­quire a graph data­base but in this ex­am­ple I will make use of one and high­light the ben­e­fits of using a GraphDB for my use­case.</p><p>You can find the sources here: <a href=\"https://github.com/Jotschi/vertx-graphql-example\">https://github.com/Jotschi/vertx-​graphql-example</a></p><h3 id=\"data\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#data\"></a>Data</h3><p>The <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/data/StarWarsData.java\">Star­Wars­Data</a> class cre­ates a Graph which con­tains the Star Wars Movies and Char­ac­ters, Plan­ets and their re­la­tions.\nThe model is fairly sim­ple. There is a sin­gle Star­Wars­Root ver­tex which acts as a start el­e­ment for var­i­ous ag­gre­ga­tion ver­tices: Movies are stored in Movie­Root, Plan­ets in Plan­et­s­Root, Char­ac­ters are stored in Hu­man­s­Root and Droid­s­Root.</p><p>The model classes are used for wrap­pers of the spe­cific graph ver­tices. The <a href=\"http://syncleus.com/Ferma/\">Ferma OGM</a> is used to pro­vide these wrap­pers. Each class con­tains meth­ods which can be used to tra­verse the graph to lo­cate the needed ver­tices.\nThe found ver­tices are in turn again wrapped and can be used to lo­cate other graph el­e­ments.</p><h3 id=\"schema\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#schema\"></a>Schema</h3><p>The next thing we need is the GraphQL schema. The schema de­scribes each el­e­ment which can be re­trieved. It also de­scribes the prop­er­ties and re­la­tion­ships for these el­e­ments.</p><p>The graphql-​java li­brary pro­vides an API to cre­ate the ob­ject types and schema in­for­ma­tion.</p><pre><code class=\"hljs language-clojure\">private GraphQLObjectType createMovieType() {\n  return newObject().name(<span class=\"hljs-string\">&quot;Movie&quot;</span>)\n    .description(<span class=\"hljs-string\">&quot;One of the films in the Star Wars universe.&quot;</span>)\n\n    // .title\n    .field(<span class=\"hljs-name\">newFieldDefinition</span>().name(<span class=\"hljs-string\">&quot;title&quot;</span>)\n        .description(<span class=\"hljs-string\">&quot;Title of the episode.&quot;</span>)\n        .type(<span class=\"hljs-name\">GraphQLString</span>)\n        .dataFetcher((<span class=\"hljs-name\">env</span>) -&gt; {\n          Movie movie = env.getSource()<span class=\"hljs-comment\">;</span>\n          return movie.getName()<span class=\"hljs-comment\">;</span>\n        }))\n\n    // .description\n    .field(<span class=\"hljs-name\">newFieldDefinition</span>().name(<span class=\"hljs-string\">&quot;description&quot;</span>)\n        .description(<span class=\"hljs-string\">&quot;Description of the episode.&quot;</span>)\n        .type(<span class=\"hljs-name\">GraphQLString</span>))\n\n    .build()<span class=\"hljs-comment\">;</span>\n}\n</code></pre><p>A type can be ref­er­enced via a <code>GraphQLTypeReference</code> once it has been cre­ated and added to the schema. This is es­pe­cially im­por­tant if you need to add fields which ref­er­ence other types.\nData fetch­ers are used to ac­cess the con­text, tra­verse the graph and re­trieve prop­er­ties from graph el­e­ments.</p><p>An­other great source to learn more about the schema op­tions is the <a href=\"https://github.com/graphql-java/graphql-java/blob/master/src/test/groovy/graphql/GarfieldSchema.java\">Garfield­Schema</a> ex­am­ple.</p><p>Fi­nally all the cre­ated types must be ref­er­enced by a cen­tral ob­ject type <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/data/StarWarsSchema.java#L204\">Query­Type</a>.\nThe query type ob­ject is ba­si­cally the root ob­ject for the query.\nIt de­fines what query op­tions are ini­tially pos­si­ble. In our case it is pos­si­ble to load the hero of the sage, spe­cific movies, hu­mans or droids.</p><h3 id=\"verticle\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#verticle\"></a>Verticle</h3><p>The <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/GraphQLVerticle.java\">GraphQLVer­ti­cle</a> is used to ac­cept the GraphQL re­quest and process it.</p><p>The ver­ti­cle also con­tains a Sta­ticHan­dler to pro­vide the Graphiql Browser web in­ter­face. This in­ter­face will allow you to quickly dis­cover and ex­per­i­ment with GraphQL.</p><p>The <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/main/java/de/jotschi/vertx/GraphQLVerticle.java#L77\">query han­dler</a> ac­cepts the query JSON data. </p><p>An Ori­entDB trans­ac­tion is being opened and the query is ex­e­cuted:</p><pre><code class=\"hljs language-java\">demoData.getGraph().asyncTx((tx) -&gt; {\n  <span class=\"hljs-comment\">// Invoke the query and handle the resulting JSON</span>\n  GraphQL graphQL = newGraphQL(schema).build();\n  ExecutionInput input = <span class=\"hljs-keyword\">new</span> ExecutionInput(query, <span class=\"hljs-keyword\">null</span>, queryJson, demoData.getRoot(), extractVariables(queryJson));\n  tx.complete(graphQL.execute(input));\n}, (AsyncResult&lt;ExecutionResult&gt; rh) -&gt; {\n  ...\n});\n</code></pre><p>The ex­e­cute method ini­tially needs a con­text vari­able. This con­text passed along with the query.\nIn our case the con­text is the root el­e­ment of the graph <code>demoData.getRoot()</code>.\nThis con­text el­e­ment also serves as the ini­tial source for our data fetch­ers.</p><pre><code class=\"hljs language-java\">.dataFetcher((env) -&gt; {\n  StarWarsRoot root = env.getSource();\n  <span class=\"hljs-keyword\">return</span> root.getHero();\n}))\n</code></pre><p>The data fetch­ers for the hero type on the other hand will be able to ac­cess the hero el­e­ment since the fetcher above re­turned the el­e­ment.\nUsing this mech­a­nism it is pos­si­ble to tra­verse the graph. It is im­por­tant to note that each in­vo­ca­tion on the do­main model meth­ods will di­rectly ac­cess the graph data­base.\nThis way it is pos­si­ble to in­flu­ence the graph data­base query down to the low­est level. When omit­ting a prop­erty from the graphql query it will not be loaded from the graph.\nThus there is no need to write an ad­di­tional data ac­cess layer. All op­er­a­tions are di­rectly mapped to graph data­base.</p><p>The <code>StarWarsRoot</code> Ferma class <code>getHero()</code> method in turn de­fines a <a href=\"http://tinkerpop.apache.org/docs/3.3.0/tutorials/getting-started/#_graph_traversal_staying_simple\">Tin­ker­Pop Grem­lin tra­ver­sal</a> which is used to load the Ver­tex which rep­re­sents the hero of the Star Wars saga.</p><div class=\"alert info\"><p><a href=\"http://tinkerpop.apache.org/\">Apache Tin­ker­Pop</a> is an open source, vendor-​agnostic, graph frame­work / API which is sup­ported by many graph data­base ven­dors.\nOne part of Tin­ker­Pop is the Grem­lin tra­ver­sal lan­guage which is great to query graph data­bases.</p></div><pre><code class=\"hljs language-java\">...\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Droid <span class=\"hljs-title\">getHero</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-comment\">// Follow the HAS_ROOT edge and return the first found Vertex which could be found. </span>\n  <span class=\"hljs-comment\">// Wrap the Vertex explicitly in the Droid Ferma class.  </span>\n  <span class=\"hljs-keyword\">return</span> traverse((g) -&gt; g.out(HAS_HERO)).nextOrDefaultExplicit(Droid.class, <span class=\"hljs-keyword\">null</span>);\n}\n...\n</code></pre><p>Once the query has been ex­e­cuted the re­sult han­dler is being in­voked. It con­tains some code to process the re­sult data and po­ten­tial er­rors.\nIt is im­por­tant to note that a GraphQL query will al­ways be an­swered with a 2xx HTTP sta­tus code.\nIf an el­e­ment which is being ref­er­enced in the query can’t be loaded an error will be added to the re­sponse JSON ob­ject.</p><h3 id=\"testing\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#testing\"></a>Testing</h3><p>Test­ing is fairly straight for­ward. Al­though there are mul­ti­ple ap­proaches. One ap­proach is to use unit test­ing di­rectly on the GraphQL types.\nAn­other op­tion is to run queries against the end­point.  </p><p>The <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/test/java/de/jotschi/vertx/GraphQLTest.java\">GraphQL­Test class</a> I wrote will run mul­ti­ple queries against the end­point.\nA Pa­ra­me­ter­ized JUnit test is used it­er­ate over the queries.</p><p>A <a href=\"https://github.com/Jotschi/vertx-graphql-example/blob/master/src/test/resources/graphql/full-query\">typ­i­cal query</a> does not only con­tain the query data.\nThe as­ser­tions on the re­sponse JSON are di­rectly in­cluded in query using plain com­ments.</p><p>I build an <a href=\"http://joel-costigliola.github.io/assertj/\">As­sertJ</a> as­ser­tion to check the com­ments of a query and ver­ify that the as­ser­tion matches the re­sponse.</p><pre><code class=\"hljs language-java\">  assertThat(response).compliesToAssertions(queryName);\n</code></pre><h2 id=\"run-the-example\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#run-the-example\"></a>Run the example</h2><p>You can run the ex­am­ple by ex­e­cut­ing the <code>GraphQLServer</code> class and ac­cess the <a href=\"http://localhost:3000/browser/?query=%7B%0A%20%20movies%20%7B%0A%20%20%20%20title%0A%20%20%7D%0A%20%20hero%20%7B%0A%20%20%20%20name%0A%20%20%7D%0A%7D%0A\">Graphiql browser on http://lo­cal­host:3000/browser/</a></p><h2 id=\"where-to-go-from-here\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#where-to-go-from-here\"></a>Where to go from here?</h2><p>The ex­am­ple is read-​only. GraphQL also sup­ports data mu­ta­tion which can be used to ac­tu­ally mod­ify and store data.\nI have not yet ex­plored that part of GraphQL but I as­sume it might not be that hard to add mu­ta­tion sup­port to the ex­am­ple.</p><p>Ad­di­tion­ally it does not cover how to ac­tu­ally make use of such API. I re­cently <a href=\"https://github.com/gentics/mesh-vertx-example/\">up­dated my Vert.x ex­am­ple</a> which shows how to use Vert.x tem­plate han­dlers to build a small server which ren­ders some pages using data which was loaded via GraphQL.</p><p>Thanks for read­ing. If you have any fur­ther ques­tions or feed­back don’t hes­i­tate to send me a tweet to <a href=\"https://twitter.com/Jotschi/\">@Jotschi</a> or <a href=\"https://twitter.com/genticsmesh/\">@gen­tic­smesh</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"queri","tf":24},{"term":"us","tf":21},{"term":"graphql","tf":18},{"term":"graph","tf":17},{"term":"data","tf":15},{"term":"will","tf":12},{"term":"exampl","tf":10},{"term":"element","tf":10},{"term":"not","tf":8},{"term":"type","tf":8},{"term":"load","tf":7},{"term":"databas","tf":7},{"term":"access","tf":6},{"term":"class","tf":6},{"term":"schema","tf":6},{"term":"provid","tf":5},{"term":"contain","tf":5},{"term":"travers","tf":5},{"term":"need","tf":5},{"term":"object","tf":5},{"term":"context","tf":5},{"term":"ad","tf":4},{"term":"support","tf":4},{"term":"api","tf":4},{"term":"json","tf":4}]},{"filename":"blog/2017-08-21-introducing-vert-x-mqtt-client.mdx","date":"2017-08-21","slug":"introducing-vert-x-mqtt-client","meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"readingTime":{"text":"2 min read","minutes":1.72,"time":103200,"words":344},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this ar\\xADti\\xADcle, we will see how to set up the new Vert.x MQTT client. Ac\\xADtu\\xADally, I have a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Sammers21/vertx-mqtt-client-example\"\n  }), \"real ex\\xADam\\xADple\"), \" so you can try it quickly.\"), mdx(\"p\", null, \"If you are using Maven or Gra\\xADdle, add the fol\\xADlow\\xADing de\\xADpen\\xADdency to the de\\xADpen\\xADden\\xADcies sec\\xADtion of your project de\\xADscrip\\xADtor to ac\\xADcess the Vert.x MQTT client:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maven (in your pom.xml):\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-mqtt\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.5.0.Beta1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gra\\xADdle (in your build.gra\\xADdle file):\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"dependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-mqtt:3.5.0.Beta1'\"), \"\\n}\\n\")), mdx(\"p\", null, \"Now that you\\u2019ve set up your project, you can cre\\xADate a sim\\xADple ap\\xADpli\\xADca\\xADtion which will re\\xADceive all mes\\xADsages from all bro\\xADker chan\\xADnels:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.AbstractVerticle;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.mqtt.MqttClient;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.mqtt.MqttClientOptions;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" java.io.UnsupportedEncodingException;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"MainVerticle\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AbstractVerticle\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Override\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n     MqttClientOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions();\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// specify broker host\"), \"\\n      options.setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"iot.eclipse.org\\\"\"), \");\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// specify max size of message in bytes\"), \"\\n      options.setMaxMessageSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"100_000_000\"), \");\\n\\n    MqttClient client = MqttClient.create(vertx, options);\\n\\n    client.publishHandler(s -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"try\"), \" {\\n        String message = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" String(s.payload().getBytes(), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"UTF-8\\\"\"), \");\\n        System.out.println(String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Receive message with content: \\\\\\\"%s\\\\\\\" from topic \\\\\\\"%s\\\\\\\"\\\"\"), \", message, s.topicName()));\\n      } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"catch\"), \" (UnsupportedEncodingException e) {\\n        e.printStackTrace();\\n      }\\n    });\\n\\n    client.connect(s -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// subscribe to all subtopics\"), \"\\n      client.subscribe(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"#\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \");\\n    });\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pub\\xADlish\\xADHan\\xADdler\"), \" is the han\\xADdler called each time the bro\\xADker, lo\\xADcated at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iot.eclipse.org:1883\"), \", sends a mes\\xADsage to you, from the top\\xADics you are sub\\xADscrib\\xADing for.\"), mdx(\"p\", null, \"But only pro\\xADvid\\xADing a han\\xADdler is not enough, you should also con\\xADnect to the bro\\xADker and sub\\xADscribe to some top\\xADics. For this rea\\xADson, you should use the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"con\\xADnect\"), \" method and then call \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sub\\xADscribe\"), \" when the con\\xADnec\\xADtion es\\xADtab\\xADlished. \"), mdx(\"p\", null, \"To de\\xADploy this ver\\xADti\\xADcle from an ap\\xADpli\\xADca\\xADtion you should have in your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"main\"), \" method some\\xADthing like that:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Vertx vertx = Vertx.vertx();\\nvertx.deployVerticle(MainVerticle.class.getCanonicalName());\\n\")), mdx(\"p\", null, \"When you have com\\xADpleted all steps cor\\xADrectly the re\\xADsult should look like that:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://i.imgur.com/b4yYQJE.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"As the al\\xADter\\xADna\\xADtive and rec\\xADom\\xADmended way to boot\\xADstrap Vert.x ap\\xADpli\\xADca\\xADtions you can use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-maven-starter\"\n  }), \"vertx-\\u200Bmaven-starter\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-gradle-starter\"\n  }), \"vertx-\\u200Bgradle-starter\"), \". For com\\xADplet\\xADing this guide I have used the first one. The final source code avail\\xADable \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Sammers21/vertx-mqtt-client-example\"\n  }), \"here\"), \". If you would like to learn more about Vert.x MQTT client API then check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-mqtt-client/blob/initial-work/src/main/asciidoc/java/index.adoc\"\n  }), \"full doc\\xADu\\xADmen\\xADta\\xADtion\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\"\n  }), \"more ex\\xADam\\xADples\"), \". \"), mdx(\"p\", null, \"Thank you for read\\xADing!\"), mdx(\"p\", null, \"Cheers!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>In this ar­ti­cle, we will see how to set up the new Vert.x MQTT client. Ac­tu­ally, I have a <a href=\"https://github.com/Sammers21/vertx-mqtt-client-example\">real ex­am­ple</a> so you can try it quickly.</p><p>If you are using Maven or Gra­dle, add the fol­low­ing de­pen­dency to the de­pen­den­cies sec­tion of your project de­scrip­tor to ac­cess the Vert.x MQTT client:</p><ul><li>Maven (in your pom.xml):</li></ul><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-mqtt<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.5.0.Beta1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><ul><li>Gra­dle (in your build.gra­dle file):</li></ul><pre><code class=\"hljs language-groovy\">dependencies {\n  compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-mqtt:3.5.0.Beta1&#x27;</span>\n}\n</code></pre><p>Now that you’ve set up your project, you can cre­ate a sim­ple ap­pli­ca­tion which will re­ceive all mes­sages from all bro­ker chan­nels:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-keyword\">import</span> io.vertx.core.AbstractVerticle;\n<span class=\"hljs-keyword\">import</span> io.vertx.mqtt.MqttClient;\n<span class=\"hljs-keyword\">import</span> io.vertx.mqtt.MqttClientOptions;\n\n<span class=\"hljs-keyword\">import</span> java.io.UnsupportedEncodingException;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainVerticle</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractVerticle</span> </span>{\n\n  <span class=\"hljs-meta\">@Override</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">()</span> </span>{\n     MqttClientOptions options = <span class=\"hljs-keyword\">new</span> MqttClientOptions();\n      <span class=\"hljs-comment\">// specify broker host</span>\n      options.setHost(<span class=\"hljs-string\">&quot;iot.eclipse.org&quot;</span>);\n      <span class=\"hljs-comment\">// specify max size of message in bytes</span>\n      options.setMaxMessageSize(<span class=\"hljs-number\">100_000_000</span>);\n\n    MqttClient client = MqttClient.create(vertx, options);\n\n    client.publishHandler(s -&gt; {\n      <span class=\"hljs-keyword\">try</span> {\n        String message = <span class=\"hljs-keyword\">new</span> String(s.payload().getBytes(), <span class=\"hljs-string\">&quot;UTF-8&quot;</span>);\n        System.out.println(String.format(<span class=\"hljs-string\">&quot;Receive message with content: \\&quot;%s\\&quot; from topic \\&quot;%s\\&quot;&quot;</span>, message, s.topicName()));\n      } <span class=\"hljs-keyword\">catch</span> (UnsupportedEncodingException e) {\n        e.printStackTrace();\n      }\n    });\n\n    client.connect(s -&gt; {\n      <span class=\"hljs-comment\">// subscribe to all subtopics</span>\n      client.subscribe(<span class=\"hljs-string\">&quot;#&quot;</span>, <span class=\"hljs-number\">0</span>);\n    });\n  }\n}\n</code></pre><p>The <strong>pub­lish­Han­dler</strong> is the han­dler called each time the bro­ker, lo­cated at <code>iot.eclipse.org:1883</code>, sends a mes­sage to you, from the top­ics you are sub­scrib­ing for.</p><p>But only pro­vid­ing a han­dler is not enough, you should also con­nect to the bro­ker and sub­scribe to some top­ics. For this rea­son, you should use the <strong>con­nect</strong> method and then call <strong>sub­scribe</strong> when the con­nec­tion es­tab­lished. </p><p>To de­ploy this ver­ti­cle from an ap­pli­ca­tion you should have in your <strong>main</strong> method some­thing like that:</p><pre><code class=\"hljs language-java\">Vertx vertx = Vertx.vertx();\nvertx.deployVerticle(MainVerticle.class.getCanonicalName());\n</code></pre><p>When you have com­pleted all steps cor­rectly the re­sult should look like that:</p><p><img src=\"http://i.imgur.com/b4yYQJE.gif\"/></p><p>As the al­ter­na­tive and rec­om­mended way to boot­strap Vert.x ap­pli­ca­tions you can use <a href=\"https://github.com/vert-x3/vertx-maven-starter\">vertx-​maven-starter</a> or <a href=\"https://github.com/vert-x3/vertx-gradle-starter\">vertx-​gradle-starter</a>. For com­plet­ing this guide I have used the first one. The final source code avail­able <a href=\"https://github.com/Sammers21/vertx-mqtt-client-example\">here</a>. If you would like to learn more about Vert.x MQTT client API then check out the <a href=\"https://github.com/vert-x3/vertx-mqtt-client/blob/initial-work/src/main/asciidoc/java/index.adoc\">full doc­u­men­ta­tion</a> and <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\">more ex­am­ples</a>. </p><p>Thank you for read­ing!</p><p>Cheers!</p>","scope":{}},"tfIdfTerms":[{"term":"us","tf":4},{"term":"gradl","tf":4},{"term":"mqtt","tf":3},{"term":"client","tf":3},{"term":"maven","tf":3},{"term":"applic","tf":3},{"term":"broker","tf":3},{"term":"subscrib","tf":3},{"term":"connect","tf":3},{"term":"will","tf":2},{"term":"set","tf":2},{"term":"exampl","tf":2},{"term":"depend","tf":2},{"term":"project","tf":2},{"term":"messag","tf":2},{"term":"handler","tf":2},{"term":"call","tf":2},{"term":"topic","tf":2},{"term":"method","tf":2},{"term":"complet","tf":2},{"term":"starter","tf":2},{"term":"articl","tf":1},{"term":"new","tf":1},{"term":"actual","tf":1},{"term":"real","tf":1}]},{"filename":"blog/2017-07-04-openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage.mdx","date":"2017-07-04","slug":"openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage","meta":{"title":"OpenAPI (fka Swagger) 3 support in Eclipse Vert.x now in test stage!","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"As GSoC 2017's student, I'm working on an embedded support to OpenAPI 3 standard inside Eclipse Vert.x framework. Now, after a lot of work, you can try it!"},"readingTime":{"text":"6 min read","minutes":5.8,"time":348000,"words":1160},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Alert, {\n    info: true,\n    title: \"Now on upstream!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"We have pub\\xADlished this pack\\xADage with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-contract\"))), mdx(\"p\", null, \"As GSoC 2017\\u2019s stu\\xADdent, I\\u2019m ac\\xADtu\\xADally work\\xADing on an em\\xADbed\\xADded sup\\xADport to Ope\\xADnAPI 3 stan\\xADdard in\\xADside Eclipse Vert.x frame\\xADwork. Now, after a lot of work, you can try it!\"), mdx(\"h2\", {\n    \"id\": \"why-openapi-3\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#why-openapi-3\"\n  })), \"Why OpenAPI 3?\"), mdx(\"p\", null, \"Ope\\xADnAPI 2 is the most im\\xADpor\\xADtant industry-\\u200Bgrade stan\\xADdard for API Spec\\xADi\\xADfi\\xADca\\xADtions. As you can see on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.openapis.org/blog/2017/05/25/the-open-api-initiative-is-sending-you-a-save-the-date-card?utm_source=Blog&utm_medium=Twitter&utm_campaign=SaveTheDate\"\n  }), \"of\\xADfi\\xADcial blog of Ope\\xADnAPI Ini\\xADtia\\xADtive\"), \", the re\\xADlease of ver\\xADsion 3 is be\\xADhind the cor\\xADner, so we want to give to our com\\xADmu\\xADnity the lat\\xADest tools for the lat\\xADest stan\\xADdards!\"), mdx(\"p\", null, \"Vert.x project ob\\xADjec\\xADtive is to give you more in\\xADte\\xADgrated tools. With this new sup\\xADport, it gives you the abil\\xADity to use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://swaggerhub.com/blog/api-design/design-first-or-code-first-api-development/\"\n  }), \"De\\xADsign Dri\\xADven\"), \" (or De\\xADsign First) ap\\xADproach \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"with\\xADout load\\xADing any thirds par\\xADties li\\xADbraries\"), \".\"), mdx(\"h2\", {\n    \"id\": \"features\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#features\"\n  })), \"Features\"), mdx(\"p\", null, \"The ac\\xADtu\\xADally sup\\xADported fea\\xADtures are the fol\\xADlow\\xADing (we reefer to Ope\\xADnAPI ver\\xADsion 3.0.0):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ope\\xADnAPI 3 com\\xADpli\\xADant API spec\\xADi\\xADfi\\xADca\\xADtion val\\xADi\\xADda\\xADtion with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"load\\xADing of ex\\xADter\\xADnal Json schemas\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic re\\xADquest val\\xADi\\xADda\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic mount of se\\xADcu\\xADrity val\\xADi\\xADda\\xADtion han\\xADdlers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic 501 re\\xADsponse for not im\\xADple\\xADmented op\\xADer\\xADa\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Router fac\\xADtory to pro\\xADvide all this fea\\xADtures to users\")), mdx(\"p\", null, \"Au\\xADto\\xADmatic re\\xADquest val\\xADi\\xADda\\xADtion is pro\\xADvided by a new han\\xADdler: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \". You can also de\\xADfine your own \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \" with\\xADout API spec\\xADi\\xADfi\\xADca\\xADtions, but I will dis\\xADcuss it later.\"), mdx(\"p\", null, \"The re\\xADquest val\\xADi\\xADda\\xADtion (pro\\xADvided by sub\\xADclass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RequestValidationHandler\"), \") ac\\xADtu\\xADally sup\\xADports:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pa\\xADra\\xADme\\xADters de\\xADfined in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#parameter-object\"\n  }), \"Pa\\xADra\\xADme\\xADter ob\\xADject\"), \". We sup\\xADport every type of pa\\xADra\\xADme\\xADter, in\\xADclud\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"object\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"array\"), \". We also sup\\xADport every type de\\xADscrip\\xADtion field (for ex\\xADam\\xADple \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"format\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"minimum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"maximum\"), \", etc). Also, at the mo\\xADment, we sup\\xADport every com\\xADbi\\xADna\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"explode\"), \" field (ex\\xADcluded styles \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Body de\\xADfined in new \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#request-body-object\"\n  }), \"Re\\xADquest\\xADBody ob\\xADject\"), \". In par\\xADtic\\xADu\\xADlar:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \" the val\\xADi\\xADda\\xADtion han\\xADdler will take schema that you have de\\xADfined in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema\"), \" ob\\xADject and will val\\xADi\\xADdate json bod\\xADies with it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/x-www-form-urlencoded\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"multipart/form-data\"), \" the val\\xADi\\xADda\\xADtion han\\xADdler will take care of val\\xADi\\xADdate every pa\\xADra\\xADme\\xADters in form at\\xADtrib\\xADutes. It ac\\xADtu\\xADally sup\\xADports only comma sep\\xADa\\xADrated val\\xADues for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"object\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"arrays\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For other pa\\xADra\\xADme\\xADter types it will check \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Content-Type\"), \" header\")))), mdx(\"p\", null, \"Re\\xADquest val\\xADi\\xADda\\xADtion er\\xADrors will be car\\xADried with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RoutingContext\"), \" en\\xADcap\\xADsu\\xADlated in an ob\\xADject called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \", so you have to at\\xADtach fail\\xADure han\\xADdler to check if some\\xADthing went wrong dur\\xADing val\\xADi\\xADda\\xADtion. Also the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RoutingContext\"), \" carry a new ob\\xADject called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" that en\\xADcap\\xADsu\\xADlate all re\\xADquest pa\\xADra\\xADme\\xADters de\\xADse\\xADri\\xADal\\xADized and parsed.\"), mdx(\"p\", null, \"Router fac\\xADtory is in\\xADtended to give you a re\\xADally sim\\xADple user in\\xADter\\xADface to use Ope\\xADnAPI 3 sup\\xADport. Most im\\xADpor\\xADtant fea\\xADtures are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Async load\\xADing of spec\\xADi\\xADfi\\xADca\\xADtion and its schema de\\xADpen\\xADden\\xADcies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic con\\xADvert Ope\\xADnAPI style paths to Vert.x style paths\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lazy meth\\xADods: op\\xADer\\xADa\\xADtions (com\\xADbi\\xADna\\xADtion of paths and HTTP meth\\xADods) are mounted in de\\xADf\\xADi\\xADn\\xADi\\xADtion order in\\xADside spec\\xADi\\xADfi\\xADca\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic mount of se\\xADcu\\xADrity val\\xADi\\xADda\\xADtion han\\xADdlers\")), mdx(\"p\", null, \"Also, it\\u2019s planned to re\\xADlease a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"project skele\\xADton gen\\xADer\\xADa\\xADtor\"), \" based on API spec.\"), mdx(\"h2\", {\n    \"id\": \"startup-your-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#startup-your-project\"\n  })), \"Startup your project\"), mdx(\"p\", null, \"We are in a test\\xADing stage, so the vertx-\\u200Bweb of\\xADfi\\xADcial repo doesn\\u2019t con\\xADtain it. To in\\xADclude the mod\\xADi\\xADfied ver\\xADsion of vertx-\\u200Bweb re\\xADplace your vertx-\\u200Bweb maven de\\xADpen\\xADdency with this one:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-web-api-contract\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.6.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Now you can start using Ope\\xADnAPI 3 in\\xADside your Vert.x pow\\xADered app!\"), mdx(\"p\", null, \"First of all you need to load the spec\\xADi\\xADfi\\xADca\\xADtion and con\\xADstruct the router fac\\xADtory:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Load the api spec. This operation is asynchronous\"), \"\\nOpenAPI3RouterFactory.create(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \".vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/resources/petstore.yaml\\\"\"), \", ar -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success\"), \"\\n        OpenAPI3RouterFactory routerFactory = ar.result();\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n        Throwable exception = ar.cause();\\n        logger.error(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Ops!\\\"\"), \", exception);\\n    }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"handlers-mounting\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#handlers-mounting\"\n  })), \"Handlers mounting\"), mdx(\"p\", null, \"Now load han\\xADdlers to your op\\xADer\\xADa\\xADtions. Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addHandlerByOperationId(String operationId, Handler<RoutingContext> handler)\"), \" to add an han\\xADdler to a route that matches the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \". To add a fail\\xADure han\\xADdler use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addFailureHandlerByOperationId(String operationId, Handler<RoutingContext> failureHandler) \")), mdx(\"p\", null, \"You can, of course, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"add mul\\xADti\\xADple han\\xADdlers to same op\\xADer\\xADa\\xADtion\"), \", with\\xADout over\\xADwrit\\xADing the ex\\xADist\\xADing ones.\"), mdx(\"p\", null, \"This is an ex\\xADam\\xADple of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addHandlerByOperationId()\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add an handler with operationId\"), \"\\nrouterFactory.addHandlerByOperationId(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"listPets\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle listPets operation (GET /pets)\"), \"\\n}, routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle failure\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"request-parameters\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#request-parameters\"\n  })), \"Request parameters\"), mdx(\"p\", null, \"Now you can freely use re\\xADquest pa\\xADra\\xADme\\xADters. To get the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" ob\\xADject:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameters params = routingContext.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"parsedParameters\\\"\"), \");\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" ob\\xADject pro\\xADvides all meth\\xADods to ac\\xADcess to query, cookie, header, path, form and en\\xADtire body pa\\xADra\\xADme\\xADters. Here are some ex\\xADam\\xADples of how to use this ob\\xADject.\"), mdx(\"p\", null, \"Pa\\xADra\\xADme\\xADter with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awesomeParameter\"), \" with type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter awesomeParameter = params.queryParameter(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"awesomeParameter\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (awesomeParameter != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \") {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// awesomeParameter parameter exists, but we are not sure that is empty or not (query parameters can be empty with allowEmptyValue: true)\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!awesomeParameter.isEmpty()) {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now we are sure that it exists and it's not empty, so we can extract it\"), \"\\n      Integer awesome = awesomeParameter.getInteger();\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Parameter exists, but it's empty value\"), \"\\n    }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Parameter doesn't exist (it's not required)\"), \"\\n}\\n\")), mdx(\"p\", null, \"As you can see, every pa\\xADra\\xADme\\xADter is mapped in re\\xADspec\\xADtive ob\\xADjects (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Integer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format: int64\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Long\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"float\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Float\"), \" and so on)\"), mdx(\"p\", null, \"Comma sep\\xADa\\xADrated array with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awesomeParameters\"), \" with type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter awesomeParameters = params.queryParameter(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"awesomeParameters\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (awesomeParameters != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \" && !awesomeParameters.isEmpty()) {\\n    List<RequestParameter> awesomeList = awesomeParameters.getArray();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \" (RequestParameter awesome : awesomeList) {\\n      Integer a = awesome.getInteger();\\n    }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// awesomeParameters not found or empty string\"), \"\\n}\\n\")), mdx(\"p\", null, \"JSON Body:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter body = params.body();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (body != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \")\\n  JsonObject jsonBody = body.getJsonObject();\\n\")), mdx(\"h2\", {\n    \"id\": \"security-handling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#security-handling\"\n  })), \"Security handling\"), mdx(\"p\", null, \"You can mount only one se\\xADcu\\xADrity han\\xADdler for a com\\xADbi\\xADna\\xADtion of schema and scope.\"), mdx(\"p\", null, \"To add a se\\xADcu\\xADrity han\\xADdler only with a schema name:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routerFactory.addSecurityHandler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"security_scheme_name\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here and then call next()\"), \"\\n    routingContext.next();\\n});\\n\")), mdx(\"p\", null, \"To add a se\\xADcu\\xADrity han\\xADdler with a com\\xADbi\\xADna\\xADtion of schema name and scope:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routerFactory.addSecuritySchemaScopeValidator(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"security_scheme_name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scope_name\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here and then call next()\"), \"\\n    routingContext.next();\\n});\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"You can de\\xADfine se\\xADcu\\xADrity han\\xADdlers where you want but de\\xADfine it! | Dur\\xADing Router in\\xADstan\\xADti\\xADa\\xADtion, if fac\\xADtory finds a path that re\\xADquire a se\\xADcu\\xADrity schema with\\xADout an as\\xADsigned han\\xADdler, It will throw a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RouterFactoryException\"))), mdx(\"h2\", {\n    \"id\": \"error-handling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#error-handling\"\n  })), \"Error handling\"), mdx(\"p\", null, \"Every time you add an han\\xADdler for an op\\xADer\\xADa\\xADtion you can add a fail\\xADure han\\xADdler. To han\\xADdle a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationException\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Throwable failure = routingContext.failure();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (failure \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"instanceof\"), \" ValidationException)\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle Validation Exception\"), \"\\n    routingContext.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"400\"), \").setStatusMessage(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ValidationError\\\"\"), \").end(failure.getMessage());\\n\")), mdx(\"p\", null, \"Also the router fac\\xADtory pro\\xADvides two other tools:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It au\\xADto\\xADmat\\xADi\\xADcally mounts a 501 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Not Implemented\"), \" han\\xADdler for op\\xADer\\xADa\\xADtions where you haven\\u2019t mounted any han\\xADdler\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It can load a de\\xADfault \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ValidationException\"), \" fail\\xADure han\\xADdler\")), mdx(\"p\", null, \"Both these op\\xADtions are con\\xADfig\\xADurable with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"RouterFactoryOptions\"))), mdx(\"h2\", {\n    \"id\": \"and-now-use-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-now-use-it\"\n  })), \"And now use it!\"), mdx(\"p\", null, \"Now you are ready to gen\\xADer\\xADate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \"!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Router router = routerFactory.getRouter();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now you can use your Router instance\"), \"\\nHttpServer server = vertx.createHttpServer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" HttpServerOptions().setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \").setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \"));\\nserver.requestHandler(router::accept).listen();\\n\")), mdx(Alert, {\n    info: true,\n    title: \"Lazy methods!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getRouter()\"), \" gen\\xADer\\xADate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" ob\\xADject, so you don\\u2019t have to care about code de\\xADf\\xADi\\xADn\\xADi\\xADtion order\")), mdx(\"h2\", {\n    \"id\": \"and-now\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-now\"\n  })), \"And now?\"), mdx(\"p\", null, \"You can find a com\\xADplete ex\\xADam\\xADple on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/web-examples#http-request-validation-and-openapi-3-router-factory\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-examples\"))), mdx(\"p\", null, \"You can ac\\xADcess to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/#web\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion here\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/package-summary.html\"\n  }), \"Javadoc here\")), mdx(Alert, {\n    info: true,\n    title: \"We want you!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Please give us your feed\\xADback open\\xADing an issue \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/slinkydeveloper/vertx-web/issues\"\n  }), \"here\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div class=\"alert info\"><div class=\"alert-title\">Now on upstream!</div><p>We have pub­lished this pack­age with name <code>vertx-web-api-contract</code></p></div><p>As GSoC 2017’s stu­dent, I’m ac­tu­ally work­ing on an em­bed­ded sup­port to Ope­nAPI 3 stan­dard in­side Eclipse Vert.x frame­work. Now, after a lot of work, you can try it!</p><h2 id=\"why-openapi-3\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#why-openapi-3\"></a>Why OpenAPI 3?</h2><p>Ope­nAPI 2 is the most im­por­tant industry-​grade stan­dard for API Spec­i­fi­ca­tions. As you can see on <a href=\"https://www.openapis.org/blog/2017/05/25/the-open-api-initiative-is-sending-you-a-save-the-date-card?utm_source=Blog&amp;utm_medium=Twitter&amp;utm_campaign=SaveTheDate\">of­fi­cial blog of Ope­nAPI Ini­tia­tive</a>, the re­lease of ver­sion 3 is be­hind the cor­ner, so we want to give to our com­mu­nity the lat­est tools for the lat­est stan­dards!</p><p>Vert.x project ob­jec­tive is to give you more in­te­grated tools. With this new sup­port, it gives you the abil­ity to use the <a href=\"https://swaggerhub.com/blog/api-design/design-first-or-code-first-api-development/\">De­sign Dri­ven</a> (or De­sign First) ap­proach <strong>with­out load­ing any thirds par­ties li­braries</strong>.</p><h2 id=\"features\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#features\"></a>Features</h2><p>The ac­tu­ally sup­ported fea­tures are the fol­low­ing (we reefer to Ope­nAPI ver­sion 3.0.0):</p><ul><li>Ope­nAPI 3 com­pli­ant API spec­i­fi­ca­tion val­i­da­tion with <strong>load­ing of ex­ter­nal Json schemas</strong></li><li>Au­to­matic re­quest val­i­da­tion</li><li>Au­to­matic mount of se­cu­rity val­i­da­tion han­dlers</li><li>Au­to­matic 501 re­sponse for not im­ple­mented op­er­a­tions</li><li>Router fac­tory to pro­vide all this fea­tures to users</li></ul><p>Au­to­matic re­quest val­i­da­tion is pro­vided by a new han­dler: <code>ValidationHandler</code>. You can also de­fine your own <code>ValidationHandler</code> with­out API spec­i­fi­ca­tions, but I will dis­cuss it later.</p><p>The re­quest val­i­da­tion (pro­vided by sub­class <code>OpenAPI3RequestValidationHandler</code>) ac­tu­ally sup­ports:</p><ul><li>Pa­ra­me­ters de­fined in <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#parameter-object\">Pa­ra­me­ter ob­ject</a>. We sup­port every type of pa­ra­me­ter, in­clud­ing <code>object</code> and <code>array</code>. We also sup­port every type de­scrip­tion field (for ex­am­ple <code>format</code>, <code>minimum</code>, <code>maximum</code>, etc). Also, at the mo­ment, we sup­port every com­bi­na­tion of <code>style</code> and <code>explode</code> field (ex­cluded styles <code>matrix</code> and <code>label</code>)</li><li>Body de­fined in new <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#request-body-object\">Re­quest­Body ob­ject</a>. In par­tic­u­lar:<ul><li>For <code>application/json</code> the val­i­da­tion han­dler will take schema that you have de­fined in <code>schema</code> ob­ject and will val­i­date json bod­ies with it</li><li>For <code>application/x-www-form-urlencoded</code> and <code>multipart/form-data</code> the val­i­da­tion han­dler will take care of val­i­date every pa­ra­me­ters in form at­trib­utes. It ac­tu­ally sup­ports only comma sep­a­rated val­ues for <code>object</code> and <code>arrays</code></li><li>For other pa­ra­me­ter types it will check <code>Content-Type</code> header</li></ul></li></ul><p>Re­quest val­i­da­tion er­rors will be car­ried with <code>RoutingContext</code> en­cap­su­lated in an ob­ject called <code>ValidationHandler</code>, so you have to at­tach fail­ure han­dler to check if some­thing went wrong dur­ing val­i­da­tion. Also the <code>RoutingContext</code> carry a new ob­ject called <code>RequestParameters</code> that en­cap­su­late all re­quest pa­ra­me­ters de­se­ri­al­ized and parsed.</p><p>Router fac­tory is in­tended to give you a re­ally sim­ple user in­ter­face to use Ope­nAPI 3 sup­port. Most im­por­tant fea­tures are:</p><ul><li>Async load­ing of spec­i­fi­ca­tion and its schema de­pen­den­cies</li><li>Au­to­matic con­vert Ope­nAPI style paths to Vert.x style paths</li><li>Lazy meth­ods: op­er­a­tions (com­bi­na­tion of paths and HTTP meth­ods) are mounted in de­f­i­n­i­tion order in­side spec­i­fi­ca­tion</li><li>Au­to­matic mount of se­cu­rity val­i­da­tion han­dlers</li></ul><p>Also, it’s planned to re­lease a <strong>project skele­ton gen­er­a­tor</strong> based on API spec.</p><h2 id=\"startup-your-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#startup-your-project\"></a>Startup your project</h2><p>We are in a test­ing stage, so the vertx-​web of­fi­cial repo doesn’t con­tain it. To in­clude the mod­i­fied ver­sion of vertx-​web re­place your vertx-​web maven de­pen­dency with this one:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web-api-contract<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Now you can start using Ope­nAPI 3 in­side your Vert.x pow­ered app!</p><p>First of all you need to load the spec­i­fi­ca­tion and con­struct the router fac­tory:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Load the api spec. This operation is asynchronous</span>\nOpenAPI3RouterFactory.create(<span class=\"hljs-keyword\">this</span>.vertx, <span class=\"hljs-string\">&quot;src/main/resources/petstore.yaml&quot;</span>, ar -&gt; {\n    <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n        <span class=\"hljs-comment\">// Spec loaded with success</span>\n        OpenAPI3RouterFactory routerFactory = ar.result();\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n        Throwable exception = ar.cause();\n        logger.error(<span class=\"hljs-string\">&quot;Ops!&quot;</span>, exception);\n    }\n});\n</code></pre><h2 id=\"handlers-mounting\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#handlers-mounting\"></a>Handlers mounting</h2><p>Now load han­dlers to your op­er­a­tions. Use <code>addHandlerByOperationId(String operationId, Handler&lt;RoutingContext&gt; handler)</code> to add an han­dler to a route that matches the <code>operationId</code>. To add a fail­ure han­dler use <code>addFailureHandlerByOperationId(String operationId, Handler&lt;RoutingContext&gt; failureHandler) </code></p><p>You can, of course, <strong>add mul­ti­ple han­dlers to same op­er­a­tion</strong>, with­out over­writ­ing the ex­ist­ing ones.</p><p>This is an ex­am­ple of <code>addHandlerByOperationId()</code>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Add an handler with operationId</span>\nrouterFactory.addHandlerByOperationId(<span class=\"hljs-string\">&quot;listPets&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle listPets operation (GET /pets)</span>\n}, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle failure</span>\n});\n</code></pre><h2 id=\"request-parameters\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#request-parameters\"></a>Request parameters</h2><p>Now you can freely use re­quest pa­ra­me­ters. To get the <code>RequestParameters</code> ob­ject:</p><pre><code class=\"hljs language-java\">RequestParameters params = routingContext.get(<span class=\"hljs-string\">&quot;parsedParameters&quot;</span>);\n</code></pre><p>The <code>RequestParameters</code> ob­ject pro­vides all meth­ods to ac­cess to query, cookie, header, path, form and en­tire body pa­ra­me­ters. Here are some ex­am­ples of how to use this ob­ject.</p><p>Pa­ra­me­ter with name <code>awesomeParameter</code> with type <code>integer</code> in <code>query</code>:</p><pre><code class=\"hljs language-java\">RequestParameter awesomeParameter = params.queryParameter(<span class=\"hljs-string\">&quot;awesomeParameter&quot;</span>);\n<span class=\"hljs-keyword\">if</span> (awesomeParameter != <span class=\"hljs-keyword\">null</span>) {\n    <span class=\"hljs-comment\">// awesomeParameter parameter exists, but we are not sure that is empty or not (query parameters can be empty with allowEmptyValue: true)</span>\n    <span class=\"hljs-keyword\">if</span> (!awesomeParameter.isEmpty()) {\n      <span class=\"hljs-comment\">// Now we are sure that it exists and it&#x27;s not empty, so we can extract it</span>\n      Integer awesome = awesomeParameter.getInteger();\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-comment\">// Parameter exists, but it&#x27;s empty value</span>\n    }\n} <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Parameter doesn&#x27;t exist (it&#x27;s not required)</span>\n}\n</code></pre><p>As you can see, every pa­ra­me­ter is mapped in re­spec­tive ob­jects (<code>integer</code> in <code>Integer</code>, <code>integer</code> with <code>format: int64</code> in <code>Long</code>, <code>float</code> in <code>Float</code> and so on)</p><p>Comma sep­a­rated array with name <code>awesomeParameters</code> with type <code>integer</code> in <code>query</code>:</p><pre><code class=\"hljs language-java\">RequestParameter awesomeParameters = params.queryParameter(<span class=\"hljs-string\">&quot;awesomeParameters&quot;</span>);\n<span class=\"hljs-keyword\">if</span> (awesomeParameters != <span class=\"hljs-keyword\">null</span> &amp;&amp; !awesomeParameters.isEmpty()) {\n    List&lt;RequestParameter&gt; awesomeList = awesomeParameters.getArray();\n    <span class=\"hljs-keyword\">for</span> (RequestParameter awesome : awesomeList) {\n      Integer a = awesome.getInteger();\n    }\n} <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-comment\">// awesomeParameters not found or empty string</span>\n}\n</code></pre><p>JSON Body:</p><pre><code class=\"hljs language-java\">RequestParameter body = params.body();\n<span class=\"hljs-keyword\">if</span> (body != <span class=\"hljs-keyword\">null</span>)\n  JsonObject jsonBody = body.getJsonObject();\n</code></pre><h2 id=\"security-handling\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#security-handling\"></a>Security handling</h2><p>You can mount only one se­cu­rity han­dler for a com­bi­na­tion of schema and scope.</p><p>To add a se­cu­rity han­dler only with a schema name:</p><pre><code class=\"hljs language-java\">routerFactory.addSecurityHandler(<span class=\"hljs-string\">&quot;security_scheme_name&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle security here and then call next()</span>\n    routingContext.next();\n});\n</code></pre><p>To add a se­cu­rity han­dler with a com­bi­na­tion of schema name and scope:</p><pre><code class=\"hljs language-java\">routerFactory.addSecuritySchemaScopeValidator(<span class=\"hljs-string\">&quot;security_scheme_name&quot;</span>, <span class=\"hljs-string\">&quot;scope_name&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle security here and then call next()</span>\n    routingContext.next();\n});\n</code></pre><div class=\"alert info\"><p>You can de­fine se­cu­rity han­dlers where you want but de­fine it! | Dur­ing Router in­stan­ti­a­tion, if fac­tory finds a path that re­quire a se­cu­rity schema with­out an as­signed han­dler, It will throw a <code>RouterFactoryException</code></p></div><h2 id=\"error-handling\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#error-handling\"></a>Error handling</h2><p>Every time you add an han­dler for an op­er­a­tion you can add a fail­ure han­dler. To han­dle a <code>ValidationException</code>:</p><pre><code class=\"hljs language-java\">Throwable failure = routingContext.failure();\n<span class=\"hljs-keyword\">if</span> (failure <span class=\"hljs-keyword\">instanceof</span> ValidationException)\n    <span class=\"hljs-comment\">// Handle Validation Exception</span>\n    routingContext.response().setStatusCode(<span class=\"hljs-number\">400</span>).setStatusMessage(<span class=\"hljs-string\">&quot;ValidationError&quot;</span>).end(failure.getMessage());\n</code></pre><p>Also the router fac­tory pro­vides two other tools:</p><ul><li>It au­to­mat­i­cally mounts a 501 <code>Not Implemented</code> han­dler for op­er­a­tions where you haven’t mounted any han­dler</li><li>It can load a de­fault <code>ValidationException</code> fail­ure han­dler</li></ul><p>Both these op­tions are con­fig­urable with <a href=\"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\"><code>RouterFactoryOptions</code></a></p><h2 id=\"and-now-use-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-now-use-it\"></a>And now use it!</h2><p>Now you are ready to gen­er­ate the <code>Router</code>!</p><pre><code class=\"hljs language-java\">Router router = routerFactory.getRouter();\n\n<span class=\"hljs-comment\">// Now you can use your Router instance</span>\nHttpServer server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions().setPort(<span class=\"hljs-number\">8080</span>).setHost(<span class=\"hljs-string\">&quot;localhost&quot;</span>));\nserver.requestHandler(router::accept).listen();\n</code></pre><div class=\"alert info\"><div class=\"alert-title\">Lazy methods!</div><p><code>getRouter()</code> gen­er­ate the <code>Router</code> ob­ject, so you don’t have to care about code de­f­i­n­i­tion order</p></div><h2 id=\"and-now\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-now\"></a>And now?</h2><p>You can find a com­plete ex­am­ple on <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/web-examples#http-request-validation-and-openapi-3-router-factory\"><code>vertx-examples</code></a></p><p>You can ac­cess to <a href=\"https://vertx.io/docs/#web\">doc­u­men­ta­tion here</a> and <a href=\"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/package-summary.html\">Javadoc here</a></p><div class=\"alert info\"><div class=\"alert-title\">We want you!</div><p>Please give us your feed­back open­ing an issue <a href=\"https://github.com/slinkydeveloper/vertx-web/issues\">here</a></p></div>","scope":{}},"tfIdfTerms":[{"term":"handler","tf":21},{"term":"valid","tf":12},{"term":"object","tf":11},{"term":"paramet","tf":11},{"term":"support","tf":9},{"term":"openapi","tf":9},{"term":"us","tf":9},{"term":"secur","tf":8},{"term":"schema","tf":7},{"term":"automat","tf":7},{"term":"request","tf":7},{"term":"mount","tf":7},{"term":"will","tf":7},{"term":"add","tf":7},{"term":"specif","tf":6},{"term":"load","tf":6},{"term":"oper","tf":6},{"term":"defin","tf":6},{"term":"everi","tf":6},{"term":"name","tf":5},{"term":"give","tf":5},{"term":"router","tf":5},{"term":"factori","tf":5},{"term":"provid","tf":5},{"term":"type","tf":5}]},{"filename":"blog/2017-05-22-presentation-of-the-vert-x-swagger-project.mdx","date":"2017-05-22","slug":"presentation-of-the-vert-x-swagger-project","meta":{"title":"Presentation of the Vert.x-Swagger project","category":"guides","authors":[{"name":"Florent Chamfroy","github_id":"phiz71"}],"summary":"This post is an introduction to the Vert.x-Swagger project, and describe how to use the Swagger-Codegen plugin and the SwaggerRouter class."},"readingTime":{"text":"5 min read","minutes":4.705,"time":282300,"words":941},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This post is an in\\xADtro\\xADduc\\xADtion to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project, and de\\xADscribe how to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Swagger-Codegen\"), \" plug\\xADin and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \" class.\"), mdx(\"h2\", {\n    \"id\": \"eclipse-vertx--swagger\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#eclipse-vertx--swagger\"\n  })), \"Eclipse Vert.x & Swagger\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/\"\n  }), \"Vert.x\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-web/java/\"\n  }), \"Vert.x Web\"), \" are very con\\xADve\\xADnient to write REST API and es\\xADpe\\xADcially the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \" which is very use\\xADful to man\\xADage all re\\xADsources of an API.\"), mdx(\"p\", null, \"But when I start a new API, I usu\\xADally use the \\u201Cdesign-\\u200Bfirst\\u201D ap\\xADproach and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://swagger.io/specification/\"\n  }), \"Swag\\xADger\"), \" is my best friend to de\\xADfine what my API is sup\\xADposed to do. And then, comes the \\u201Cbor\\xADing\\u201D part of the job : con\\xADvert the swag\\xADger file con\\xADtent into java code. That\\u2019s al\\xADways the same : re\\xADsources, op\\xADer\\xADa\\xADtions, mod\\xADels\\u2026\"), mdx(\"p\", null, \"For\\xADtu\\xADnately, Swag\\xADger pro\\xADvides a code\\xADgen tool : \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen\"\n  }), \"Swagger-\\u200BCodegen\"), \". With this tool, you can gen\\xADer\\xADate a server stub based on your swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion file.\\nHow\\xADever, even if this gen\\xADer\\xADa\\xADtor pro\\xADvides many dif\\xADfer\\xADent lan\\xADguages and frame\\xADwork, Vert.X is miss\\xADing.\"), mdx(\"p\", null, \"This is where the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project comes in.\"), mdx(\"h2\", {\n    \"id\": \"the-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-project\"\n  })), \"The project\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Vert.x-\\u200BSwagger\"), \" is a maven project pro\\xADvid\\xADing 2 mod\\xADules.\"), mdx(\"h3\", {\n    \"id\": \"vertx-swagger-codegen\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-swagger-codegen\"\n  })), \"vertx-swagger-codegen\"), mdx(\"p\", null, \"It\\u2019s a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen\"\n  }), \"Swagger-\\u200BCodegen\"), \" plug\\xADin, which add the ca\\xADpa\\xADbil\\xADity of gen\\xADer\\xADat\\xADing a Java Vert.x Web\\xADServer to the gen\\xADer\\xADa\\xADtor.\"), mdx(\"p\", null, \"The gen\\xADer\\xADated server mainly con\\xADtains :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"POJOs for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"definitions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one Ver\\xADti\\xADcle per \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tag\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one Main\\xADVer\\xADti\\xADcle, which man\\xADage oth\\xADers APIVer\\xADti\\xADcle and start an HttpServer.\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"The Main\\xADVer\\xADti\\xADcle use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-router\"))), mdx(\"h3\", {\n    \"id\": \"vertx-swagger-router\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-swagger-router\"\n  })), \"vertx-swagger-router\"), mdx(\"p\", null, \"The main class of this mod\\xADule is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \". It\\u2019s more or less a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fac\\xADtory\"), \" (and maybe I should re\\xADname the class) that can cre\\xADate a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \", using the swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion file to con\\xADfig\\xADure all the routes. For each route, it ex\\xADtracts pa\\xADra\\xADme\\xADters from the re\\xADquest (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Query\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Path\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Body\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Form\"), \") and send them on the event\\xADBus, using ei\\xADther the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \" as the ad\\xADdress or a com\\xADputed id (just a pa\\xADra\\xADme\\xADter in the con\\xADstruc\\xADtor).\"), mdx(\"h2\", {\n    \"id\": \"let-see-how-it-works\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#let-see-how-it-works\"\n  })), \"Let see how it works\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"For this post, I will use a sim\\xADpli\\xADfied swag\\xADger file but you can find a more com\\xADplex ex\\xADam\\xADple \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger/tree/master/sample/petstore-vertx-server\"\n  }), \"here\"), \" based on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://petstore.swagger.io/\"\n  }), \"pet\\xADstore\"), \" swag\\xADger file\")), mdx(\"h3\", {\n    \"id\": \"generating-the-server\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#generating-the-server\"\n  })), \"Generating the server\"), mdx(\"p\", null, \"First, choose your swag\\xADger de\\xADf\\xADi\\xADn\\xADi\\xADtion. Here\\u2019s a YAML File, but it could be a JSON file:\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/6c654f3da2d4124d3fe65e5aaaaedf55\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"Then, down\\xADload these li\\xADbraries :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.2/swagger-codegen-cli-2.2.2.jar\"\n  }), \"swagger-\\u200Bcodegen-cli\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://central.maven.org/maven2/com/github/phiz71/vertx-swagger-codegen/1.0.0/vertx-swagger-codegen-1.0.0.jar\"\n  }), \"vertx-\\u200Bswagger-codegen\"))), mdx(\"p\", null, \"Fi\\xADnally, run this com\\xADmand\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"java -cp /path/to/swagger-codegen-cli-2.2.2.jar:/path/to/vertx-swagger-codegen-1.0.0.jar io.swagger.codegen.SwaggerCodegen generate \\\\\\n  -l java-vertx \\\\\\n  -o path/to/destination/folder \\\\\\n  -i path/to/swagger/definition \\\\\\n  --group-id your.group.id \\\\\\n  --artifact-id your.artifact.id\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"For more In\\xADfor\\xADma\\xADtion about how Swag\\xADger\\xADCode\\xADgen works, you can read this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/swagger-api/swagger-codegen#getting-started\"\n  }), \"https://github.com/swagger-\\u200Bapi/swagger-\\u200Bcodegen#getting-\\u200Bstarted\"))), mdx(\"p\", null, \"You should have some\\xADthing like that in your con\\xADsole:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), \"[main] INFO io.swagger.parser.Swagger20Parser - reading \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" ./wineCellarSwagger.yaml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/model/\"), \"Bottle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/model/\"), \"CellarInformation.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/\"), \"BottlesApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/\"), \"BottlesApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/I\"), \"nformationApi.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/verticle/I\"), \"nformationApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"resources/swagger.json\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/io/\"), \"swagger\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/server/\"), \"api/MainApiVerticle.java\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"src\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/main/\"), \"resources/vertx-\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"default\"), \"-jul-logging.properties\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"pom.xml\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \"README.md\\n[main] INFO io.swagger.codegen.AbstractGenerator - writing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"file\"), \" [path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/to/\"), \"destination\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/folder]/\"), \".swagger-codegen-ignore\\n\")), mdx(\"p\", null, \"And this in your des\\xADti\\xADna\\xADtion folder:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-swagger-presentation/GeneratedProject.png\",\n    \"alt\": \"Generated sources\"\n  }))), mdx(\"h3\", {\n    \"id\": \"what-have-been-created-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#what-have-been-created-\"\n  })), \"What have been created ?\"), mdx(\"p\", null, \"As you can see in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1\"), \",  the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-codegen\"), \" plug\\xADin has cre\\xADated one POJO by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"definition\"), \" in the swag\\xADger file.\"), mdx(\"h4\", {\n    \"id\": \"example--the-bottle-definition\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottle-definition\"\n  })), \"Example : the bottle definition\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/eabafda440b24881126089128d677121\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"In \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2a\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2b\"), \" you can find :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an in\\xADter\\xADface which con\\xADtains a func\\xADtion per \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"operation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a ver\\xADti\\xADcle which de\\xADfines all \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"operationId\"), \" and cre\\xADate \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/#_the_event_bus_api\"\n  }), \"Event\\xADBus\"), \" con\\xADsumers \")), mdx(\"h4\", {\n    \"id\": \"example--the-bottles-interface\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottles-interface\"\n  })), \"Example : the Bottles interface\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/be1ca2f550f44aea7fb2710b383e26ed\",\n    mdxType: \"Gist\"\n  }), mdx(\"h4\", {\n    \"id\": \"example--the-bottles-verticle\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#example--the-bottles-verticle\"\n  })), \"Example : the Bottles verticle\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/c0aadbb4f26ebed8e2e145d0b4a8d210\",\n    mdxType: \"Gist\"\n  }), mdx(\"h3\", {\n    \"id\": \"-and-now-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#-and-now-\"\n  })), \"\\u2026 and now ?\"), mdx(\"p\", null, \"Line \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"23\"), \" of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BottlesApiVerticle.java\"), \", you can see this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"BottlesApi service = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" BottlesApiImpl();\\n\")), mdx(\"p\", null, \"This line will not com\\xADpile until the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BottlesApiImpl\"), \" class is cre\\xADated.\"), mdx(\"p\", null, \"In all \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \"Ver\\xADti\\xADcles, you will find a vari\\xADable called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ser\\xADvice\"), \". It is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \" type and it is in\\xADstan\\xADci\\xADated with a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XXXAPI\"), \"Impl con\\xADtruc\\xADtor. This class does not exist yet since it is the busi\\xADness of your API.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"And so you will have to cre\\xADate these im\\xADple\\xADmen\\xADta\\xADtions.\")), mdx(\"h2\", {\n    \"id\": \"fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"\n  })), \"Fine, but what if I don\\u2019t want to build my API like this ?\"), mdx(\"p\", null, \"Well, Vert.x is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"un\\xADopin\\xADion\\xADated\"), \" but the way the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-codegen\"), \" cre\\xADates the server stub \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"is not\"), \".\\nSo if you want to im\\xADple\\xADment your API the way you want, while en\\xADjoy\\xADing dy\\xADnamic rout\\xADing based on a swag\\xADger file, the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"vertx-\\u200Bswagger-router\"), \" li\\xADbrary can be used stand\\xADalone. \"), mdx(\"p\", null, \"Just im\\xADport this jar into your project:\"), mdx(Gist, {\n    url: \"https://gist.github.com/phiz71/56e723362a1d1370c7262bff246fb087\",\n    mdxType: \"Gist\"\n  }), mdx(\"p\", null, \"You will be able to cre\\xADate your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\"\n  }), \"Router\"), \" like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"FileSystem vertxFileSystem = vertx.fileSystem();\\nvertxFileSystem.readFile(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"***YOUR_SWAGGER_FILE***\\\"\"), \", readFile -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (readFile.succeeded()) {\\n        Swagger swagger = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" SwaggerParser().parse(readFile.result().toString(Charset.forName(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"utf-8\\\"\"), \"))); \\n        Router swaggerRouter = SwaggerRouter.swaggerRouter(Router.router(vertx), swagger, vertx.eventBus(), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" OperationIdServiceIdResolver());\\n        [...]\\n   } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        [...]\\n   }\\n});\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"You can ig\\xADnore the last pa\\xADra\\xADme\\xADter in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter.swaggerRouter(...)\"), \". As a re\\xADsult, ad\\xADdresses will be com\\xADputed in\\xADstead of using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \" from the swag\\xADger file.\\nFor in\\xADstance, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET /bottles/{bottle_id}\"), \" will be\\xADcome \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GET_bot\\xADtles_bottle-\\u200Bid\"))), mdx(\"h2\", {\n    \"id\": \"conclusion\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#conclusion\"\n  })), \"Conclusion\"), mdx(\"p\", null, \"Vert.x and Swag\\xADger are great tools to build and doc\\xADu\\xADment an API but using both in the same project can be painful. The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/phiz71/vertx-swagger\"\n  }), \"Vert.x-\\u200BSwagger\"), \" project was made to save time, let\\xADting the de\\xADvel\\xADop\\xADers fo\\xADcus\\xADing on busi\\xADness code.\\nIt can be seen as an API frame\\xADwork over Vert.X.\"), mdx(\"p\", null, \"You can also use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SwaggerRouter\"), \" in your own project with\\xADout using Swagger-\\u200BCodegen.\"), mdx(\"p\", null, \"In fu\\xADture re\\xADleases, more in\\xADfor\\xADma\\xADtion from the swag\\xADger file will be used to con\\xADfig\\xADure the router and cer\\xADtainly oth\\xADers lan\\xADguages will be sup\\xADported.\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Though Vert.x is poly\\xADglot, Vert.x-\\u200BSwagger project only sup\\xADports Java. If you want to con\\xADtribute to sup\\xADport more lan\\xADguages, you\\u2019re wel\\xADcome :)\")), mdx(\"p\", null, \"Thanks for read\\xADing.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>This post is an in­tro­duc­tion to the <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project, and de­scribe how to use the <code>Swagger-Codegen</code> plug­in and the <code>SwaggerRouter</code> class.</p><h2 id=\"eclipse-vertx--swagger\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#eclipse-vertx--swagger\"></a>Eclipse Vert.x &amp; Swagger</h2><p><a href=\"http://vertx.io/docs/vertx-core/java/\">Vert.x</a> and <a href=\"http://vertx.io/docs/vertx-web/java/\">Vert.x Web</a> are very con­ve­nient to write REST API and es­pe­cially the <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a> which is very use­ful to man­age all re­sources of an API.</p><p>But when I start a new API, I usu­ally use the “design-​first” ap­proach and <a href=\"http://swagger.io/specification/\">Swag­ger</a> is my best friend to de­fine what my API is sup­posed to do. And then, comes the “bor­ing” part of the job : con­vert the swag­ger file con­tent into java code. That’s al­ways the same : re­sources, op­er­a­tions, mod­els…</p><p>For­tu­nately, Swag­ger pro­vides a code­gen tool : <a href=\"https://github.com/swagger-api/swagger-codegen\">Swagger-​Codegen</a>. With this tool, you can gen­er­ate a server stub based on your swag­ger de­f­i­n­i­tion file.\nHow­ever, even if this gen­er­a­tor pro­vides many dif­fer­ent lan­guages and frame­work, Vert.X is miss­ing.</p><p>This is where the <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project comes in.</p><h2 id=\"the-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-project\"></a>The project</h2><p><strong>Vert.x-​Swagger</strong> is a maven project pro­vid­ing 2 mod­ules.</p><h3 id=\"vertx-swagger-codegen\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-swagger-codegen\"></a>vertx-swagger-codegen</h3><p>It’s a <a href=\"https://github.com/swagger-api/swagger-codegen\">Swagger-​Codegen</a> plug­in, which add the ca­pa­bil­ity of gen­er­at­ing a Java Vert.x Web­Server to the gen­er­a­tor.</p><p>The gen­er­ated server mainly con­tains :</p><ul><li>POJOs for <code>definitions</code></li><li>one Ver­ti­cle per <code>tag</code></li><li>one Main­Ver­ti­cle, which man­age oth­ers APIVer­ti­cle and start an HttpServer.</li></ul><div class=\"alert info\"><p>The Main­Ver­ti­cle use <em>vertx-​swagger-router</em></p></div><h3 id=\"vertx-swagger-router\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-swagger-router\"></a>vertx-swagger-router</h3><p>The main class of this mod­ule is <code>SwaggerRouter</code>. It’s more or less a <em>Fac­tory</em> (and maybe I should re­name the class) that can cre­ate a <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a>, using the swag­ger de­f­i­n­i­tion file to con­fig­ure all the routes. For each route, it ex­tracts pa­ra­me­ters from the re­quest (<code>Query</code>, <code>Path</code>, <code>Header</code>, <code>Body</code>, <code>Form</code>) and send them on the event­Bus, using ei­ther the <code>operationId</code> as the ad­dress or a com­puted id (just a pa­ra­me­ter in the con­struc­tor).</p><h2 id=\"let-see-how-it-works\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#let-see-how-it-works\"></a>Let see how it works</h2><div class=\"alert info\"><p>For this post, I will use a sim­pli­fied swag­ger file but you can find a more com­plex ex­am­ple <a href=\"https://github.com/phiz71/vertx-swagger/tree/master/sample/petstore-vertx-server\">here</a> based on the <a href=\"http://petstore.swagger.io/\">pet­store</a> swag­ger file</p></div><h3 id=\"generating-the-server\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#generating-the-server\"></a>Generating the server</h3><p>First, choose your swag­ger de­f­i­n­i­tion. Here’s a YAML File, but it could be a JSON file:</p><div>...waiting for Gist...</div><p>Then, down­load these li­braries :</p><ul><li><a href=\"http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.2.2/swagger-codegen-cli-2.2.2.jar\">swagger-​codegen-cli</a></li><li><a href=\"http://central.maven.org/maven2/com/github/phiz71/vertx-swagger-codegen/1.0.0/vertx-swagger-codegen-1.0.0.jar\">vertx-​swagger-codegen</a></li></ul><p>Fi­nally, run this com­mand</p><pre><code class=\"hljs language-bash\">java -cp /path/to/swagger-codegen-cli-2.2.2.jar:/path/to/vertx-swagger-codegen-1.0.0.jar io.swagger.codegen.SwaggerCodegen generate \\\n  -l java-vertx \\\n  -o path/to/destination/folder \\\n  -i path/to/swagger/definition \\\n  --group-id your.group.id \\\n  --artifact-id your.artifact.id\n</code></pre><div class=\"alert info\"><p>For more In­for­ma­tion about how Swag­ger­Code­gen works, you can read this <a href=\"https://github.com/swagger-api/swagger-codegen#getting-started\">https://github.com/swagger-​api/swagger-​codegen#getting-​started</a></p></div><p>You should have some­thing like that in your con­sole:</p><pre><code class=\"hljs language-gradle\">[main] INFO io.swagger.parser.Swagger20Parser - reading <span class=\"hljs-keyword\">from</span> ./wineCellarSwagger.yaml\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/model/</span>Bottle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/model/</span>CellarInformation.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/</span>BottlesApi.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/</span>BottlesApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/I</span>nformationApi.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api<span class=\"hljs-regexp\">/verticle/I</span>nformationApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>resources/swagger.json\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>java<span class=\"hljs-regexp\">/io/</span>swagger<span class=\"hljs-regexp\">/server/</span>api/MainApiVerticle.java\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>src<span class=\"hljs-regexp\">/main/</span>resources/vertx-<span class=\"hljs-keyword\">default</span>-jul-logging.properties\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>pom.xml\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>README.md\n[main] INFO io.swagger.codegen.AbstractGenerator - writing <span class=\"hljs-keyword\">file</span> [path<span class=\"hljs-regexp\">/to/</span>destination<span class=\"hljs-regexp\">/folder]/</span>.swagger-codegen-ignore\n</code></pre><p>And this in your des­ti­na­tion folder:</p><p><img src=\"/images/blog/vertx-swagger-presentation/GeneratedProject.png\" alt=\"Generated sources\"/></p><h3 id=\"what-have-been-created-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#what-have-been-created-\"></a>What have been created ?</h3><p>As you can see in <strong>1</strong>,  the <em>vertx-​swagger-codegen</em> plug­in has cre­ated one POJO by <code>definition</code> in the swag­ger file.</p><h4 id=\"example--the-bottle-definition\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottle-definition\"></a>Example : the bottle definition</h4><div>...waiting for Gist...</div><p>In <strong>2a</strong> and <strong>2b</strong> you can find :</p><ul><li>an in­ter­face which con­tains a func­tion per <code>operation</code></li><li>a ver­ti­cle which de­fines all <code>operationId</code> and cre­ate <a href=\"http://vertx.io/docs/vertx-core/java/#_the_event_bus_api\">Event­Bus</a> con­sumers </li></ul><h4 id=\"example--the-bottles-interface\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottles-interface\"></a>Example : the Bottles interface</h4><div>...waiting for Gist...</div><h4 id=\"example--the-bottles-verticle\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#example--the-bottles-verticle\"></a>Example : the Bottles verticle</h4><div>...waiting for Gist...</div><h3 id=\"-and-now-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#-and-now-\"></a>… and now ?</h3><p>Line <code>23</code> of <code>BottlesApiVerticle.java</code>, you can see this</p><pre><code class=\"hljs language-java\">BottlesApi service = <span class=\"hljs-keyword\">new</span> BottlesApiImpl();\n</code></pre><p>This line will not com­pile until the <code>BottlesApiImpl</code> class is cre­ated.</p><p>In all <strong>XXXAPI</strong>Ver­ti­cles, you will find a vari­able called <em>ser­vice</em>. It is a <strong>XXXAPI</strong> type and it is in­stan­ci­ated with a <strong>XXXAPI</strong>Impl con­truc­tor. This class does not exist yet since it is the busi­ness of your API.</p><p><strong>And so you will have to cre­ate these im­ple­men­ta­tions.</strong></p><h2 id=\"fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#fine-but-what-if-i-dont-want-to-build-my-api-like-this-\"></a>Fine, but what if I don’t want to build my API like this ?</h2><p>Well, Vert.x is <strong>un­opin­ion­ated</strong> but the way the <em>vertx-​swagger-codegen</em> cre­ates the server stub <strong>is not</strong>.\nSo if you want to im­ple­ment your API the way you want, while en­joy­ing dy­namic rout­ing based on a swag­ger file, the <em>vertx-​swagger-router</em> li­brary can be used stand­alone. </p><p>Just im­port this jar into your project:</p><div>...waiting for Gist...</div><p>You will be able to cre­ate your <a href=\"http://vertx.io/docs/apidocs/io/vertx/ext/web/Router.html\">Router</a> like this:</p><pre><code class=\"hljs language-java\">FileSystem vertxFileSystem = vertx.fileSystem();\nvertxFileSystem.readFile(<span class=\"hljs-string\">&quot;***YOUR_SWAGGER_FILE***&quot;</span>, readFile -&gt; {\n    <span class=\"hljs-keyword\">if</span> (readFile.succeeded()) {\n        Swagger swagger = <span class=\"hljs-keyword\">new</span> SwaggerParser().parse(readFile.result().toString(Charset.forName(<span class=\"hljs-string\">&quot;utf-8&quot;</span>))); \n        Router swaggerRouter = SwaggerRouter.swaggerRouter(Router.router(vertx), swagger, vertx.eventBus(), <span class=\"hljs-keyword\">new</span> OperationIdServiceIdResolver());\n        [...]\n   } <span class=\"hljs-keyword\">else</span> {\n        [...]\n   }\n});\n</code></pre><div class=\"alert info\"><p>You can ig­nore the last pa­ra­me­ter in <code>SwaggerRouter.swaggerRouter(...)</code>. As a re­sult, ad­dresses will be com­puted in­stead of using <code>operationId</code> from the swag­ger file.\nFor in­stance, <code>GET /bottles/{bottle_id}</code> will be­come <em>GET_bot­tles_bottle-​id</em></p></div><h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#conclusion\"></a>Conclusion</h2><p>Vert.x and Swag­ger are great tools to build and doc­u­ment an API but using both in the same project can be painful. The <a href=\"https://github.com/phiz71/vertx-swagger\">Vert.x-​Swagger</a> project was made to save time, let­ting the de­vel­op­ers fo­cus­ing on busi­ness code.\nIt can be seen as an API frame­work over Vert.X.</p><p>You can also use the <code>SwaggerRouter</code> in your own project with­out using Swagger-​Codegen.</p><p>In fu­ture re­leases, more in­for­ma­tion from the swag­ger file will be used to con­fig­ure the router and cer­tainly oth­ers lan­guages will be sup­ported.</p><div class=\"alert info\"><p>Though Vert.x is poly­glot, Vert.x-​Swagger project only sup­ports Java. If you want to con­tribute to sup­port more lan­guages, you’re wel­come :)</p></div><p>Thanks for read­ing.</p>","scope":{}},"tfIdfTerms":[{"term":"swagger","tf":32},{"term":"us","tf":13},{"term":"file","tf":11},{"term":"api","tf":10},{"term":"codegen","tf":10},{"term":"project","tf":9},{"term":"creat","tf":8},{"term":"router","tf":7},{"term":"gener","tf":6},{"term":"class","tf":5},{"term":"server","tf":4},{"term":"definit","tf":4},{"term":"verticl","tf":4},{"term":"plugin","tf":3},{"term":"start","tf":3},{"term":"java","tf":3},{"term":"provid","tf":3},{"term":"tool","tf":3},{"term":"base","tf":3},{"term":"languag","tf":3},{"term":"on","tf":3},{"term":"rout","tf":3},{"term":"paramet","tf":3},{"term":"post","tf":2},{"term":"manag","tf":2}]},{"filename":"blog/2017-05-09-time-scheduling-with-chime.mdx","date":"2017-05-09","slug":"time-scheduling-with-chime","meta":{"title":"Time scheduling with Chime","category":"guides","authors":[{"name":"Lisi","github_id":"LisiLisenok"}],"summary":"Eclipse Vert.x executes periodic and delayed actions with periodic and one-shot timers. Chime is a time scheduler verticle that works on the Vert.x event bus."},"readingTime":{"text":"8 min read","minutes":7.34,"time":440400,"words":1468},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Eclipse Vert.x ex\\xADe\\xADcutes pe\\xADri\\xADodic and de\\xADlayed ac\\xADtions with\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/#_executing_periodic_and_delayed_actions\"\n  }), \"pe\\xADri\\xADodic and one-\\u200Bshot timers\"), \".\\nThis is the base for time sched\\xADul\\xADing and reach fea\\xADture ex\\xADten\\xADsion must be rather in\\xADter\\xADest\\xADing.\\nBe no\\xADti\\xADfied at cer\\xADtain date / time, take into ac\\xADcount hol\\xADi\\xADdays,\\nre\\xADpeat no\\xADti\\xADfi\\xADca\\xADtions until a given date, apply time zone,\\ntake into ac\\xADcount day\\xADlight sav\\xADing time etc.\\nThere are a lot of use\\xADful fea\\xADtures time sched\\xADuler may in\\xADtro\\xADduce to the Vert.x stack.  \"), mdx(\"h2\", {\n    \"id\": \"chime\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#chime\"\n  })), \"Chime\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/LisiLisenok/Chime\"\n  }), \"Chime\"), \" is time sched\\xADuler ver\\xADti\\xADcle which works on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x\"), \" event bus and pro\\xADvides:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sched\\xADul\\xADing with \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"cron-\\u200Bstyle\"), \", \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"in\\xADter\\xADval\"), \" or \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"union\"), \" timers:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"at a cer\\xADtain time of day (to the sec\\xADond);  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"on cer\\xADtain days of the week, month or year;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"with a given time in\\xADter\\xADval;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"with nearly any com\\xADbi\\xADna\\xADtion of all of above;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"re\\xADpeat\\xADing a given num\\xADber of times;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"re\\xADpeat\\xADing until a given time / date;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"re\\xADpeat\\xADing in\\xADfi\\xADnitely  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prox\\xADy\\xADing event bus with con\\xADven\\xADtional in\\xADter\\xADfaces  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ap\\xADply\\xADing time zones avail\\xADable on \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"JVM\"), \" with day\\xADlight sav\\xADing time taken into ac\\xADcount  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flex\\xADi\\xADble timers man\\xADage\\xADment sys\\xADtem:  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"group\\xADing timers;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"defin\\xADing a timer start or end times  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"paus\\xADing / re\\xADsum\\xADing;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fire count\\xADing;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lis\\xADten\\xADing and send\\xADing mes\\xADsages via event bus with \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"JSON\"), \";  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"pub\\xADlish\\xADing\"), \" or \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"send\\xADing\"), \" timer fire event to the ad\\xADdress of your choice.  \")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" is writ\\xADten in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ceylon-lang.org\"\n  }), \"Cey\\xADlon\"), \" and is avail\\xADable at\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://herd.ceylon-lang.org/modules/herd.schedule.chime\"\n  }), \"Cey\\xADlon Herd\"), \".\")), mdx(\"h2\", {\n    \"id\": \"running\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#running\"\n  })), \"Running\"), mdx(\"h3\", {\n    \"id\": \"ceylon-users\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ceylon-users\"\n  })), \"Ceylon users\"), mdx(\"p\", null, \"De\\xADploy \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Verticle.deployVerticle\"), \" method.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-Ceylon\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.ceylon.core {vertx}\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" herd.schedule.chime {Chime}\\nChime().deploy(vertx.vertx());\\n\")), mdx(\"p\", null, \"Or with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx.deployVerticle(\\\\\\\"ceylon:herd.schedule.chime/0.2.1\\\\\\\");\"), \"\\nbut en\\xADsure that Cey\\xADlon ver\\xADti\\xADcle fac\\xADtory is avail\\xADable at class path.   \"), mdx(\"h3\", {\n    \"id\": \"java-users\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#java-users\"\n  })), \"Java users\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"En\\xADsure that Cey\\xADlon ver\\xADti\\xADcle fac\\xADtory is avail\\xADable at class path.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Put Cey\\xADlon ver\\xADsions to con\\xADsis\\xADtency. For in\\xADstance, Vert.x 3.4.1 de\\xADpends on Cey\\xADlon 1.3.0\\nwhile Chime 0.2.1 de\\xADpends on Cey\\xADlon 1.3.2. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vertx.io/docs/vertx-core/java/#_deploying_verticles_programmatically\"\n  }), \"De\\xADploy ver\\xADti\\xADcle\"), \", like:  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-Java\"\n  }), \"vertx.deployVerticle(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ceylon:herd.schedule.chime/0.2.1\\\"\"), \")\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Ex\\xADam\\xADple with Maven is avail\\xADable at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/LisiLisenok/ChimeJavaExample\"\n  }), \"Github\"), \".\")), mdx(\"h2\", {\n    \"id\": \"schedulers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#schedulers\"\n  })), \"Schedulers\"), mdx(\"p\", null, \"Well, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" ver\\xADti\\xADcle is de\\xADployed. Let\\u2019s see its struc\\xADture.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"In order to pro\\xADvide flex\\xADi\\xADble and broad ways to man\\xADage tim\\xADing two level ar\\xADchi\\xADtec\\xADture is adopted.\\nIt con\\xADsists of sched\\xADulers and timers. Timer is a unit which fires at a given time.\\nWhile sched\\xADuler is a set or group of timers and pro\\xADvides fol\\xADlow\\xADing:    \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cre\\xADat\\xADing and delet\\xADing timers;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"paus\\xADing / re\\xADsum\\xADing all timers work\\xADing within the sched\\xADuler;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"info on the run\\xADning timers;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"de\\xADfault time zone;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lis\\xADten\\xADing event bus at the given sched\\xADuler ad\\xADdress for the re\\xADquests to.  \")), mdx(\"p\", null, \"Any timer op\\xADer\\xADates within some sched\\xADuler. And one or sev\\xADeral sched\\xADulers have to be cre\\xADated be\\xADfore start\\xADing sched\\xADul\\xADing.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"When \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" ver\\xADti\\xADcle is de\\xADployed it starts lis\\xADten event bus at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"chime\"), \" ad\\xADdress (can be con\\xADfig\\xADured).\\nIn order to cre\\xADate sched\\xADuler send to this ad\\xADdress a JSON mes\\xADsage.  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"operation\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"create\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scheduler name\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"Once sched\\xADuler is cre\\xADated it starts lis\\xADten event bus at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sched\\xADuler name\"), \" ad\\xADdress.\\nSend\\xADing mes\\xADsages to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"chime\"), \" ad\\xADdress or to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sched\\xADuler name\"), \" ad\\xADdress are rather equiv\\xADa\\xADlent,\\nex\\xADcept\\xADing that chime ad\\xADdress pro\\xADvides ser\\xADvices for every sched\\xADuler, while sched\\xADuler ad\\xADdress\\npro\\xADvides ser\\xADvices for this par\\xADtic\\xADu\\xADlar sched\\xADuler only.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The re\\xADquest sent to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" has to con\\xADtain \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"op\\xADer\\xADa\\xADtion\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"name\"), \" keys.\\nName key pro\\xADvides sched\\xADuler or timer name. While op\\xADer\\xADa\\xADtion key shows an ac\\xADtion \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" has to per\\xADform.\\nThere are only four pos\\xADsi\\xADble op\\xADer\\xADa\\xADtions:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cre\\xADate - cre\\xADate new sched\\xADuler or timer;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"delete - delete sched\\xADuler or timer;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"info - re\\xADquest info on \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Chime\"), \" or on a par\\xADtic\\xADu\\xADlar sched\\xADuler or timer;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"state - set or get sched\\xADuler or timer state (run\\xADning, paused or com\\xADpleted).  \")), mdx(\"h2\", {\n    \"id\": \"timers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#timers\"\n  })), \"Timers\"), mdx(\"p\", null, \"Now we have sched\\xADuler cre\\xADated and timers can be run within. There are two ways to ac\\xADcess a given timer:  \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Send\\xADing mes\\xADsage to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"chime\"), \" ad\\xADdress with \\u2018name\\u2019 field set to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sched\\xADuler name:timer name\"), \".  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Send\\xADing mes\\xADsage to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sched\\xADuler name\"), \" ad\\xADdress with \\u2018name\\u2019 field set to ei\\xADther \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"timer name\"), \" or \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sched\\xADuler name:timer name\"), \".  \")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html#timer-request\"\n  }), \"Timer re\\xADquest\"), \" is rather com\\xADpli\\xADcated and con\\xADtains a lot of de\\xADtails. In this blog post only basic fea\\xADtures are con\\xADsid\\xADered:  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"operation\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"create\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scheduler name:timer name\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"description\\\"\"), \": {}\\n};\\n\")), mdx(\"p\", null, \"This is rather sim\\xADi\\xADlar to re\\xADquest sent to cre\\xADate a sched\\xADuler.\\nThe dif\\xADfer\\xADence is only \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"de\\xADscrip\\xADtion\"), \" field is added.\\nThis de\\xADscrip\\xADtion is an JSON ob\\xADject which iden\\xADti\\xADfies par\\xADtic\\xADu\\xADlar timer type and its de\\xADtails.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The other fields not shown here are op\\xADtional and in\\xADcludes:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ini\\xADtial timer state (paused or run\\xADning);  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"start or end date-\\u200Btime;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"num\\xADber of re\\xADpeat\\xADing times;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"is timer mes\\xADsage to be pub\\xADlished or sent;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"timer fire mes\\xADsage and de\\xADliv\\xADery op\\xADtions;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"time zone.  \")), mdx(\"h2\", {\n    \"id\": \"timer-descriptions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#timer-descriptions\"\n  })), \"Timer descriptions\"), mdx(\"p\", null, \"Cur\\xADrently, three types of timers are sup\\xADported:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"In\\xADter\\xADval timer\"), \" which fires after each given time pe\\xADriod (min\\xADi\\xADmum 1 sec\\xADond):  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"type\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"interval\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"delay\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"timer delay in seconds, Integer\\\"\"), \"\\n};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cron style timer\"), \" which is de\\xADfined with cron-\\u200Bstyle:  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"type\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"cron\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"seconds\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"seconds in cron style, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"minutes\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"minutes in cron style, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"hours\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hours in cron style, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"days of month\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of month in cron style, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"months\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"months in cron style, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"days of week\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of week in cron style, String, optional\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"years\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"years in cron style, String, optional\\\"\"), \"  \\n};\\n\")), mdx(\"p\", null, \"Cron timer is rather pow\\xADer\\xADful and flex\\xADi\\xADble. In\\xADves\\xADti\\xADgate \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html#cron-expression\"\n  }), \"spec\\xADi\\xADfi\\xADca\\xADtion\"), \" for the com\\xADplete list of fea\\xADtures.  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Union timer\"), \" which com\\xADbines a num\\xADber of timers into a one:  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"type\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"union\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"timers\\\"\"), \": [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"list of the timer descriptions\\\"\"), \"]  \\n};\\n\")), mdx(\"p\", null, \"Union timer may be use\\xADful to fire at a list of spe\\xADcific dates / times.\"), mdx(\"h2\", {\n    \"id\": \"timer-events\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#timer-events\"\n  })), \"Timer events\"), mdx(\"p\", null, \"Once timer is started it sends or pub\\xADlishes mes\\xADsages to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sched\\xADuler name:timer name\"), \" ad\\xADdress in JSON for\\xADmat.\\nTwo types of events are sent:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fire event which oc\\xADcurs when time reaches next timer value:  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scheduler name:timer name, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"event\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"fire\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"count\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"total number of fire times, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"time\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ISO formated time / date, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"seconds\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"number of seconds since last minute, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"minutes\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"number of minutes since last hour, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"hours\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hour of day, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"day of month\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"day of month, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"month\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"month, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"year\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"year, Integer\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"time zone\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"time zone the timer works in, String\\\"\"), \"\\n};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"com\\xADplete event which oc\\xADcurs when timer is ex\\xADhausted by some cri\\xADte\\xADria given at timer cre\\xADate re\\xADquest:  \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"{  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scheduler name:timer name, String\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"event\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"complete\\\"\"), \",  \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"count\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"total number of fire times, Integer\\\"\"), \"  \\n};\\n\")), mdx(\"p\", null, \"Ba\\xADsi\\xADcally, now we know every\\xADthing to be happy with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \": sched\\xADulers and re\\xADquests to them, timers and timer events.\\nWill see some ex\\xADam\\xADples in the next sec\\xADtion.  \"), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#examples\"\n  })), \"Examples\"), mdx(\"h3\", {\n    \"id\": \"ceylon-example\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ceylon-example\"\n  })), \"Ceylon example\"), mdx(\"p\", null, \"Let\\u2019s con\\xADsider a timer which has to fire every month at 16-30 last Sun\\xADday.  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-Ceylon\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// listen the timer events\"), \"\\neventBus.consumer (\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my scheduler:my timer\\\"\"), \",\\n  (Throwable|Message<JsonObject?> msg) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"is\"), \" Message<JsonObject?> msg) { print(msg.body()); }\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" { print(msg); }  \\n  }\\n);\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// create scheduler and timer\"), \"\\neventBus.send<JsonObject> (\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"chime\\\"\"), \",\\n  JsonObject {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"operation\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"create\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my scheduler:my timer\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \" -> JsonObject {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"type\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"cron\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"seconds\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"minutes\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"30\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hours\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"16\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of month\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"months\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of week\\\"\"), \" -> \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SundayL\\\"\"), \"\\n    }\\n  }\\n);\\n\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"\\u2019*\\u2019 means any, \\u2018Sun\\xADdayL\\u2019 means last Sun\\xADday.\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"If \\u2018cre\\xADate\\u2019 re\\xADquest is sent to Chime ad\\xADdress with name set to \\u2018sched\\xADuler name:timer name\\u2019 and cor\\xADre\\xADspond\\xADing sched\\xADuler hasn\\u2019t been cre\\xADated be\\xADfore then Chime cre\\xADates both new sched\\xADuler and new timer.\")), mdx(\"h3\", {\n    \"id\": \"java-example\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#java-example\"\n  })), \"Java example\"), mdx(\"p\", null, \"Let\\u2019s con\\xADsider a timer which has to fire every Mon\\xADday at 8-30 and every Fri\\xADday at 17-30.  \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-Java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// listen the timer events\"), \"\\nMessageConsumer<JsonObject> consumer = eventBus.consumer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my scheduler:my timer\\\"\"), \");\\nconsumer.handler (\\n  message -> {\\n    System.out.println(message.body());\\n    }\\n);\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// description of timers\"), \"\\nJsonObject mondayTimer = (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject()).put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"cron\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"seconds\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"minutes\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"30\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hours\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"8\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of month\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"months\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of week\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Monday\\\"\"), \");\\nJsonObject fridayTimer = (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject()).put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"cron\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"seconds\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"minutes\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"30\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hours\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"17\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of month\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \").put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"months\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"*\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"days of week\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Friday\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// union timer - combines mondayTimer and fridayTimer\"), \"\\nJsonArray combination = (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonArray()).add(mondayTimer)\\n  .add(fridayTimer);\\nJsonObject timer = (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject()).put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"type\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"union\\\"\"), \")\\n  .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"timers\\\"\"), \", combination);\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// create scheduler and timer\"), \"\\neventBus.send (\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"chime\\\"\"), \",\\n  (\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject()).put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"operation\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"create\\\"\"), \")\\n    .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my scheduler:my timer\\\"\"), \")\\n    .put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \", timer)\\n);\\n\")), mdx(Alert, {\n    warning: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"En\\xADsure that Cey\\xADlon ver\\xADti\\xADcle fac\\xADtory with right ver\\xADsion is avail\\xADable at class path.\")), mdx(\"h2\", {\n    \"id\": \"at-the-end\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#at-the-end\"\n  })), \"At the end\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"herd.schedule.chime\"), \" mod\\xADule pro\\xADvides some fea\\xADtures not men\\xADtioned here:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"con\\xADve\\xADnient builders use\\xADful to fill in JSON de\\xADscrip\\xADtion of var\\xADi\\xADous timers;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prox\\xADy\\xADing event bus with con\\xADven\\xADtional in\\xADter\\xADfaces;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"read\\xADing JSON timer event into an ob\\xADject;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"at\\xADtach\\xADing JSON mes\\xADsage to the timer fire event;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"man\\xADag\\xADing time zones.  \")), mdx(\"p\", null, \"There are also some ideas for the fu\\xADture:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cus\\xADtom or user-\\u200Bdefined timers;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lim\\xADit\\xADing the timer fire time / date with cal\\xADen\\xADdar;  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ex\\xADtract\\xADing timer fire mes\\xADsage from ex\\xADter\\xADnal source.  \")), mdx(\"p\", null, \"This is very quick in\\xADtro\\xADduc\\xADtion to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chime\"), \" and if you are in\\xADter\\xADested in you may read\\nmore in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html\"\n  }), \"Chime doc\\xADu\\xADmen\\xADta\\xADtion\"), \" or even \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/LisiLisenok/Chime\"\n  }), \"con\\xADtribute\"), \" to.  \"), mdx(\"p\", null, \"Thank\\u2019s for the read\\xADing and enjoy with cod\\xADing!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Eclipse Vert.x ex­e­cutes pe­ri­odic and de­layed ac­tions with\n<a href=\"http://vertx.io/docs/vertx-core/java/#_executing_periodic_and_delayed_actions\">pe­ri­odic and one-​shot timers</a>.\nThis is the base for time sched­ul­ing and reach fea­ture ex­ten­sion must be rather in­ter­est­ing.\nBe no­ti­fied at cer­tain date / time, take into ac­count hol­i­days,\nre­peat no­ti­fi­ca­tions until a given date, apply time zone,\ntake into ac­count day­light sav­ing time etc.\nThere are a lot of use­ful fea­tures time sched­uler may in­tro­duce to the Vert.x stack.  </p><h2 id=\"chime\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#chime\"></a>Chime</h2><p><a href=\"https://github.com/LisiLisenok/Chime\">Chime</a> is time sched­uler ver­ti­cle which works on <em>Vert.x</em> event bus and pro­vides:  </p><ul><li>sched­ul­ing with <em>cron-​style</em>, <em>in­ter­val</em> or <em>union</em> timers:</li><li>at a cer­tain time of day (to the sec­ond);  </li><li>on cer­tain days of the week, month or year;  </li><li>with a given time in­ter­val;  </li><li>with nearly any com­bi­na­tion of all of above;  </li><li>re­peat­ing a given num­ber of times;  </li><li>re­peat­ing until a given time / date;  </li><li>re­peat­ing in­fi­nitely  </li><li>prox­y­ing event bus with con­ven­tional in­ter­faces  </li><li>ap­ply­ing time zones avail­able on <em>JVM</em> with day­light sav­ing time taken into ac­count  </li><li>flex­i­ble timers man­age­ment sys­tem:  </li><li>group­ing timers;  </li><li>defin­ing a timer start or end times  </li><li>paus­ing / re­sum­ing;  </li><li>fire count­ing;  </li><li>lis­ten­ing and send­ing mes­sages via event bus with <em>JSON</em>;  </li><li><em>pub­lish­ing</em> or <em>send­ing</em> timer fire event to the ad­dress of your choice.  </li></ul><div class=\"alert info\"><p><em>Chime</em> is writ­ten in <a href=\"https://ceylon-lang.org\">Cey­lon</a> and is avail­able at\n<a href=\"https://herd.ceylon-lang.org/modules/herd.schedule.chime\">Cey­lon Herd</a>.</p></div><h2 id=\"running\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#running\"></a>Running</h2><h3 id=\"ceylon-users\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ceylon-users\"></a>Ceylon users</h3><p>De­ploy <em>Chime</em> using <code>Verticle.deployVerticle</code> method.</p><pre><code class=\"hljs language-Ceylon\"><span class=\"hljs-keyword\">import</span> io.vertx.ceylon.core {vertx}\n<span class=\"hljs-keyword\">import</span> herd.schedule.chime {Chime}\nChime().deploy(vertx.vertx());\n</code></pre><p>Or with <code>vertx.deployVerticle(\\&quot;ceylon:herd.schedule.chime/0.2.1\\&quot;);</code>\nbut en­sure that Cey­lon ver­ti­cle fac­tory is avail­able at class path.   </p><h3 id=\"java-users\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#java-users\"></a>Java users</h3><ol><li>En­sure that Cey­lon ver­ti­cle fac­tory is avail­able at class path.  </li><li>Put Cey­lon ver­sions to con­sis­tency. For in­stance, Vert.x 3.4.1 de­pends on Cey­lon 1.3.0\nwhile Chime 0.2.1 de­pends on Cey­lon 1.3.2. </li><li><a href=\"http://vertx.io/docs/vertx-core/java/#_deploying_verticles_programmatically\">De­ploy ver­ti­cle</a>, like:  </li></ol><pre><code class=\"hljs language-Java\">vertx.deployVerticle(<span class=\"hljs-string\">&quot;ceylon:herd.schedule.chime/0.2.1&quot;</span>)\n</code></pre><div class=\"alert info\"><p>Ex­am­ple with Maven is avail­able at <a href=\"https://github.com/LisiLisenok/ChimeJavaExample\">Github</a>.</p></div><h2 id=\"schedulers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#schedulers\"></a>Schedulers</h2><p>Well, <em>Chime</em> ver­ti­cle is de­ployed. Let’s see its struc­ture.<br/>\n<!-- -->In order to pro­vide flex­i­ble and broad ways to man­age tim­ing two level ar­chi­tec­ture is adopted.\nIt con­sists of sched­ulers and timers. Timer is a unit which fires at a given time.\nWhile sched­uler is a set or group of timers and pro­vides fol­low­ing:    </p><ul><li>cre­at­ing and delet­ing timers;  </li><li>paus­ing / re­sum­ing all timers work­ing within the sched­uler;  </li><li>info on the run­ning timers;  </li><li>de­fault time zone;  </li><li>lis­ten­ing event bus at the given sched­uler ad­dress for the re­quests to.  </li></ul><p>Any timer op­er­ates within some sched­uler. And one or sev­eral sched­ulers have to be cre­ated be­fore start­ing sched­ul­ing.<br/>\n<!-- -->When <em>Chime</em> ver­ti­cle is de­ployed it starts lis­ten event bus at <strong>chime</strong> ad­dress (can be con­fig­ured).\nIn order to cre­ate sched­uler send to this ad­dress a JSON mes­sage.  </p><pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">&quot;operation&quot;</span>: <span class=\"hljs-string\">&quot;create&quot;</span>,\n  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;scheduler name&quot;</span>\n}\n</code></pre><p>Once sched­uler is cre­ated it starts lis­ten event bus at <strong>sched­uler name</strong> ad­dress.\nSend­ing mes­sages to <strong>chime</strong> ad­dress or to <strong>sched­uler name</strong> ad­dress are rather equiv­a­lent,\nex­cept­ing that chime ad­dress pro­vides ser­vices for every sched­uler, while sched­uler ad­dress\npro­vides ser­vices for this par­tic­u­lar sched­uler only.<br/>\n<!-- -->The re­quest sent to the <em>Chime</em> has to con­tain <strong>op­er­a­tion</strong> and <strong>name</strong> keys.\nName key pro­vides sched­uler or timer name. While op­er­a­tion key shows an ac­tion <em>Chime</em> has to per­form.\nThere are only four pos­si­ble op­er­a­tions:  </p><ul><li>cre­ate - cre­ate new sched­uler or timer;  </li><li>delete - delete sched­uler or timer;  </li><li>info - re­quest info on <em>Chime</em> or on a par­tic­u­lar sched­uler or timer;  </li><li>state - set or get sched­uler or timer state (run­ning, paused or com­pleted).  </li></ul><h2 id=\"timers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#timers\"></a>Timers</h2><p>Now we have sched­uler cre­ated and timers can be run within. There are two ways to ac­cess a given timer:  </p><ol><li>Send­ing mes­sage to <strong>chime</strong> ad­dress with ‘name’ field set to <strong>sched­uler name:timer name</strong>.  </li><li>Send­ing mes­sage to <strong>sched­uler name</strong> ad­dress with ‘name’ field set to ei­ther <strong>timer name</strong> or <strong>sched­uler name:timer name</strong>.  </li></ol><p><a href=\"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html#timer-request\">Timer re­quest</a> is rather com­pli­cated and con­tains a lot of de­tails. In this blog post only basic fea­tures are con­sid­ered:  </p><pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">&quot;operation&quot;</span>: <span class=\"hljs-string\">&quot;create&quot;</span>,\n  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;scheduler name:timer name&quot;</span>,\n  <span class=\"hljs-attr\">&quot;description&quot;</span>: {}\n};\n</code></pre><p>This is rather sim­i­lar to re­quest sent to cre­ate a sched­uler.\nThe dif­fer­ence is only <strong>de­scrip­tion</strong> field is added.\nThis de­scrip­tion is an JSON ob­ject which iden­ti­fies par­tic­u­lar timer type and its de­tails.<br/>\n<!-- -->The other fields not shown here are op­tional and in­cludes:  </p><ul><li>ini­tial timer state (paused or run­ning);  </li><li>start or end date-​time;  </li><li>num­ber of re­peat­ing times;  </li><li>is timer mes­sage to be pub­lished or sent;  </li><li>timer fire mes­sage and de­liv­ery op­tions;  </li><li>time zone.  </li></ul><h2 id=\"timer-descriptions\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#timer-descriptions\"></a>Timer descriptions</h2><p>Cur­rently, three types of timers are sup­ported:  </p><ul><li><strong>In­ter­val timer</strong> which fires after each given time pe­riod (min­i­mum 1 sec­ond):  </li></ul><pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;interval&quot;</span>,\n  <span class=\"hljs-attr\">&quot;delay&quot;</span>: <span class=\"hljs-string\">&quot;timer delay in seconds, Integer&quot;</span>\n};\n</code></pre><ul><li><strong>Cron style timer</strong> which is de­fined with cron-​style:  </li></ul><pre><code class=\"hljs language-json\">{  \n  <span class=\"hljs-attr\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;cron&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;seconds&quot;</span>: <span class=\"hljs-string\">&quot;seconds in cron style, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;minutes&quot;</span>: <span class=\"hljs-string\">&quot;minutes in cron style, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;hours&quot;</span>: <span class=\"hljs-string\">&quot;hours in cron style, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;days of month&quot;</span>: <span class=\"hljs-string\">&quot;days of month in cron style, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;months&quot;</span>: <span class=\"hljs-string\">&quot;months in cron style, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;days of week&quot;</span>: <span class=\"hljs-string\">&quot;days of week in cron style, String, optional&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;years&quot;</span>: <span class=\"hljs-string\">&quot;years in cron style, String, optional&quot;</span>  \n};\n</code></pre><p>Cron timer is rather pow­er­ful and flex­i­ble. In­ves­ti­gate <a href=\"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html#cron-expression\">spec­i­fi­ca­tion</a> for the com­plete list of fea­tures.  </p><ul><li><strong>Union timer</strong> which com­bines a num­ber of timers into a one:  </li></ul><pre><code class=\"hljs language-json\">{  \n  <span class=\"hljs-attr\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;union&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;timers&quot;</span>: [<span class=\"hljs-string\">&quot;list of the timer descriptions&quot;</span>]  \n};\n</code></pre><p>Union timer may be use­ful to fire at a list of spe­cific dates / times.</p><h2 id=\"timer-events\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#timer-events\"></a>Timer events</h2><p>Once timer is started it sends or pub­lishes mes­sages to <strong>sched­uler name:timer name</strong> ad­dress in JSON for­mat.\nTwo types of events are sent:  </p><ul><li>fire event which oc­curs when time reaches next timer value:  </li></ul><pre><code class=\"hljs language-json\">{  \n  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;scheduler name:timer name, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;event&quot;</span>: <span class=\"hljs-string\">&quot;fire&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;count&quot;</span>: <span class=\"hljs-string\">&quot;total number of fire times, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;time&quot;</span>: <span class=\"hljs-string\">&quot;ISO formated time / date, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;seconds&quot;</span>: <span class=\"hljs-string\">&quot;number of seconds since last minute, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;minutes&quot;</span>: <span class=\"hljs-string\">&quot;number of minutes since last hour, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;hours&quot;</span>: <span class=\"hljs-string\">&quot;hour of day, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;day of month&quot;</span>: <span class=\"hljs-string\">&quot;day of month, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;month&quot;</span>: <span class=\"hljs-string\">&quot;month, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;year&quot;</span>: <span class=\"hljs-string\">&quot;year, Integer&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;time zone&quot;</span>: <span class=\"hljs-string\">&quot;time zone the timer works in, String&quot;</span>\n};\n</code></pre><ul><li>com­plete event which oc­curs when timer is ex­hausted by some cri­te­ria given at timer cre­ate re­quest:  </li></ul><pre><code class=\"hljs language-json\">{  \n  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;scheduler name:timer name, String&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;event&quot;</span>: <span class=\"hljs-string\">&quot;complete&quot;</span>,  \n  <span class=\"hljs-attr\">&quot;count&quot;</span>: <span class=\"hljs-string\">&quot;total number of fire times, Integer&quot;</span>  \n};\n</code></pre><p>Ba­si­cally, now we know every­thing to be happy with <em>Chime</em>: sched­ulers and re­quests to them, timers and timer events.\nWill see some ex­am­ples in the next sec­tion.  </p><h2 id=\"examples\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#examples\"></a>Examples</h2><h3 id=\"ceylon-example\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ceylon-example\"></a>Ceylon example</h3><p>Let’s con­sider a timer which has to fire every month at 16-30 last Sun­day.  </p><pre><code class=\"hljs language-Ceylon\"><span class=\"hljs-comment\">// listen the timer events</span>\neventBus.consumer (\n  <span class=\"hljs-string\">&quot;my scheduler:my timer&quot;</span>,\n  (Throwable|Message&lt;JsonObject?&gt; msg) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">is</span> Message&lt;JsonObject?&gt; msg) { print(msg.body()); }\n    <span class=\"hljs-keyword\">else</span> { print(msg); }  \n  }\n);\n<span class=\"hljs-comment\">// create scheduler and timer</span>\neventBus.send&lt;JsonObject&gt; (\n  <span class=\"hljs-string\">&quot;chime&quot;</span>,\n  JsonObject {\n    <span class=\"hljs-string\">&quot;operation&quot;</span> -&gt; <span class=\"hljs-string\">&quot;create&quot;</span>,\n    <span class=\"hljs-string\">&quot;name&quot;</span> -&gt; <span class=\"hljs-string\">&quot;my scheduler:my timer&quot;</span>,\n    <span class=\"hljs-string\">&quot;description&quot;</span> -&gt; JsonObject {\n      <span class=\"hljs-string\">&quot;type&quot;</span> -&gt; <span class=\"hljs-string\">&quot;cron&quot;</span>,\n      <span class=\"hljs-string\">&quot;seconds&quot;</span> -&gt; <span class=\"hljs-string\">&quot;0&quot;</span>,\n      <span class=\"hljs-string\">&quot;minutes&quot;</span> -&gt; <span class=\"hljs-string\">&quot;30&quot;</span>,\n      <span class=\"hljs-string\">&quot;hours&quot;</span> -&gt; <span class=\"hljs-string\">&quot;16&quot;</span>,\n      <span class=\"hljs-string\">&quot;days of month&quot;</span> -&gt; <span class=\"hljs-string\">&quot;*&quot;</span>,\n      <span class=\"hljs-string\">&quot;months&quot;</span> -&gt; <span class=\"hljs-string\">&quot;*&quot;</span>,\n      <span class=\"hljs-string\">&quot;days of week&quot;</span> -&gt; <span class=\"hljs-string\">&quot;SundayL&quot;</span>\n    }\n  }\n);\n\n</code></pre><div class=\"alert info\"><p>’*’ means any, ‘Sun­dayL’ means last Sun­day.</p></div><div class=\"alert info\"><p>If ‘cre­ate’ re­quest is sent to Chime ad­dress with name set to ‘sched­uler name:timer name’ and cor­re­spond­ing sched­uler hasn’t been cre­ated be­fore then Chime cre­ates both new sched­uler and new timer.</p></div><h3 id=\"java-example\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#java-example\"></a>Java example</h3><p>Let’s con­sider a timer which has to fire every Mon­day at 8-30 and every Fri­day at 17-30.  </p><pre><code class=\"hljs language-Java\"><span class=\"hljs-comment\">// listen the timer events</span>\nMessageConsumer&lt;JsonObject&gt; consumer = eventBus.consumer(<span class=\"hljs-string\">&quot;my scheduler:my timer&quot;</span>);\nconsumer.handler (\n  message -&gt; {\n    System.out.println(message.body());\n    }\n);\n<span class=\"hljs-comment\">// description of timers</span>\nJsonObject mondayTimer = (<span class=\"hljs-keyword\">new</span> JsonObject()).put(<span class=\"hljs-string\">&quot;type&quot;</span>, <span class=\"hljs-string\">&quot;cron&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;seconds&quot;</span>, <span class=\"hljs-string\">&quot;0&quot;</span>).put(<span class=\"hljs-string\">&quot;minutes&quot;</span>, <span class=\"hljs-string\">&quot;30&quot;</span>).put(<span class=\"hljs-string\">&quot;hours&quot;</span>, <span class=\"hljs-string\">&quot;8&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;days of month&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>).put(<span class=\"hljs-string\">&quot;months&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;days of week&quot;</span>, <span class=\"hljs-string\">&quot;Monday&quot;</span>);\nJsonObject fridayTimer = (<span class=\"hljs-keyword\">new</span> JsonObject()).put(<span class=\"hljs-string\">&quot;type&quot;</span>, <span class=\"hljs-string\">&quot;cron&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;seconds&quot;</span>, <span class=\"hljs-string\">&quot;0&quot;</span>).put(<span class=\"hljs-string\">&quot;minutes&quot;</span>, <span class=\"hljs-string\">&quot;30&quot;</span>).put(<span class=\"hljs-string\">&quot;hours&quot;</span>, <span class=\"hljs-string\">&quot;17&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;days of month&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>).put(<span class=\"hljs-string\">&quot;months&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;days of week&quot;</span>, <span class=\"hljs-string\">&quot;Friday&quot;</span>);\n<span class=\"hljs-comment\">// union timer - combines mondayTimer and fridayTimer</span>\nJsonArray combination = (<span class=\"hljs-keyword\">new</span> JsonArray()).add(mondayTimer)\n  .add(fridayTimer);\nJsonObject timer = (<span class=\"hljs-keyword\">new</span> JsonObject()).put(<span class=\"hljs-string\">&quot;type&quot;</span>, <span class=\"hljs-string\">&quot;union&quot;</span>)\n  .put(<span class=\"hljs-string\">&quot;timers&quot;</span>, combination);\n<span class=\"hljs-comment\">// create scheduler and timer</span>\neventBus.send (\n  <span class=\"hljs-string\">&quot;chime&quot;</span>,\n  (<span class=\"hljs-keyword\">new</span> JsonObject()).put(<span class=\"hljs-string\">&quot;operation&quot;</span>, <span class=\"hljs-string\">&quot;create&quot;</span>)\n    .put(<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;my scheduler:my timer&quot;</span>)\n    .put(<span class=\"hljs-string\">&quot;description&quot;</span>, timer)\n);\n</code></pre><div class=\"alert warning\"><p>En­sure that Cey­lon ver­ti­cle fac­tory with right ver­sion is avail­able at class path.</p></div><h2 id=\"at-the-end\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#at-the-end\"></a>At the end</h2><p><code>herd.schedule.chime</code> mod­ule pro­vides some fea­tures not men­tioned here:  </p><ul><li>con­ve­nient builders use­ful to fill in JSON de­scrip­tion of var­i­ous timers;  </li><li>prox­y­ing event bus with con­ven­tional in­ter­faces;  </li><li>read­ing JSON timer event into an ob­ject;  </li><li>at­tach­ing JSON mes­sage to the timer fire event;  </li><li>man­ag­ing time zones.  </li></ul><p>There are also some ideas for the fu­ture:  </p><ul><li>cus­tom or user-​defined timers;  </li><li>lim­it­ing the timer fire time / date with cal­en­dar;  </li><li>ex­tract­ing timer fire mes­sage from ex­ter­nal source.  </li></ul><p>This is very quick in­tro­duc­tion to the <em>Chime</em> and if you are in­ter­ested in you may read\nmore in <a href=\"https://modules.ceylon-lang.org/repo/1/herd/schedule/chime/0.2.1/module-doc/api/index.html\">Chime doc­u­men­ta­tion</a> or even <a href=\"https://github.com/LisiLisenok/Chime\">con­tribute</a> to.  </p><p>Thank’s for the read­ing and enjoy with cod­ing!</p>","scope":{}},"tfIdfTerms":[{"term":"timer","tf":55},{"term":"schedul","tf":34},{"term":"time","tf":24},{"term":"chime","tf":19},{"term":"name","tf":18},{"term":"event","tf":15},{"term":"address","tf":13},{"term":"fire","tf":12},{"term":"creat","tf":12},{"term":"messag","tf":10},{"term":"ceylon","tf":10},{"term":"given","tf":9},{"term":"request","tf":8},{"term":"verticl","tf":7},{"term":"bu","tf":7},{"term":"provid","tf":7},{"term":"send","tf":7},{"term":"json","tf":7},{"term":"date","tf":6},{"term":"avail","tf":6},{"term":"start","tf":6},{"term":"featur","tf":5},{"term":"rather","tf":5},{"term":"repeat","tf":5},{"term":"zone","tf":5}]}],"numPages":9},"__N_SSG":true}