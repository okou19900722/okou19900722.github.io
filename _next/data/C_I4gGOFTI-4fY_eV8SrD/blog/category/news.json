{"pageProps":{"categories":["releases","guides","news"],"category":"news","page":1,"posts":[{"filename":"blog/2019-08-30-eclipse-vert-x-for-scala-next-steps.mdx","date":"2019-08-30","slug":"eclipse-vert-x-for-scala-next-steps","meta":{"title":"Eclipse Vert.x for Scala next steps","category":"news","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"This blog post gives an overview of the current plans for the vertx-lang-scala module, in particular with respect to the upcoming Vert.x 4."},"readingTime":{"text":"6 min read","minutes":5.225,"time":313500,"words":1045},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TL;DR:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No Scala 2.13 in Eclipse Vert.x 3.x due to in\\xADcreased sup\\xADport bur\\xADden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New value classes based ap\\xADproach for Vert.x 4\")), mdx(\"h2\", {\n    \"id\": \"retrospective\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#retrospective\"\n  })), \"Retrospective\"), mdx(\"p\", null, \"It\\u2019s been more than two years since the in\\xADcep\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-lang-scala\"), \" to the Vert.x ecosys\\xADtem. And al\\xADmost as long since I wrote my first \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/blog/scala-is-here/\"\n  }), \"blog post\"), \" about it.\"), mdx(\"p\", null, \"A lot has hap\\xADpened since March 2017:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-lang-scala\"), \" kept up with new ver\\xADsions of Scala\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all Vert.x-\\u200Bmodules are sup\\xADported (35 so far)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a Giter8 based \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-scala.g8\"\n  }), \"tem\\xADplate\"), \" was added for eas\\xADily boot\\xADstrap\\xADping a Vert.x-\\u200BScala-project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs were squashed\")), mdx(\"p\", null, \"And most re\\xADcently we re\\xADceived a great con\\xADtri\\xADbu\\xADtion by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/NikolajLeischner\"\n  }), \"Niko\\xADlaj Leis\\xADchner\"), \" who was kind enough to port the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Scala/vertx-web-scala\"\n  }), \"techempow\\xADered\"), \" bench\\xADmark to vert-\\u200Blang-scala. Which will be part of the next steps.\"), mdx(\"p\", null, \"The num\\xADbers pro\\xADduced by this bench\\xADmark were very promis\\xADing and and ad\\xADdi\\xADtional mo\\xADti\\xADva\\xADtion to move to the next phase of Scala sup\\xADport for Vert.x.\"), mdx(\"h2\", {\n    \"id\": \"old-idea\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#old-idea\"\n  })), \"Old idea\"), mdx(\"p\", null, \"Be\\xADfore get\\xADting to the new ideas I want to take a look at the \\u201Cold\\u201D one.\"), mdx(\"p\", null, \"The cur\\xADrent ver\\xADsion of vert-\\u200Blang-scala is based around the idea of wrap\\xADping the Vert.x-API with a ded\\xADi\\xADcated Scala-\\u200Blayer. That layer is cre\\xADated using a Freemarker-\\u200Bbased code gen\\xADer\\xADa\\xADtor. I took this idea from the first try by Tim Fox for build\\xADing that sup\\xADport.\"), mdx(\"p\", null, \"Wrap\\xADping the ex\\xADist\\xADing Java-\\u200BAPI was rather painful but gave me great flex\\xADi\\xADbil\\xADity to cre\\xADate an id\\xADiomatic Scala-\\u200BAPI.\"), mdx(\"p\", null, \"But an ap\\xADproach like that comes with a price:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are a lot of in\\xADter\\xADme\\xADdi\\xADate ob\\xADjects being cre\\xADated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Many un\\xADnec\\xADces\\xADsary con\\xADver\\xADsions be\\xADtween Java/Scala types\")), mdx(\"p\", null, \"Both in\\xADcreased mem\\xADory con\\xADsump\\xADtion and garbage col\\xADlec\\xADtion ac\\xADtiv\\xADity quite a bit and has been bug\\xADging me from the be\\xADgin\\xADning.\"), mdx(\"h2\", {\n    \"id\": \"new-idea\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#new-idea\"\n  })), \"New idea\"), mdx(\"p\", null, \"With Vert.x 4 ap\\xADproach\\xADing I was fi\\xADnally able to in\\xADvest time into the re\\xADwork I had wanted to do for quite a while.\"), mdx(\"p\", null, \"The core idea is to re\\xADplace the cur\\xADrent wrap\\xADping based ap\\xADproach with some\\xADthing more light\\xADweight but na\\xADtive to the Scala-\\u200Bworld.\"), mdx(\"p\", null, \"And that\\u2019s where \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.scala-lang.org/overviews/core/value-classes.html\"\n  }), \"value classes\"), \" come in.\"), mdx(\"p\", null, \"Value classes allow the ex\\xADten\\xADsion of ex\\xADist\\xADing classes with ad\\xADdi\\xADtional meth\\xADods. They make it easy to con\\xADtrol \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"when\"), \" meth\\xADods be\\xADcome vis\\xADi\\xADble and do that with a min\\xADi\\xADmum of over\\xADhead. To be pre\\xADcise: A wrap\\xADping class is nor\\xADmally ever only in\\xADstan\\xADti\\xADated \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"once\"), \".\"), mdx(\"p\", null, \"A good ex\\xADam\\xADple is the ad\\xADdi\\xADtion of meth\\xADods for wrap\\xADping the Vert.x ap\\xADproach of Promises with Scala-\\u200BFutures. Each method re\\xADturn\\xADing a Vert.x-\\u200BPromise needs to re\\xADceive an al\\xADter\\xADna\\xADtive ver\\xADsion which re\\xADturns a Scala-\\u200BFuture.\"), mdx(\"p\", null, \"In Vert.x 3 I achieved that by adding meth\\xADods to the wrap\\xADper and giv\\xADing them a dis\\xADtinct name. A method called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lis\\xADten\"), \" re\\xADturn\\xADing a Promise would re\\xADceive a com\\xADpan\\xADion called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lis\\xADten\\xADFu\\xADture\"), \" in the Scala layer.\"), mdx(\"p\", null, \"Let\\u2019s look at how this looks in the new ap\\xADproach:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" io.vertx.scala\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"object\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"core\")), \"{\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implicit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"HttpServerScala\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"val asJava: io.vertx.core.http.\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"HttpServer\")), \") \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AnyVal\"), \" \"), \"{\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"listenFuture\")), \"(port: java.lang.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Integer\"), \"): scala.concurrent.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Future\"), \"[io.vertx.core.http.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"HttpServer\"), \"] = {..}\\n      ..\\n}\\n\")), mdx(\"p\", null, \"The code above does the fol\\xADlow\\xADing things:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It cre\\xADates a pack\\xADage ob\\xADject for \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"io.vertx.scala.core\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it adds an im\\xADplict class \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HttpServer\\xADScala\"), \" to wrpa \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HttpServer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it adds a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lis\\xADten\\xADFu\\xADture\"), \" method\")), mdx(\"p\", null, \"Using this method in code looks like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" io.vertx.scala.demo\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.lang.scala.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"VertxExecutionContext\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.scala.core._\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" scala.util.{\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Failure\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Success\"), \"}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"object\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Main\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"main\")), \"(args: \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Array\"), \"[\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"String\"), \"]): \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Unit\"), \" = {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" vertx = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Vertx\"), \".vertx()\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implicit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" ec = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"VertxExecutionContext\"), \"(vertx.getOrCreateContext())\\n    vertx\\n      .createHttpServer()\\n      .requestHandler(r => {\\n        r.response().end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"bye\\\"\"), \")\\n      })\\n      .listenFuture(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"6667\"), \")\\n      .onComplete {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Success\"), \"(_) => println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Started\\\"\"), \")\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Failure\"), \"(exception) => println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure\\\"\"), \")\\n      }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Im\\xADport\\xADing the pack\\xADage ob\\xADject using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"im\\xADport io.vertx.scala.core._\"), \" brings the ex\\xADten\\xADsion method into scope and makes them avail\\xADable on all in\\xADstances of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HttpServer\"), \". In the ex\\xADam\\xADple above \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cre\\xADate\\xADHttpServer()\"), \" re\\xADturn such an in\\xADstance and we can now use the id\\xADiomatic Scala way of han\\xADdling a Fu\\xADture.\"), mdx(\"h3\", {\n    \"id\": \"even-more\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#even-more\"\n  })), \"Even more\"), mdx(\"p\", null, \"Ex\\xADtend\\xADing classes with Future-\\u200Bmethods is only one of the new things to come. On top of that the sup\\xADport for DataOb\\xADjects will be con\\xADsid\\xADer\\xADably im\\xADproved, both through ex\\xADtend\\xADing them and by pro\\xADvid\\xADing type aliases.\"), mdx(\"p\", null, \"I also switched from doing all con\\xADver\\xADsions for col\\xADlec\\xADtions au\\xADto\\xADmat\\xADi\\xADcally to hand\\xADing the con\\xADtrol back to the user. Some\\xADthing which gets even more im\\xADpor\\xADtant for Scala 2.13 and the new col\\xADlec\\xADtion API.\"), mdx(\"h3\", {\n    \"id\": \"the-downside\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-downside\"\n  })), \"The downside\"), mdx(\"p\", null, \"The clear down\\xADside of this ap\\xADproach is that the Java-\\u200Bmethods will stay vis\\xADi\\xADble since the java-\\u200Bclasses won\\u2019t be wrapped but ex\\xADtended. This might lead to some con\\xADfu\\xADsion but I am pretty sure the ben\\xADe\\xADfits out\\xADweight this down\\xADside.\"), mdx(\"p\", null, \"The big\\xADger change will be the re\\xADmoval of au\\xADto\\xADmatic von\\xADver\\xADsion be\\xADtween Scala types (Long/Int/String and  Col\\xADlec\\xADtions) and their Java coun\\xADter\\xADparts. I spent con\\xADsid\\xADer\\xADable time try\\xADing to tune that part in the cur\\xADrent ver\\xADsion bbut al\\xADways ended up hit\\xADting some edge\\xADcase. For now I\\u2019ve de\\xADcided to have the user pick the right time to con\\xADvert.\"), mdx(\"p\", null, \"I might still add this fea\\xADture in a later ver\\xADsion if user feed\\xADback points into that di\\xADrec\\xADtion.\"), mdx(\"h2\", {\n    \"id\": \"when-will-i-get-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#when-will-i-get-it\"\n  })), \"When will I get it?\"), mdx(\"p\", null, \"First for the good news: There is al\\xADready a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-lang-scala/tree/4.0\"\n  }), \"branch\"), \" with a full im\\xADple\\xADmen\\xADta\\xADtion.\"), mdx(\"p\", null, \"The bad news: It will break until Vert.x 4.0 is fi\\xADnally re\\xADleased.\"), mdx(\"p\", null, \"Vert.x 4 is in ac\\xADtive de\\xADvel\\xADop\\xADment with most APIs al\\xADready fi\\xADnal\\xADized but break\\xADing changes still hap\\xADpen. So use at your own risk!\"), mdx(\"h2\", {\n    \"id\": \"what-about-scala-213\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#what-about-scala-213\"\n  })), \"What about Scala 2.13?\"), mdx(\"p\", null, \"Scala 2.13 has been re\\xADleased re\\xADcently which prompted ques\\xADtions from the com\\xADmu\\xADnity about when it will be sup\\xADported by Vert.x.\"), mdx(\"p\", null, \"I haven\\u2019t done a good job pro\\xADvid\\xADing the re\\xADsults of our in\\xADter\\xADnal dis\\xADcus\\xADsions on that topic to the com\\xADmu\\xADnity. So here we go:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x 3 will stay on 2.12 for the fol\\xADlow\\xADing rea\\xADsons:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Both are still ac\\xADtively sup\\xADported\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scala ecosys\\xADtems takes some time to do the switch to 2.13\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We sim\\xADply don\\u2019t have the ca\\xADpac\\xADity to sup\\xADport both ver\\xADsions \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AND\"), \" the up\\xADcom\\xADing new ver\\xADsion\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x 4 will re\\xADceive 2.13 sup\\xADport\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scala ecosys\\xADtem will have moved closer to 2.13 adop\\xADtion when Vert.x 4 comes out\")))), mdx(\"h2\", {\n    \"id\": \"for-the-adventure-seaker\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#for-the-adventure-seaker\"\n  })), \"For the adventure seaker\"), mdx(\"p\", null, \"I ac\\xADtu\\xADally did a port of vertx-\\u200Blang-scala 3.8 to Scala 2.13 and you can grab the work in this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-lang-scala/tree/3.8_2.13\"\n  }), \"branch\"), \".\"), mdx(\"p\", null, \"Don\\u2019t ex\\xADpect \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ANY\"), \" sup\\xADport for this branch. This was only an ex\\xADper\\xADi\\xADment to see how much I had to change for ini\\xADtial 2.13 sup\\xADport.\"), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#summary\"\n  })), \"Summary\"), mdx(\"p\", null, \"Vert.x 4 will be an evo\\xADlu\\xADtion\\xADary step for vertx-\\u200Blang-scala. Value classes promise to re\\xADduce both com\\xADplex\\xADity and al\\xADlo\\xADca\\xADtion rate, two things which have been bug\\xADging me quite a bit with the cur\\xADrent ap\\xADproach.\"), mdx(\"p\", null, \"I am eager to hear from you all what you think about this new di\\xADrec\\xADtion.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><strong>TL;DR:</strong></p><ul><li>No Scala 2.13 in Eclipse Vert.x 3.x due to in­creased sup­port bur­den</li><li>New value classes based ap­proach for Vert.x 4</li></ul><h2 id=\"retrospective\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#retrospective\"></a>Retrospective</h2><p>It’s been more than two years since the in­cep­tion of <code>vertx-lang-scala</code> to the Vert.x ecosys­tem. And al­most as long since I wrote my first <a href=\"https://vertx.io/blog/scala-is-here/\">blog post</a> about it.</p><p>A lot has hap­pened since March 2017:</p><ul><li><code>vertx-lang-scala</code> kept up with new ver­sions of Scala</li><li>all Vert.x-​modules are sup­ported (35 so far)</li><li>a Giter8 based <a href=\"https://github.com/vert-x3/vertx-scala.g8\">tem­plate</a> was added for eas­ily boot­strap­ping a Vert.x-​Scala-project</li><li>Bugs were squashed</li></ul><p>And most re­cently we re­ceived a great con­tri­bu­tion by <a href=\"https://github.com/NikolajLeischner\">Niko­laj Leis­chner</a> who was kind enough to port the <a href=\"https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Scala/vertx-web-scala\">techempow­ered</a> bench­mark to vert-​lang-scala. Which will be part of the next steps.</p><p>The num­bers pro­duced by this bench­mark were very promis­ing and and ad­di­tional mo­ti­va­tion to move to the next phase of Scala sup­port for Vert.x.</p><h2 id=\"old-idea\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#old-idea\"></a>Old idea</h2><p>Be­fore get­ting to the new ideas I want to take a look at the “old” one.</p><p>The cur­rent ver­sion of vert-​lang-scala is based around the idea of wrap­ping the Vert.x-API with a ded­i­cated Scala-​layer. That layer is cre­ated using a Freemarker-​based code gen­er­a­tor. I took this idea from the first try by Tim Fox for build­ing that sup­port.</p><p>Wrap­ping the ex­ist­ing Java-​API was rather painful but gave me great flex­i­bil­ity to cre­ate an id­iomatic Scala-​API.</p><p>But an ap­proach like that comes with a price:</p><ul><li>There are a lot of in­ter­me­di­ate ob­jects being cre­ated.</li><li>Many un­nec­ces­sary con­ver­sions be­tween Java/Scala types</li></ul><p>Both in­creased mem­ory con­sump­tion and garbage col­lec­tion ac­tiv­ity quite a bit and has been bug­ging me from the be­gin­ning.</p><h2 id=\"new-idea\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#new-idea\"></a>New idea</h2><p>With Vert.x 4 ap­proach­ing I was fi­nally able to in­vest time into the re­work I had wanted to do for quite a while.</p><p>The core idea is to re­place the cur­rent wrap­ping based ap­proach with some­thing more light­weight but na­tive to the Scala-​world.</p><p>And that’s where <a href=\"https://docs.scala-lang.org/overviews/core/value-classes.html\">value classes</a> come in.</p><p>Value classes allow the ex­ten­sion of ex­ist­ing classes with ad­di­tional meth­ods. They make it easy to con­trol <strong>when</strong> meth­ods be­come vis­i­ble and do that with a min­i­mum of over­head. To be pre­cise: A wrap­ping class is nor­mally ever only in­stan­ti­ated <strong>once</strong>.</p><p>A good ex­am­ple is the ad­di­tion of meth­ods for wrap­ping the Vert.x ap­proach of Promises with Scala-​Futures. Each method re­turn­ing a Vert.x-​Promise needs to re­ceive an al­ter­na­tive ver­sion which re­turns a Scala-​Future.</p><p>In Vert.x 3 I achieved that by adding meth­ods to the wrap­per and giv­ing them a dis­tinct name. A method called <strong>lis­ten</strong> re­turn­ing a Promise would re­ceive a com­pan­ion called <strong>lis­ten­Fu­ture</strong> in the Scala layer.</p><p>Let’s look at how this looks in the new ap­proach:</p><pre><code class=\"hljs language-scala\"><span class=\"hljs-keyword\">package</span> io.vertx.scala\n<span class=\"hljs-keyword\">package</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">core</span></span>{\n   <span class=\"hljs-keyword\">implicit</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpServerScala</span>(<span class=\"hljs-params\">val asJava: io.vertx.core.http.<span class=\"hljs-type\">HttpServer</span></span>) <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AnyVal</span> </span>{\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">listenFuture</span></span>(port: java.lang.<span class=\"hljs-type\">Integer</span>): scala.concurrent.<span class=\"hljs-type\">Future</span>[io.vertx.core.http.<span class=\"hljs-type\">HttpServer</span>] = {..}\n      ..\n}\n</code></pre><p>The code above does the fol­low­ing things:</p><ul><li>It cre­ates a pack­age ob­ject for <strong>io.vertx.scala.core</strong></li><li>it adds an im­plict class <strong>HttpServer­Scala</strong> to wrpa <strong>HttpServer</strong></li><li>it adds a <strong>lis­ten­Fu­ture</strong> method</li></ul><p>Using this method in code looks like this:</p><pre><code class=\"hljs language-scala\"><span class=\"hljs-keyword\">package</span> io.vertx.scala.demo\n\n<span class=\"hljs-keyword\">import</span> io.vertx.lang.scala.<span class=\"hljs-type\">VertxExecutionContext</span>\n<span class=\"hljs-keyword\">import</span> io.vertx.scala.core._\n\n<span class=\"hljs-keyword\">import</span> scala.util.{<span class=\"hljs-type\">Failure</span>, <span class=\"hljs-type\">Success</span>}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">Main</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">main</span></span>(args: <span class=\"hljs-type\">Array</span>[<span class=\"hljs-type\">String</span>]): <span class=\"hljs-type\">Unit</span> = {\n    <span class=\"hljs-keyword\">val</span> vertx = <span class=\"hljs-type\">Vertx</span>.vertx()\n    <span class=\"hljs-keyword\">implicit</span> <span class=\"hljs-keyword\">val</span> ec = <span class=\"hljs-type\">VertxExecutionContext</span>(vertx.getOrCreateContext())\n    vertx\n      .createHttpServer()\n      .requestHandler(r =&gt; {\n        r.response().end(<span class=\"hljs-string\">&quot;bye&quot;</span>)\n      })\n      .listenFuture(<span class=\"hljs-number\">6667</span>)\n      .onComplete {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-type\">Success</span>(_) =&gt; println(<span class=\"hljs-string\">&quot;Started&quot;</span>)\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-type\">Failure</span>(exception) =&gt; println(<span class=\"hljs-string\">&quot;Failure&quot;</span>)\n      }\n  }\n}\n</code></pre><p>Im­port­ing the pack­age ob­ject using <strong>im­port io.vertx.scala.core._</strong> brings the ex­ten­sion method into scope and makes them avail­able on all in­stances of <strong>HttpServer</strong>. In the ex­am­ple above <strong>cre­ate­HttpServer()</strong> re­turn such an in­stance and we can now use the id­iomatic Scala way of han­dling a Fu­ture.</p><h3 id=\"even-more\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#even-more\"></a>Even more</h3><p>Ex­tend­ing classes with Future-​methods is only one of the new things to come. On top of that the sup­port for DataOb­jects will be con­sid­er­ably im­proved, both through ex­tend­ing them and by pro­vid­ing type aliases.</p><p>I also switched from doing all con­ver­sions for col­lec­tions au­to­mat­i­cally to hand­ing the con­trol back to the user. Some­thing which gets even more im­por­tant for Scala 2.13 and the new col­lec­tion API.</p><h3 id=\"the-downside\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-downside\"></a>The downside</h3><p>The clear down­side of this ap­proach is that the Java-​methods will stay vis­i­ble since the java-​classes won’t be wrapped but ex­tended. This might lead to some con­fu­sion but I am pretty sure the ben­e­fits out­weight this down­side.</p><p>The big­ger change will be the re­moval of au­to­matic von­ver­sion be­tween Scala types (Long/Int/String and  Col­lec­tions) and their Java coun­ter­parts. I spent con­sid­er­able time try­ing to tune that part in the cur­rent ver­sion bbut al­ways ended up hit­ting some edge­case. For now I’ve de­cided to have the user pick the right time to con­vert.</p><p>I might still add this fea­ture in a later ver­sion if user feed­back points into that di­rec­tion.</p><h2 id=\"when-will-i-get-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#when-will-i-get-it\"></a>When will I get it?</h2><p>First for the good news: There is al­ready a <a href=\"https://github.com/vert-x3/vertx-lang-scala/tree/4.0\">branch</a> with a full im­ple­men­ta­tion.</p><p>The bad news: It will break until Vert.x 4.0 is fi­nally re­leased.</p><p>Vert.x 4 is in ac­tive de­vel­op­ment with most APIs al­ready fi­nal­ized but break­ing changes still hap­pen. So use at your own risk!</p><h2 id=\"what-about-scala-213\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#what-about-scala-213\"></a>What about Scala 2.13?</h2><p>Scala 2.13 has been re­leased re­cently which prompted ques­tions from the com­mu­nity about when it will be sup­ported by Vert.x.</p><p>I haven’t done a good job pro­vid­ing the re­sults of our in­ter­nal dis­cus­sions on that topic to the com­mu­nity. So here we go:</p><ul><li>Vert.x 3 will stay on 2.12 for the fol­low­ing rea­sons:<ul><li>Both are still ac­tively sup­ported</li><li>Scala ecosys­tems takes some time to do the switch to 2.13</li><li>We sim­ply don’t have the ca­pac­ity to sup­port both ver­sions <strong>AND</strong> the up­com­ing new ver­sion</li></ul></li><li>Vert.x 4 will re­ceive 2.13 sup­port<ul><li>Scala ecosys­tem will have moved closer to 2.13 adop­tion when Vert.x 4 comes out</li></ul></li></ul><h2 id=\"for-the-adventure-seaker\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#for-the-adventure-seaker\"></a>For the adventure seaker</h2><p>I ac­tu­ally did a port of vertx-​lang-scala 3.8 to Scala 2.13 and you can grab the work in this <a href=\"https://github.com/vert-x3/vertx-lang-scala/tree/3.8_2.13\">branch</a>.</p><p>Don’t ex­pect <strong>ANY</strong> sup­port for this branch. This was only an ex­per­i­ment to see how much I had to change for ini­tial 2.13 sup­port.</p><h2 id=\"summary\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#summary\"></a>Summary</h2><p>Vert.x 4 will be an evo­lu­tion­ary step for vertx-​lang-scala. Value classes promise to re­duce both com­plex­ity and al­lo­ca­tion rate, two things which have been bug­ging me quite a bit with the cur­rent ap­proach.</p><p>I am eager to hear from you all what you think about this new di­rec­tion.</p>","scope":{}},"tfIdfTerms":[{"term":"scala","tf":25},{"term":"support","tf":11},{"term":"new","tf":11},{"term":"will","tf":11},{"term":"method","tf":11},{"term":"13","tf":9},{"term":"class","tf":9},{"term":"approach","tf":8},{"term":"version","tf":7},{"term":"idea","tf":6},{"term":"wrap","tf":6},{"term":"base","tf":5},{"term":"promis","tf":5},{"term":"api","tf":5},{"term":"us","tf":5},{"term":"java","tf":5},{"term":"valu","tf":4},{"term":"receiv","tf":4},{"term":"lang","tf":4},{"term":"look","tf":4},{"term":"current","tf":4},{"term":"creat","tf":4},{"term":"collect","tf":4},{"term":"time","tf":4},{"term":"futur","tf":4}]},{"filename":"blog/2019-05-29-vs-code-vert-x-starter-extension.mdx","date":"2019-05-29","slug":"vs-code-vert-x-starter-extension","meta":{"title":"VS Code Vert.x Starter Extension","category":"news","authors":[{"name":"Daniel Petisme","github_id":"danielpetisme"}],"summary":"Today, we are really excited to announce the Visual Studio Code Vert.x Starter extension. It allows you to create a Vert.x project, customize the creation, and search for dependencies."},"readingTime":{"text":"1 min read","minutes":0.84,"time":50400,"words":168},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi Vert.x com\\xADmu\\xADnity! Today, we are re\\xADally ex\\xADcited to an\\xADnounce the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=danielpetisme.vscode-vertx-starter\"\n  }), \"Vi\\xADsual Stu\\xADdio Code Vert.x Starter\"), \" ex\\xADten\\xADsion.\"), mdx(\"p\", null, \"The ex\\xADten\\xADsion is a com\\xADmu\\xADnity con\\xADtri\\xADbu\\xADtion made by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/danielpetisme\"\n  }), \"Daniel Petisme (@danielpetisme)\"), \".\"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/R3ZbQ_5Jf4M\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#usage\"\n  })), \"Usage\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://code.visualstudio.com/\"\n  }), \"Vi\\xADsual Stu\\xADdio Code\"), \" is a pop\\xADu\\xADlar code ed\\xADi\\xADtor with a lot of ad\\xADdi\\xADtional ex\\xADten\\xADsions.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=danielpetisme.vscode-vertx-starter\"\n  }), \"Vi\\xADsual Stu\\xADdio Code Vert.x Starter\"), \" ex\\xADten\\xADsion al\\xADlows you to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cre\\xADate a Vert.x project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cus\\xADtomize the cre\\xADation (Vert.x ver\\xADsion, lan\\xADguage, build tool, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"groupId\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"artifactId\"), \", pack\\xADage name, JDK ver\\xADsion)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search for de\\xADpen\\xADden\\xADcies\")), mdx(\"p\", null, \"The ex\\xADten\\xADsion can be con\\xADfig\\xADured to match your con\\xADtext (e.g. defin\\xADing your de\\xADfault com\\xADpany \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"groupId\"), \").\"), mdx(\"h2\", {\n    \"id\": \"how-it-works\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#how-it-works\"\n  })), \"How it works\"), mdx(\"p\", null, \"Be\\xADhind the scene, the ex\\xADten\\xADsion re\\xADlies on the Vert.x ap\\xADpli\\xADca\\xADtion gen\\xADer\\xADa\\xADtor API and demon\\xADstrate how easy it is to de\\xADvelop your own IDE plug\\xADin or cus\\xADtom tool\\xADing to gen\\xADer\\xADate Vert.x projects.\\nFor fur\\xADther de\\xADtails about the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"start.vertx.io\"), \" API, please refer to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-starter\"\n  }), \"Vert.x Starter project on GitHub\"), \".\"), mdx(\"h2\", {\n    \"id\": \"questions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#questions\"\n  })), \"Questions?\"), mdx(\"p\", null, \"Feel free to ask ques\\xADtions or pro\\xADpose new fea\\xADtures on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/danielpetisme/vscode-vertx-starter\"\n  }), \"VS\\xADCode Vert.x Starter GitHub repos\\xADi\\xADtory\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Hi Vert.x com­mu­nity! Today, we are re­ally ex­cited to an­nounce the <a href=\"https://marketplace.visualstudio.com/items?itemName=danielpetisme.vscode-vertx-starter\">Vi­sual Stu­dio Code Vert.x Starter</a> ex­ten­sion.</p><p>The ex­ten­sion is a com­mu­nity con­tri­bu­tion made by <a href=\"https://twitter.com/danielpetisme\">Daniel Petisme (@danielpetisme)</a>.</p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/R3ZbQ_5Jf4M\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><h2 id=\"usage\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#usage\"></a>Usage</h2><p><a href=\"https://code.visualstudio.com/\">Vi­sual Stu­dio Code</a> is a pop­u­lar code ed­i­tor with a lot of ad­di­tional ex­ten­sions.</p><p><a href=\"https://marketplace.visualstudio.com/items?itemName=danielpetisme.vscode-vertx-starter\">Vi­sual Stu­dio Code Vert.x Starter</a> ex­ten­sion al­lows you to:</p><ul><li>Cre­ate a Vert.x project</li><li>Cus­tomize the cre­ation (Vert.x ver­sion, lan­guage, build tool, <code>groupId</code>, <code>artifactId</code>, pack­age name, JDK ver­sion)</li><li>Search for de­pen­den­cies</li></ul><p>The ex­ten­sion can be con­fig­ured to match your con­text (e.g. defin­ing your de­fault com­pany <code>groupId</code>).</p><h2 id=\"how-it-works\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#how-it-works\"></a>How it works</h2><p>Be­hind the scene, the ex­ten­sion re­lies on the Vert.x ap­pli­ca­tion gen­er­a­tor API and demon­strate how easy it is to de­velop your own IDE plug­in or cus­tom tool­ing to gen­er­ate Vert.x projects.\nFor fur­ther de­tails about the <a href=\"https://start.vertx.io\">start.vertx.io</a> API, please refer to the <a href=\"https://github.com/vert-x3/vertx-starter\">Vert.x Starter project on GitHub</a>.</p><h2 id=\"questions\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#questions\"></a>Questions?</h2><p>Feel free to ask ques­tions or pro­pose new fea­tures on the <a href=\"https://github.com/danielpetisme/vscode-vertx-starter\">VS­Code Vert.x Starter GitHub repos­i­tory</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"extens","tf":6},{"term":"code","tf":4},{"term":"starter","tf":4},{"term":"visual","tf":3},{"term":"studio","tf":3},{"term":"project","tf":3},{"term":"commun","tf":2},{"term":"custom","tf":2},{"term":"version","tf":2},{"term":"tool","tf":2},{"term":"gener","tf":2},{"term":"api","tf":2},{"term":"github","tf":2},{"term":"question","tf":2},{"term":"hi","tf":1},{"term":"todai","tf":1},{"term":"realli","tf":1},{"term":"excit","tf":1},{"term":"announc","tf":1},{"term":"contribut","tf":1},{"term":"made","tf":1},{"term":"daniel","tf":1},{"term":"petism","tf":1},{"term":"danielpetism","tf":1},{"term":"usag","tf":1}]},{"filename":"blog/2018-04-13-new-community-channels.mdx","date":"2018-04-13","slug":"new-community-channels","meta":{"title":"New community channels","category":"news","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"In order to better support the community, we (the core team and module maintainers) now also provide help on Stack Overflow and Gitter."},"readingTime":{"text":"2 min read","minutes":1.325,"time":79500,"words":265},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you vis\\xADited the Eclipse Vert.x web\\xADsite re\\xADcently, you might have no\\xADticed a cou\\xADple of nov\\xADel\\xADties on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"com\\xADmu\\xADnity\"), \" page:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Stack Over\\xADflow \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/tagged/vert.x?sort=newest&pageSize=15\"\n  }), \"vert.x\"), \" tag for user ques\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"vertx-\\u200Busers\"), \" Git\\xADter chan\\xADnel to chat with other users and mod\\xADule main\\xADtain\\xADers\")), mdx(\"p\", null, \"Won\\xADder\\xADing why?\"), mdx(\"h2\", {\n    \"id\": \"answering-questions-wherever-they-are-asked\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#answering-questions-wherever-they-are-asked\"\n  })), \"Answering questions wherever they are asked\"), mdx(\"p\", null, \"In order to help us sup\\xADport the com\\xADmu\\xADnity, we (the core team and mod\\xADule main\\xADtain\\xADers) have tried so far to stick to a few rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://groups.google.com/forum/?fromgroups#!forum/vertx\"\n  }), \"user group\"), \" for ques\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IRC to chat\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bugs and is\\xADsues re\\xADported on GitHub\")), mdx(\"p\", null, \"These rules were doc\\xADu\\xADmented on the web\\xADsite, but ad\\xADmit\\xADtedly they are hard (if pos\\xADsi\\xADble at all) to en\\xADforce.\\nAnd let\\u2019s face it: many new users like to ask ques\\xADtions on Stack\\xADover\\xADflow and GitHub.\"), mdx(\"p\", null, \"So we now an\\xADswer ques\\xADtions wher\\xADever they are asked.\\nWe keep the user group as the main chan\\xADnel though: some con\\xADver\\xADsa\\xADtions just don\\u2019t fit the Stack Over\\xADflow model, and not every\\xADone in the com\\xADmu\\xADnity watches the GitHub repos\\xADi\\xADto\\xADries.\"), mdx(\"h2\", {\n    \"id\": \"moving-from-irc-to-gitter\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#moving-from-irc-to-gitter\"\n  })), \"Moving from IRC to Gitter\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#vertx\"), \" chan\\xADnel is recorded on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echelog\"), \" but it\\u2019s not con\\xADve\\xADnient to search or browse.\\nAnd shar\\xADing code, logs, is\\xADsues is sim\\xADply awful com\\xADpared to mod\\xADern al\\xADter\\xADna\\xADtives like Git\\xADter or Slack.\"), mdx(\"p\", null, \"Git\\xADter got our pref\\xADer\\xADence be\\xADcause:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s free, with\\xADout lim\\xADits\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s not re\\xADsource hun\\xADgry (on a browser at least)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s well in\\xADte\\xADgrated with GitHub\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it sup\\xADports ad\\xADvanced for\\xADmat\\xADting\")), mdx(\"p\", null, \"Since the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"chan\\xADnel\"), \" was opened, new peo\\xADple are join\\xADing every day.\\nAt the time of writ\\xADing, there are 74 peo\\xADple reg\\xADis\\xADtered al\\xADready.\\nWe hope you will be the next one!\"), mdx(\"p\", null, \"See you soon on\\xADline.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>If you vis­ited the Eclipse Vert.x web­site re­cently, you might have no­ticed a cou­ple of nov­el­ties on the <a href=\"https://vertx.io/community\">com­mu­nity</a> page:</p><ul><li>the Stack Over­flow <a href=\"https://stackoverflow.com/questions/tagged/vert.x?sort=newest&amp;pageSize=15\">vert.x</a> tag for user ques­tions</li><li>the <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">vertx-​users</a> Git­ter chan­nel to chat with other users and mod­ule main­tain­ers</li></ul><p>Won­der­ing why?</p><h2 id=\"answering-questions-wherever-they-are-asked\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#answering-questions-wherever-they-are-asked\"></a>Answering questions wherever they are asked</h2><p>In order to help us sup­port the com­mu­nity, we (the core team and mod­ule main­tain­ers) have tried so far to stick to a few rules:</p><ul><li><a href=\"https://groups.google.com/forum/?fromgroups#!forum/vertx\">user group</a> for ques­tions</li><li>IRC to chat</li><li>bugs and is­sues re­ported on GitHub</li></ul><p>These rules were doc­u­mented on the web­site, but ad­mit­tedly they are hard (if pos­si­ble at all) to en­force.\nAnd let’s face it: many new users like to ask ques­tions on Stack­over­flow and GitHub.</p><p>So we now an­swer ques­tions wher­ever they are asked.\nWe keep the user group as the main chan­nel though: some con­ver­sa­tions just don’t fit the Stack Over­flow model, and not every­one in the com­mu­nity watches the GitHub repos­i­to­ries.</p><h2 id=\"moving-from-irc-to-gitter\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#moving-from-irc-to-gitter\"></a>Moving from IRC to Gitter</h2><p>The <code>#vertx</code> chan­nel is recorded on <code>echelog</code> but it’s not con­ve­nient to search or browse.\nAnd shar­ing code, logs, is­sues is sim­ply awful com­pared to mod­ern al­ter­na­tives like Git­ter or Slack.</p><p>Git­ter got our pref­er­ence be­cause:</p><ul><li>it’s free, with­out lim­its</li><li>it’s not re­source hun­gry (on a browser at least)</li><li>it’s well in­te­grated with GitHub</li><li>it sup­ports ad­vanced for­mat­ting</li></ul><p>Since the <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">chan­nel</a> was opened, new peo­ple are join­ing every day.\nAt the time of writ­ing, there are 74 peo­ple reg­is­tered al­ready.\nWe hope you will be the next one!</p><p>See you soon on­line.</p>","scope":{}},"tfIdfTerms":[{"term":"user","tf":6},{"term":"question","tf":5},{"term":"gitter","tf":4},{"term":"channel","tf":4},{"term":"github","tf":4},{"term":"commun","tf":3},{"term":"ask","tf":3},{"term":"not","tf":3},{"term":"websit","tf":2},{"term":"stack","tf":2},{"term":"overflow","tf":2},{"term":"chat","tf":2},{"term":"modul","tf":2},{"term":"maintain","tf":2},{"term":"answer","tf":2},{"term":"wherev","tf":2},{"term":"support","tf":2},{"term":"rule","tf":2},{"term":"group","tf":2},{"term":"irc","tf":2},{"term":"issu","tf":2},{"term":"new","tf":2},{"term":"peopl","tf":2},{"term":"74","tf":1},{"term":"visit","tf":1}]},{"filename":"blog/2018-03-13-google-summer-of-code-2018.mdx","date":"2018-03-13","slug":"google-summer-of-code-2018","meta":{"title":"Google Summer of Code 2018","category":"news","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"It's this time of year again! Google Summer of Code 2018 submission period has just started!"},"readingTime":{"text":"1 min read","minutes":0.765,"time":45900,"words":153},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It\\u2019s this time of year again!\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://summerofcode.withgoogle.com/\"\n  }), \"Google Sum\\xADmer of Code\"), \" 2018 sub\\xADmis\\xADsion pe\\xADriod has just started!\"), mdx(\"h2\", {\n    \"id\": \"submit-through-the-eclipse-organization\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#submit-through-the-eclipse-organization\"\n  })), \"Submit through the Eclipse organization\"), mdx(\"p\", null, \"This year, the Eclipse Vert.x project par\\xADtic\\xADi\\xADpates through the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://summerofcode.withgoogle.com/organizations/6364590460370944/\"\n  }), \"Eclipse or\\xADga\\xADni\\xADza\\xADtion\"), \".\\nMake sure to re\\xADview our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wiki.eclipse.org/Google_Summer_of_Code_2018_Ideas#Eclipse_Vert.x\"\n  }), \"GSoC 2018 ideas\"), \" and to sub\\xADmit be\\xADfore March, 27!\"), mdx(\"h2\", {\n    \"id\": \"assessment-application\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#assessment-application\"\n  })), \"Assessment application\"), mdx(\"p\", null, \"As we did be\\xADfore, we ask can\\xADdi\\xADdates to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/tsegismont/vertx-gsoc-2018-qotd\"\n  }), \"im\\xADple\\xADment a sim\\xADple Vert.x ap\\xADpli\\xADca\\xADtion\"), \".\\nThis helps us make sure can\\xADdi\\xADdates have a basic un\\xADder\\xADstand\\xADing of asyn\\xADchro\\xADnous pro\\xADgram\\xADming and the Vert.x toolkit.\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"But sub\\xADmit your pro\\xADposal even if not done with the as\\xADsess\\xADment ap\\xADpli\\xADca\\xADtion!\"), \"\\nGoogle will not ex\\xADtend the sub\\xADmis\\xADsion pe\\xADriod but we can con\\xADtinue re\\xADview\\xADing as\\xADsess\\xADments while eval\\xADu\\xADat\\xADing the sub\\xADmit\\xADted pro\\xADpos\\xADals.\"), mdx(\"h2\", {\n    \"id\": \"questions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#questions\"\n  })), \"Questions?\"), mdx(\"p\", null, \"If you have ques\\xADtions, feel free to ask pos\\xADsi\\xADble men\\xADtors via email or on our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/community\"\n  }), \"com\\xADmu\\xADnity chan\\xADnels\"), \".\"), mdx(\"p\", null, \"All the de\\xADtails for this year (and ideas from past years) can be found on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/gsoc\"\n  }), \"Vert.x GSoC page\"), \".\"), mdx(\"p\", null, \"Look\\xADing for\\xADward to your pro\\xADpos\\xADals!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>It’s this time of year again!\n<a href=\"https://summerofcode.withgoogle.com/\">Google Sum­mer of Code</a> 2018 sub­mis­sion pe­riod has just started!</p><h2 id=\"submit-through-the-eclipse-organization\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#submit-through-the-eclipse-organization\"></a>Submit through the Eclipse organization</h2><p>This year, the Eclipse Vert.x project par­tic­i­pates through the <a href=\"https://summerofcode.withgoogle.com/organizations/6364590460370944/\">Eclipse or­ga­ni­za­tion</a>.\nMake sure to re­view our <a href=\"https://wiki.eclipse.org/Google_Summer_of_Code_2018_Ideas#Eclipse_Vert.x\">GSoC 2018 ideas</a> and to sub­mit be­fore March, 27!</p><h2 id=\"assessment-application\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#assessment-application\"></a>Assessment application</h2><p>As we did be­fore, we ask can­di­dates to <a href=\"https://github.com/tsegismont/vertx-gsoc-2018-qotd\">im­ple­ment a sim­ple Vert.x ap­pli­ca­tion</a>.\nThis helps us make sure can­di­dates have a basic un­der­stand­ing of asyn­chro­nous pro­gram­ming and the Vert.x toolkit.\n<strong>But sub­mit your pro­posal even if not done with the as­sess­ment ap­pli­ca­tion!</strong>\nGoogle will not ex­tend the sub­mis­sion pe­riod but we can con­tinue re­view­ing as­sess­ments while eval­u­at­ing the sub­mit­ted pro­pos­als.</p><h2 id=\"questions\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#questions\"></a>Questions?</h2><p>If you have ques­tions, feel free to ask pos­si­ble men­tors via email or on our <a href=\"/community\">com­mu­nity chan­nels</a>.</p><p>All the de­tails for this year (and ideas from past years) can be found on the <a href=\"/gsoc\">Vert.x GSoC page</a>.</p><p>Look­ing for­ward to your pro­pos­als!</p>","scope":{}},"tfIdfTerms":[{"term":"year","tf":4},{"term":"submit","tf":4},{"term":"assess","tf":3},{"term":"applic","tf":3},{"term":"propos","tf":3},{"term":"2018","tf":2},{"term":"googl","tf":2},{"term":"submiss","tf":2},{"term":"period","tf":2},{"term":"organ","tf":2},{"term":"sure","tf":2},{"term":"review","tf":2},{"term":"gsoc","tf":2},{"term":"idea","tf":2},{"term":"ask","tf":2},{"term":"candid","tf":2},{"term":"not","tf":2},{"term":"question","tf":2},{"term":"27","tf":1},{"term":"time","tf":1},{"term":"summer","tf":1},{"term":"code","tf":1},{"term":"just","tf":1},{"term":"start","tf":1},{"term":"project","tf":1}]},{"filename":"blog/2017-09-28-an-eclipse-vert-x-gradle-plugin.mdx","date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin","meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"readingTime":{"text":"4 min read","minutes":3.305,"time":198300,"words":661},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Eclipse Vert.x is a ver\\xADsa\\xADtile toolkit, and as such it does not have any strong opin\\xADion on the tools that you should be using.\"), mdx(\"p\", null, \"Gra\\xADdle is a pop\\xADu\\xADlar build tool in the JVM ecosys\\xADtem, and it is quite easy to use for build\\xADing Vert.x project as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\"\n  }), \"show in one of the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-examples\"), \" sam\\xADples\"), \" where a so-\\u200Bcalled \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jar\"), \" is being pro\\xADduced.\"), mdx(\"p\", null, \"The new \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"Vert.x Gra\\xADdle plugin\"), \" of\\xADfers an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"opin\\xADion\\xADated\"), \" plug\\xADin for build\\xADing Vert.x ap\\xADpli\\xADca\\xADtions with Gra\\xADdle.\"), mdx(\"p\", null, \"It au\\xADto\\xADmat\\xADi\\xADcally ap\\xADplies the fol\\xADlow\\xADing plu\\xADg\\xADins:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java\"), \" (and sets the source com\\xADpat\\xADi\\xADbil\\xADity to Java 8),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shadow\"), \" to gen\\xADer\\xADate fat Jars with all de\\xADpen\\xADden\\xADcies bun\\xADdled,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nebula-dependency-recommender-plugin\"), \" so that you can omit ver\\xADsions from mod\\xADules from the the Vert.x stack.\")), mdx(\"p\", null, \"The plug\\xADin au\\xADto\\xADmat\\xADi\\xADcally adds \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx:vertx-core\"), \" as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compile\"), \" de\\xADpen\\xADdency, so you don\\u2019t need to do it.\"), mdx(\"p\", null, \"The plug\\xADin pro\\xADvides a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task that can take ad\\xADvan\\xADtage of the Vert.x auto-\\u200Breloading ca\\xADpa\\xADbil\\xADi\\xADties, so you can just run it then have your code being au\\xADto\\xADmat\\xADi\\xADcally com\\xADpiled and re\\xADloaded as you make changes.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#getting-started\"\n  })), \"Getting started\"), mdx(\"p\", null, \"A min\\xADi\\xADmal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" looks like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'sample.App'\"), \"\\n}\\n\")), mdx(\"p\", null, \"Pro\\xADvided \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample.App\"), \" is a Vert.x ver\\xADti\\xADcle, then:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle shadowJar\"), \" builds an ex\\xADe\\xADcutable Jar with all de\\xADpen\\xADden\\xADcies: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java -jar build/libs/simple-project-fat.jar\"), \", and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle vertxRun\"), \" starts the ap\\xADpli\\xADca\\xADtion and au\\xADto\\xADmat\\xADi\\xADcally re\\xADcom\\xADpiles (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle classes\"), \") and re\\xADloads the code when any file under \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/\"), \" is being added, mod\\xADi\\xADfied or deleted.\")), mdx(\"h2\", {\n    \"id\": \"using-with-kotlin-or-groovy-or\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-kotlin-or-groovy-or\"\n  })), \"Using with Kotlin (or Groovy, or\\u2026)\"), mdx(\"p\", null, \"The plug\\xADin in\\xADte\\xADgrates well with plu\\xADg\\xADins that add con\\xADfig\\xADu\\xADra\\xADtions and tasks trig\\xADgered by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" task.\"), mdx(\"p\", null, \"Here is how to use the plug\\xADin with Kotlin (re\\xADplace the ver\\xADsion num\\xADbers with the lat\\xADest ones\\u2026):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'x.y.z'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin.jvm'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'a.b.c'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-lang-kotlin'\"), \"\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin:kotlin-stdlib-jre8'\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n}\\n\\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\\n  kotlinOptions {\\n    jvmTarget = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1.8\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"using-with-webpack-or-any-other-custom-task\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-webpack-or-any-other-custom-task\"\n  })), \"Using with WebPack (or any other custom task)\"), mdx(\"p\", null, \"Web\\xADPack is pop\\xADu\\xADlar to bun\\xADdle web as\\xADsets, and there is even \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://guides.gradle.org/running-webpack-with-gradle/\"\n  }), \"a guide for its in\\xADte\\xADgra\\xADtion with Gra\\xADdle\"), \".\"), mdx(\"p\", null, \"Mix\\xADing the Vert.x Gra\\xADdle plug\\xADin with Web\\xADPack is very sim\\xADple, es\\xADpe\\xADcially in com\\xADbi\\xADna\\xADtion with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"com.moowork.node\"), \" plug\\xADin that in\\xADte\\xADgrates Node into Gra\\xADdle.\"), mdx(\"p\", null, \"Sup\\xADpose we want to mix Vert.x code and JavaScript with Gra\\xADdle and Web\\xADPack.\\nWe as\\xADsume a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack-sample\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"version\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0.0.1\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"A sample with Vert.x, Gradle and Webpack\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"main\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/webapp/index.js\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scripts\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"test\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"author\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"license\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ISC\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"devDependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^2.7.0\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"axios\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^0.16.2\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"module\"), \".exports = {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"entry\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./src/main/webapp/index.js'\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"output\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"filename\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./build/resources/main/webroot/bundle.js'\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" file is the fol\\xADlow\\xADing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'com.moowork.node'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'1.2.0'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.vertx:vertx-web\\\"\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n  watch = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/**/*\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"build.gradle\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"yarn.lock\\\"\"), \"]\\n  onRedeploy = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"classes\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \"]\\n}\\n\\ntask webpack(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" Exec) {\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/yarn.lock\\\"\"), \")\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/webpack.config.js\\\"\"), \")\\n  inputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/src/main/webapp\\\"\"), \")\\n  outputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$buildDir/resources/main/webroot\\\"\"), \")\\n  commandLine \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/node_modules/.bin/webpack\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"This cus\\xADtom build ex\\xADposes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" task that in\\xADvokes Web\\xADPack, with proper file track\\xADing so that Gra\\xADdle knows when the task is up-\\u200Bto-date or not.\"), mdx(\"p\", null, \"The Node plug\\xADin adds many tasks, and in\\xADte\\xADgrates fine with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn\"), \", so fetch\\xADing all NPM de\\xADpen\\xADden\\xADcies is done by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew yarn\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task now re\\xADde\\xADploys on mod\\xADi\\xADfi\\xADca\\xADtions to files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/\"), \" (and sub-\\u200Bfolders), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn.lock\"), \", call\\xADing both the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" tasks:\"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#summary\"\n  })), \"Summary\"), mdx(\"p\", null, \"The Vert.x Gra\\xADdle plug\\xADin pro\\xADvides lots of de\\xADfaults to con\\xADfig\\xADure a Gra\\xADdle project for Vert.x ap\\xADpli\\xADca\\xADtions, pro\\xADduc\\xADing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jars\"), \" and of\\xADfer\\xADing a run\\xADning task with au\\xADto\\xADmatic re\\xADde\\xADploy\\xADment.\\nThe plug\\xADin also in\\xADte\\xADgrates well with other plu\\xADg\\xADins and ex\\xADter\\xADnal tools for which a Gra\\xADdle task is avail\\xADable.\"), mdx(\"p\", null, \"The project is still in its early stages and we are look\\xADing for\\xADward to hear\\xADing from you!\"), mdx(\"h3\", {\n    \"id\": \"links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#links\"\n  })), \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jponge/vertx-gradle-plugin\"\n  }), \"The project on GitHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"The plug\\xADin on the Gra\\xADdle plu\\xADg\\xADins por\\xADtal\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Eclipse Vert.x is a ver­sa­tile toolkit, and as such it does not have any strong opin­ion on the tools that you should be using.</p><p>Gra­dle is a pop­u­lar build tool in the JVM ecosys­tem, and it is quite easy to use for build­ing Vert.x project as <a href=\"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\">show in one of the <code>vertx-examples</code> sam­ples</a> where a so-​called <em>fat Jar</em> is being pro­duced.</p><p>The new <a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">Vert.x Gra­dle plugin</a> of­fers an <em>opin­ion­ated</em> plug­in for build­ing Vert.x ap­pli­ca­tions with Gra­dle.</p><p>It au­to­mat­i­cally ap­plies the fol­low­ing plu­g­ins:</p><ul><li><code>java</code> (and sets the source com­pat­i­bil­ity to Java 8),</li><li><code>application</code> + <code>shadow</code> to gen­er­ate fat Jars with all de­pen­den­cies bun­dled,</li><li><code>nebula-dependency-recommender-plugin</code> so that you can omit ver­sions from mod­ules from the the Vert.x stack.</li></ul><p>The plug­in au­to­mat­i­cally adds <code>io.vertx:vertx-core</code> as a <code>compile</code> de­pen­dency, so you don’t need to do it.</p><p>The plug­in pro­vides a <code>vertxRun</code> task that can take ad­van­tage of the Vert.x auto-​reloading ca­pa­bil­i­ties, so you can just run it then have your code being au­to­mat­i­cally com­piled and re­loaded as you make changes.</p><h2 id=\"getting-started\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#getting-started\"></a>Getting started</h2><p>A min­i­mal <code>build.gradle</code> looks like:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&#x27;sample.App&#x27;</span>\n}\n</code></pre><p>Pro­vided <code>sample.App</code> is a Vert.x ver­ti­cle, then:</p><ol><li><code>gradle shadowJar</code> builds an ex­e­cutable Jar with all de­pen­den­cies: <code>java -jar build/libs/simple-project-fat.jar</code>, and</li><li><code>gradle vertxRun</code> starts the ap­pli­ca­tion and au­to­mat­i­cally re­com­piles (<code>gradle classes</code>) and re­loads the code when any file under <code>src/</code> is being added, mod­i­fied or deleted.</li></ol><h2 id=\"using-with-kotlin-or-groovy-or\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-kotlin-or-groovy-or\"></a>Using with Kotlin (or Groovy, or…)</h2><p>The plug­in in­te­grates well with plu­g­ins that add con­fig­u­ra­tions and tasks trig­gered by the <code>classes</code> task.</p><p>Here is how to use the plug­in with Kotlin (re­place the ver­sion num­bers with the lat­est ones…):</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;x.y.z&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin.jvm&#x27;</span> version <span class=\"hljs-string\">&#x27;a.b.c&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-lang-kotlin&#x27;</span>\n  compile <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin:kotlin-stdlib-jre8&#x27;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n}\n\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\n  kotlinOptions {\n    jvmTarget = <span class=\"hljs-string\">&quot;1.8&quot;</span>\n  }\n}\n</code></pre><h2 id=\"using-with-webpack-or-any-other-custom-task\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-webpack-or-any-other-custom-task\"></a>Using with WebPack (or any other custom task)</h2><p>Web­Pack is pop­u­lar to bun­dle web as­sets, and there is even <a href=\"https://guides.gradle.org/running-webpack-with-gradle/\">a guide for its in­te­gra­tion with Gra­dle</a>.</p><p>Mix­ing the Vert.x Gra­dle plug­in with Web­Pack is very sim­ple, es­pe­cially in com­bi­na­tion with the <code>com.moowork.node</code> plug­in that in­te­grates Node into Gra­dle.</p><p>Sup­pose we want to mix Vert.x code and JavaScript with Gra­dle and Web­Pack.\nWe as­sume a <code>package.json</code> as:</p><pre><code class=\"hljs language-javascript\">{\n  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;webpack-sample&quot;</span>,\n  <span class=\"hljs-string\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;0.0.1&quot;</span>,\n  <span class=\"hljs-string\">&quot;description&quot;</span>: <span class=\"hljs-string\">&quot;A sample with Vert.x, Gradle and Webpack&quot;</span>,\n  <span class=\"hljs-string\">&quot;main&quot;</span>: <span class=\"hljs-string\">&quot;src/main/webapp/index.js&quot;</span>,\n  <span class=\"hljs-string\">&quot;scripts&quot;</span>: {\n    <span class=\"hljs-string\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;author&quot;</span>: <span class=\"hljs-string\">&quot;&quot;</span>,\n  <span class=\"hljs-string\">&quot;license&quot;</span>: <span class=\"hljs-string\">&quot;ISC&quot;</span>,\n  <span class=\"hljs-string\">&quot;devDependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;webpack&quot;</span>: <span class=\"hljs-string\">&quot;^2.7.0&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;dependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;axios&quot;</span>: <span class=\"hljs-string\">&quot;^0.16.2&quot;</span>\n  }\n}\n</code></pre><p>and <code>webpack.config.js</code> as:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">entry</span>: <span class=\"hljs-string\">&#x27;./src/main/webapp/index.js&#x27;</span>,\n  <span class=\"hljs-attr\">output</span>: {\n    <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">&#x27;./build/resources/main/webroot/bundle.js&#x27;</span>\n  }\n}\n</code></pre><p>The <code>build.gradle</code> file is the fol­low­ing:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;com.moowork.node&#x27;</span> version <span class=\"hljs-string\">&#x27;1.2.0&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&quot;io.vertx:vertx-web&quot;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n  watch = [<span class=\"hljs-string\">&quot;src/**/*&quot;</span>, <span class=\"hljs-string\">&quot;build.gradle&quot;</span>, <span class=\"hljs-string\">&quot;yarn.lock&quot;</span>]\n  onRedeploy = [<span class=\"hljs-string\">&quot;classes&quot;</span>, <span class=\"hljs-string\">&quot;webpack&quot;</span>]\n}\n\ntask webpack(<span class=\"hljs-attr\">type:</span> Exec) {\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/yarn.lock&quot;</span>)\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/webpack.config.js&quot;</span>)\n  inputs.dir(<span class=\"hljs-string\">&quot;$projectDir/src/main/webapp&quot;</span>)\n  outputs.dir(<span class=\"hljs-string\">&quot;$buildDir/resources/main/webroot&quot;</span>)\n  commandLine <span class=\"hljs-string\">&quot;$projectDir/node_modules/.bin/webpack&quot;</span>\n}\n</code></pre><p>This cus­tom build ex­poses a <code>webpack</code> task that in­vokes Web­Pack, with proper file track­ing so that Gra­dle knows when the task is up-​to-date or not.</p><p>The Node plug­in adds many tasks, and in­te­grates fine with <code>npm</code> or <code>yarn</code>, so fetch­ing all NPM de­pen­den­cies is done by call­ing <code>./gradlew yarn</code>.</p><p>The <code>vertxRun</code> task now re­de­ploys on mod­i­fi­ca­tions to files in <code>src/</code> (and sub-​folders), <code>build.gradle</code> and <code>yarn.lock</code>, call­ing both the <code>classes</code> and <code>webpack</code> tasks:</p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><h2 id=\"summary\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#summary\"></a>Summary</h2><p>The Vert.x Gra­dle plug­in pro­vides lots of de­faults to con­fig­ure a Gra­dle project for Vert.x ap­pli­ca­tions, pro­duc­ing <em>fat Jars</em> and of­fer­ing a run­ning task with au­to­matic re­de­ploy­ment.\nThe plug­in also in­te­grates well with other plu­g­ins and ex­ter­nal tools for which a Gra­dle task is avail­able.</p><p>The project is still in its early stages and we are look­ing for­ward to hear­ing from you!</p><h3 id=\"links\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#links\"></a>Links</h3><ul><li><a href=\"https://github.com/jponge/vertx-gradle-plugin\">The project on GitHub</a></li><li><a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">The plug­in on the Gra­dle plu­g­ins por­tal</a></li></ul>","scope":{}},"tfIdfTerms":[{"term":"plugin","tf":16},{"term":"gradl","tf":12},{"term":"task","tf":11},{"term":"us","tf":5},{"term":"build","tf":5},{"term":"automat","tf":5},{"term":"integr","tf":5},{"term":"webpack","tf":5},{"term":"project","tf":4},{"term":"jar","tf":4},{"term":"depend","tf":4},{"term":"file","tf":4},{"term":"tool","tf":3},{"term":"call","tf":3},{"term":"fat","tf":3},{"term":"applic","tf":3},{"term":"add","tf":3},{"term":"provid","tf":3},{"term":"reload","tf":3},{"term":"code","tf":3},{"term":"not","tf":2},{"term":"opinion","tf":2},{"term":"popular","tf":2},{"term":"on","tf":2},{"term":"produc","tf":2}]},{"filename":"blog/2017-06-09-preview-of-a-guide-for-java-developers.mdx","date":"2017-06-09","slug":"preview-of-a-guide-for-java-developers","meta":{"title":"Preview of a guide for Java developers","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"We are introducing the book “A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers”."},"readingTime":{"text":"3 min read","minutes":2.14,"time":128400,"words":428},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I could not at\\xADtend the last Eclipse Vert.x com\\xADmu\\xADnity face-\\u200Bto-face meet\\xADing last fall, but one item that was dis\\xADcussed is the need for guides aimed at cer\\xADtain types of de\\xADvel\\xADop\\xADers.\\nOne of my mis\\xADsions as part of join\\xADing the team was to work on this and I\\u2019m very happy to share it with you today!\"), mdx(\"h2\", {\n    \"id\": \"a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"\n  })), \"A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers\"), mdx(\"p\", null, \"The guide is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201CA gen\\xADtle guide to asyn\\xADchro\\xADnous pro\\xADgram\\xADming with Eclipse Vert.x for en\\xADter\\xADprise ap\\xADpli\\xADca\\xADtion de\\xADvel\\xADop\\xADers\\u201D\"), \" and it is an in\\xADtro\\xADduc\\xADtion to asyn\\xADchro\\xADnous pro\\xADgram\\xADming with Vert.x, pri\\xADmar\\xADily aimed at de\\xADvel\\xADop\\xADers fa\\xADmil\\xADiar with main\\xADstream non-\\u200Basynchronous web de\\xADvel\\xADop\\xADment frame\\xADworks and li\\xADbraries (e.g., Java EE, Spring).\"), mdx(\"p\", null, \"Quot\\xADing the in\\xADtro\\xADduc\\xADtion:\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"We will start from a wiki web ap\\xADpli\\xADca\\xADtion backed by a re\\xADla\\xADtional data\\xADbase and server-\\u200Bside ren\\xADder\\xADing of pages; then we will evolve the ap\\xADpli\\xADca\\xADtion through sev\\xADeral steps until it be\\xADcomes a mod\\xADern single-\\u200Bpage ap\\xADpli\\xADca\\xADtion with \\u201Creal-\\u200Btime\\u201D web fea\\xADtures. Along the way you will learn to:\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"De\\xADsign a web ap\\xADpli\\xADca\\xADtion with server-\\u200Bside ren\\xADder\\xADing of pages through tem\\xADplates, and using a re\\xADla\\xADtional data\\xADbase for per\\xADsist\\xADing data.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Cleanly iso\\xADlate each tech\\xADni\\xADcal com\\xADpo\\xADnent as a reusable event pro\\xADcess\\xADing unit called a ver\\xADti\\xADcle.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ex\\xADtract Vert.x ser\\xADvices for fa\\xADcil\\xADi\\xADtat\\xADing the de\\xADsign of ver\\xADti\\xADcles that com\\xADmu\\xADni\\xADcate with each other seam\\xADlessly both within the same JVM process or among dis\\xADtrib\\xADuted nodes in a clus\\xADter.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Test\\xADing code with asyn\\xADchro\\xADnous op\\xADer\\xADa\\xADtions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"In\\xADte\\xADgrat\\xADing with third-\\u200Bparty ser\\xADvices ex\\xADpos\\xADing a HTTP/JSON web API.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ex\\xADpos\\xADing a HTTP/JSON web API.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Se\\xADcur\\xADing and con\\xADtrol\\xADling ac\\xADcess using HTTPS, user au\\xADthen\\xADti\\xADca\\xADtion for web browser ses\\xADsions and JWT to\\xADkens for third-\\u200Bparty client ap\\xADpli\\xADca\\xADtions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Refac\\xADtor\\xADing some code to use re\\xADac\\xADtive pro\\xADgram\\xADming with the pop\\xADu\\xADlar Rx\\xADJava li\\xADbrary and its Vert.x in\\xADte\\xADgra\\xADtion.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Client-\\u200Bside pro\\xADgram\\xADming of a single-\\u200Bpage ap\\xADpli\\xADca\\xADtion with An\\xADgu\\xADlarJS.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Real-\\u200Btime web pro\\xADgram\\xADming using the uni\\xADfied Vert.x event bus in\\xADte\\xADgra\\xADtion over SockJS.\"))), mdx(\"p\", null, \"The guide takes a grad\\xADual ap\\xADproach by start\\xADing with a \\u201Cquick and dirty\\u201D so\\xADlu\\xADtion, then refac\\xADtor\\xADing it prop\\xADerly, ex\\xADpos\\xADing the core Vert.x con\\xADcepts, adding fea\\xADtures, and mov\\xADing from call\\xADbacks to Rx\\xADJava.\"), mdx(\"h2\", {\n    \"id\": \"we-need-your-feedback\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#we-need-your-feedback\"\n  })), \"We need your feedback!\"), mdx(\"p\", null, \"The code is avail\\xADable at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-guide-for-java-devs\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bguide-for-java-devs\"), \".\\nYou can re\\xADport feed\\xADback as Github is\\xADsues to that repos\\xADi\\xADtory and even offer pull-\\u200Brequests.\"), mdx(\"p\", null, \"You can check it out from GitHub (the Asci\\xADiDoc is being ren\\xADdered fine from the repos\\xADi\\xADtory in\\xADter\\xADface) or you can check out pre-\\u200Brendered HTML and PDF ver\\xADsions that I am tem\\xADporar\\xADily shar\\xADing and keep\\xADing up-\\u200Bto-date from my Drop\\xADbox: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.dropbox.com/sh/ni9znfkzlkl3q12/AABn-OCi1CZfgbTzOU0jYQpJa?dl=0\"\n  }), \"https://www.drop\\xADbox.com/sh/ni9zn\\xADfk\\xADzlkl3q12/AABn-\\u200BOCi1CZfg\\xADbT\\xADzOU0jYQpJa?dl=0\")), mdx(\"p\", null, \"Many thanks to Thomas Segis\\xADmont and Julien Viet who con\\xADtributed some parts, and also to the peo\\xADple who re\\xADviewed it pri\\xADvately.\"), mdx(\"p\", null, \"As usual, we wel\\xADcome your feed\\xADback!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I could not at­tend the last Eclipse Vert.x com­mu­nity face-​to-face meet­ing last fall, but one item that was dis­cussed is the need for guides aimed at cer­tain types of de­vel­op­ers.\nOne of my mis­sions as part of join­ing the team was to work on this and I’m very happy to share it with you today!</p><h2 id=\"a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"></a>A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers</h2><p>The guide is called <strong>“A gen­tle guide to asyn­chro­nous pro­gram­ming with Eclipse Vert.x for en­ter­prise ap­pli­ca­tion de­vel­op­ers”</strong> and it is an in­tro­duc­tion to asyn­chro­nous pro­gram­ming with Vert.x, pri­mar­ily aimed at de­vel­op­ers fa­mil­iar with main­stream non-​asynchronous web de­vel­op­ment frame­works and li­braries (e.g., Java EE, Spring).</p><p>Quot­ing the in­tro­duc­tion:</p><p><em>We will start from a wiki web ap­pli­ca­tion backed by a re­la­tional data­base and server-​side ren­der­ing of pages; then we will evolve the ap­pli­ca­tion through sev­eral steps until it be­comes a mod­ern single-​page ap­pli­ca­tion with “real-​time” web fea­tures. Along the way you will learn to:</em></p><ol><li><em>De­sign a web ap­pli­ca­tion with server-​side ren­der­ing of pages through tem­plates, and using a re­la­tional data­base for per­sist­ing data.</em></li><li><em>Cleanly iso­late each tech­ni­cal com­po­nent as a reusable event pro­cess­ing unit called a ver­ti­cle.</em></li><li><em>Ex­tract Vert.x ser­vices for fa­cil­i­tat­ing the de­sign of ver­ti­cles that com­mu­ni­cate with each other seam­lessly both within the same JVM process or among dis­trib­uted nodes in a clus­ter.</em></li><li><em>Test­ing code with asyn­chro­nous op­er­a­tions.</em></li><li><em>In­te­grat­ing with third-​party ser­vices ex­pos­ing a HTTP/JSON web API.</em></li><li><em>Ex­pos­ing a HTTP/JSON web API.</em></li><li><em>Se­cur­ing and con­trol­ling ac­cess using HTTPS, user au­then­ti­ca­tion for web browser ses­sions and JWT to­kens for third-​party client ap­pli­ca­tions.</em></li><li><em>Refac­tor­ing some code to use re­ac­tive pro­gram­ming with the pop­u­lar Rx­Java li­brary and its Vert.x in­te­gra­tion.</em></li><li><em>Client-​side pro­gram­ming of a single-​page ap­pli­ca­tion with An­gu­larJS.</em></li><li><em>Real-​time web pro­gram­ming using the uni­fied Vert.x event bus in­te­gra­tion over SockJS.</em></li></ol><p>The guide takes a grad­ual ap­proach by start­ing with a “quick and dirty” so­lu­tion, then refac­tor­ing it prop­erly, ex­pos­ing the core Vert.x con­cepts, adding fea­tures, and mov­ing from call­backs to Rx­Java.</p><h2 id=\"we-need-your-feedback\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#we-need-your-feedback\"></a>We need your feedback!</h2><p>The code is avail­able at <a href=\"https://github.com/vert-x3/vertx-guide-for-java-devs\">https://github.com/vert-​x3/vertx-​guide-for-java-devs</a>.\nYou can re­port feed­back as Github is­sues to that repos­i­tory and even offer pull-​requests.</p><p>You can check it out from GitHub (the Asci­iDoc is being ren­dered fine from the repos­i­tory in­ter­face) or you can check out pre-​rendered HTML and PDF ver­sions that I am tem­porar­ily shar­ing and keep­ing up-​to-date from my Drop­box: <a href=\"https://www.dropbox.com/sh/ni9znfkzlkl3q12/AABn-OCi1CZfgbTzOU0jYQpJa?dl=0\">https://www.drop­box.com/sh/ni9zn­fk­zlkl3q12/AABn-​OCi1CZfg­bT­zOU0jYQpJa?dl=0</a></p><p>Many thanks to Thomas Segis­mont and Julien Viet who con­tributed some parts, and also to the peo­ple who re­viewed it pri­vately.</p><p>As usual, we wel­come your feed­back!</p>","scope":{}},"tfIdfTerms":[{"term":"applic","tf":8},{"term":"web","tf":8},{"term":"guid","tf":6},{"term":"program","tf":6},{"term":"develop","tf":5},{"term":"asynchron","tf":5},{"term":"http","tf":5},{"term":"render","tf":4},{"term":"page","tf":4},{"term":"us","tf":4},{"term":"will","tf":3},{"term":"side","tf":3},{"term":"code","tf":3},{"term":"integr","tf":3},{"term":"expos","tf":3},{"term":"feedback","tf":3},{"term":"github","tf":3},{"term":"last","tf":2},{"term":"commun","tf":2},{"term":"face","tf":2},{"term":"on","tf":2},{"term":"need","tf":2},{"term":"aim","tf":2},{"term":"part","tf":2},{"term":"share","tf":2}]}],"numPages":2},"__N_SSG":true}