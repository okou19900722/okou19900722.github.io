{"pageProps":{"categories":["releases","guides","news"],"page":3,"posts":[{"filename":"blog/2019-09-19-eclipse-vert-x-4-milestone-3-released.mdx","date":"2019-09-19","slug":"eclipse-vert-x-4-milestone-3-released","meta":{"title":"Eclipse Vert.x 4 milestone 3 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The next milestone release of Vert.x 4 aims to provide a reliable distribution of the current development for people who want to try it and provide feedback."},"readingTime":{"text":"5 min read","minutes":4.325,"time":259500,"words":865},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the third 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x .\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple who\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"futurisation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#futurisation\"\n  })), \"Futurisation\"), mdx(\"p\", null, \"Vert.x 4 ex\\xADtends the 3.x call\\xADback asyn\\xADchro\\xADnous model to a fu\\xADture/call\\xADback hy\\xADbrid model.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"NetClient\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Since 3.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host, Handler<AsyncResult<NetSocket>> handler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// New in 4.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"Future<NetSocket> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n}\\n\")), mdx(\"p\", null, \"This third mile\\xADstone makes progress and coverts the fol\\xADlow\\xADing stack mod\\xADules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bservice-discovery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bconfig\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bcircuit-breaker\")), mdx(\"h2\", {\n    \"id\": \"data-object-mapping-for-service-proxies\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#data-object-mapping-for-service-proxies\"\n  })), \"Data object mapping for service proxies\"), mdx(\"p\", null, \"Vert.x 3 ser\\xADvice prox\\xADies is a light\\xADweight layer on top of Vert.x Event-\\u200BBus pro\\xADvid\\xADing typed con\\xADtracts.\"), mdx(\"p\", null, \"One can eas\\xADily cre\\xADate a ser\\xADvice on top of the Event-\\u200BBus.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@VertxGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"DateService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// callback the handler with the current date\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"date\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Handler<AsyncResult<String>> handler)\"), \"\\n}\\n\"))), mdx(\"p\", null, \"Ser\\xADvice prox\\xADies re\\xADquest/re\\xADsponse pay\\xADload are of type JSON.\"), mdx(\"p\", null, \"Of course ser\\xADvice prox\\xADies allow to map beans to JSON using data ob\\xADjects but this comes with two caveats\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"only JSON ob\\xADject can be mapped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the data ob\\xADject must be a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@DataObject\"), \" an\\xADno\\xADtated bean with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toJson()\"), \" method and a JSON ob\\xADject con\\xADstruc\\xADtor\")), mdx(\"p\", null, \"In Vert.x 4 we ex\\xADtend the data ob\\xADject sup\\xADport to any Java class and any JSON type, e.g in this ex\\xADam\\xADple\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@VertxGen\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"DateService\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// encode the date with iso date format\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" String \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"toJson\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(ZonedDateTime value)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" ZonedDateTime.format(value);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// decode the date with iso date format\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" ZonedDateTime \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"fromJson\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String value)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" ZonedDateTime.parse(value);\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// callback the handler with the current date\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"date\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(Handler<AsyncResult<ZonedDateTime>> handler)\"), \"\\n}\\n\"))), mdx(\"p\", null, \"The gen\\xADer\\xADated code will then use these map\\xADpers to en\\xADcode and de\\xADcode JSON val\\xADues.\"), mdx(\"p\", null, \"For reusabil\\xADity map\\xADpers can also be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"java.util.function.Function\"), \" in\\xADstead, e.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" Function<String, ZonedDateTime) fromJson = ZonedDateTime::parse;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Mapper\"), \" Function<ZonedDateTime, String> toJson = ZonedDateTime::toString;\\n\")), mdx(\"h2\", {\n    \"id\": \"mongo-client-gridfs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mongo-client-gridfs\"\n  })), \"Mongo client GridFS\"), mdx(\"p\", null, \"The client can store and re\\xADtrieve files and bi\\xADnary data using Mon\\xADgoDB GridFS.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Future<String> fut = gridFsClient.uploadFile(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"file.name\\\"\"), \");\\n\\nfut.setHandler(res -> {\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (res.succeeded()) {\\n     String id = res.result();\\n     \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//The ID of the stored object in Grid FS\"), \"\\n   } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n     res.cause().printStackTrace();\\n   }\\n });\\n\")), mdx(\"p\", null, \"The client can per\\xADform the usual CRUD op\\xADer\\xADa\\xADtions on files and also pro\\xADvide bucket man\\xADage\\xADment.\"), mdx(\"h2\", {\n    \"id\": \"vertx-web-utilities\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-web-utilities\"\n  })), \"Vert.x Web utilities\"), mdx(\"p\", null, \"While the rout\\xADing con\\xADtext will allow you to ac\\xADcess the un\\xADder\\xADly\\xADing re\\xADquest and re\\xADsponse ob\\xADjects, some\\xADtimes it will be\\nmore pro\\xADduc\\xADtive if a few short\\xADcuts would be present to help with com\\xADmon tasks. A few helpers are present in\\nthe con\\xADtext to fa\\xADcil\\xADi\\xADtate with this task.\"), mdx(\"p\", null, \"Serve an \\u201Cat\\xADtach\\xADment\\u201D, an at\\xADtach\\xADment is a re\\xADsponse that will trig\\xADger the browser to open the re\\xADsponse on the OS ap\\xADpli\\xADca\\xADtion\\ncon\\xADfig\\xADured to han\\xADdle a spe\\xADcific mime type. Imag\\xADine you\\u2019re gen\\xADer\\xADat\\xADing a PDF:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routingContext\\n  .attachment(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"weekly-report.pdf\\\"\"), \")\\n  .end(pdfBuffer);\\n\")), mdx(\"p\", null, \"Per\\xADform a redi\\xADrect to a dif\\xADfer\\xADent page or host. One ex\\xADam\\xADple is to redi\\xADrect to an HTTPS vari\\xADant of the ap\\xADpli\\xADca\\xADtion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routingContext.redirect(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"https://securesite.com/\\\"\"), \");\\n\")), mdx(\"p\", null, \"Send a JSON re\\xADsponse to the client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// no need to specify the content type headers\"), \"\\nrc.json(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonObject().put(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"hello\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"vert.x\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Sim\\xADple con\\xADtent type check:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (routingContext.is(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"application/json\\\"\"), \")) {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n}\\n\")), mdx(\"p\", null, \"Ver\\xADify if a re\\xADquest is \\u201Cfresh\\u201D with re\\xADspect to the cache head\\xADers and the cur\\xADrent val\\xADues of last mod\\xADi\\xADfied/ etag:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (rc.isFresh()) {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// client cache value is fresh perhaps we\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// can stop and return 304?\"), \"\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"other-changes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#other-changes\"\n  })), \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Groovy has been sim\\xADpli\\xADfied in Vert.x 4 to re\\xADmove code gen\\xADer\\xADa\\xADtion that was not re\\xADally needed in prac\\xADtice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The orig\\xADi\\xADnal Redis client dep\\xADre\\xADcated in 3.7 has been re\\xADmoved re\\xADplaced by the new Redis client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON changes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jack\\xADson data\\xADbind is now an op\\xADtional Maven de\\xADpen\\xADdency which means that ap\\xADpli\\xADca\\xADtions need to ex\\xADplic\\xADitly add this de\\xADpen\\xADdency to the class\\xADpath\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spe\\xADcific Jack\\xADson util\\xADity meth\\xADods are moved to spe\\xADcific Jack\\xADson classes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x can use an al\\xADter\\xADna\\xADtive im\\xADple\\xADmen\\xADta\\xADtion than Jack\\xADson for JSON en\\xADcod\\xADing and JSON de\\xADcod\\xADing\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The fol\\xADlow\\xADing com\\xADpo\\xADnents have reached their end of life and have been pruned\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MySQL / Post\\xADgreSQL async client re\\xADplaced by the Vert.x SQL Client (since 3.8)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AMQP bridge re\\xADplaced by the Vert.x AMQP Client (since 3.7)\")))), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone3-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the third mile\\xADstone of Vert.x 4, we aim to re\\xADlease Vert.x 4 by the end of this year and you can of course\\nex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"For this re\\xADlease there are no Docker im\\xADages.,\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0-\\u200Bmilestone3 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the third 4.0 mile­stone re­lease of Eclipse Vert.x .</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple who\nwant to try it and pro­vide feed­back.</p><h2 id=\"futurisation\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#futurisation\"></a>Futurisation</h2><p>Vert.x 4 ex­tends the 3.x call­back asyn­chro­nous model to a fu­ture/call­back hy­brid model.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">NetClient</span> </span>{\n\n  <span class=\"hljs-comment\">// Since 3.0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host, Handler&lt;AsyncResult&lt;NetSocket&gt;&gt; handler)</span></span>;\n\n  <span class=\"hljs-comment\">// New in 4.0</span>\n  <span class=\"hljs-function\">Future&lt;NetSocket&gt; <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n}\n</code></pre><p>This third mile­stone makes progress and coverts the fol­low­ing stack mod­ules:</p><ul><li>vertx-​service-discovery</li><li>vertx-​config</li><li>vertx-​circuit-breaker</li></ul><h2 id=\"data-object-mapping-for-service-proxies\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#data-object-mapping-for-service-proxies\"></a>Data object mapping for service proxies</h2><p>Vert.x 3 ser­vice prox­ies is a light­weight layer on top of Vert.x Event-​Bus pro­vid­ing typed con­tracts.</p><p>One can eas­ily cre­ate a ser­vice on top of the Event-​Bus.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@VertxGen</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DateService</span> </span>{\n\n  <span class=\"hljs-comment\">// callback the handler with the current date</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">date</span><span class=\"hljs-params\">(Handler&lt;AsyncResult&lt;String&gt;&gt; handler)</span>\n}\n</span></code></pre><p>Ser­vice prox­ies re­quest/re­sponse pay­load are of type JSON.</p><p>Of course ser­vice prox­ies allow to map beans to JSON using data ob­jects but this comes with two caveats</p><ul><li>only JSON ob­ject can be mapped</li><li>the data ob­ject must be a <code>@DataObject</code> an­no­tated bean with a <code>toJson()</code> method and a JSON ob­ject con­struc­tor</li></ul><p>In Vert.x 4 we ex­tend the data ob­ject sup­port to any Java class and any JSON type, e.g in this ex­am­ple</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@VertxGen</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DateService</span> </span>{\n\n  <span class=\"hljs-comment\">// encode the date with iso date format</span>\n  <span class=\"hljs-meta\">@Mapper</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">toJson</span><span class=\"hljs-params\">(ZonedDateTime value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> ZonedDateTime.format(value);\n  }\n\n  <span class=\"hljs-comment\">// decode the date with iso date format</span>\n  <span class=\"hljs-meta\">@Mapper</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> ZonedDateTime <span class=\"hljs-title\">fromJson</span><span class=\"hljs-params\">(String value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> ZonedDateTime.parse(value);\n  }\n\n  <span class=\"hljs-comment\">// callback the handler with the current date</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">date</span><span class=\"hljs-params\">(Handler&lt;AsyncResult&lt;ZonedDateTime&gt;&gt; handler)</span>\n}\n</span></code></pre><p>The gen­er­ated code will then use these map­pers to en­code and de­code JSON val­ues.</p><p>For reusabil­ity map­pers can also be <code>java.util.function.Function</code> in­stead, e.g</p><pre><code class=\"hljs language-java\"><span class=\"hljs-meta\">@Mapper</span> Function&lt;String, ZonedDateTime) fromJson = ZonedDateTime::parse;\n<span class=\"hljs-meta\">@Mapper</span> Function&lt;ZonedDateTime, String&gt; toJson = ZonedDateTime::toString;\n</code></pre><h2 id=\"mongo-client-gridfs\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mongo-client-gridfs\"></a>Mongo client GridFS</h2><p>The client can store and re­trieve files and bi­nary data using Mon­goDB GridFS.</p><pre><code class=\"hljs language-java\">Future&lt;String&gt; fut = gridFsClient.uploadFile(<span class=\"hljs-string\">&quot;file.name&quot;</span>);\n\nfut.setHandler(res -&gt; {\n   <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n     String id = res.result();\n     <span class=\"hljs-comment\">//The ID of the stored object in Grid FS</span>\n   } <span class=\"hljs-keyword\">else</span> {\n     res.cause().printStackTrace();\n   }\n });\n</code></pre><p>The client can per­form the usual CRUD op­er­a­tions on files and also pro­vide bucket man­age­ment.</p><h2 id=\"vertx-web-utilities\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-web-utilities\"></a>Vert.x Web utilities</h2><p>While the rout­ing con­text will allow you to ac­cess the un­der­ly­ing re­quest and re­sponse ob­jects, some­times it will be\nmore pro­duc­tive if a few short­cuts would be present to help with com­mon tasks. A few helpers are present in\nthe con­text to fa­cil­i­tate with this task.</p><p>Serve an “at­tach­ment”, an at­tach­ment is a re­sponse that will trig­ger the browser to open the re­sponse on the OS ap­pli­ca­tion\ncon­fig­ured to han­dle a spe­cific mime type. Imag­ine you’re gen­er­at­ing a PDF:</p><pre><code class=\"hljs language-java\">routingContext\n  .attachment(<span class=\"hljs-string\">&quot;weekly-report.pdf&quot;</span>)\n  .end(pdfBuffer);\n</code></pre><p>Per­form a redi­rect to a dif­fer­ent page or host. One ex­am­ple is to redi­rect to an HTTPS vari­ant of the ap­pli­ca­tion:</p><pre><code class=\"hljs language-java\">routingContext.redirect(<span class=\"hljs-string\">&quot;https://securesite.com/&quot;</span>);\n</code></pre><p>Send a JSON re­sponse to the client:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// no need to specify the content type headers</span>\nrc.json(<span class=\"hljs-keyword\">new</span> JsonObject().put(<span class=\"hljs-string\">&quot;hello&quot;</span>, <span class=\"hljs-string\">&quot;vert.x&quot;</span>));\n</code></pre><p>Sim­ple con­tent type check:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">if</span> (routingContext.is(<span class=\"hljs-string\">&quot;application/json&quot;</span>)) {\n  <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre><p>Ver­ify if a re­quest is “fresh” with re­spect to the cache head­ers and the cur­rent val­ues of last mod­i­fied/ etag:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">if</span> (rc.isFresh()) {\n  <span class=\"hljs-comment\">// client cache value is fresh perhaps we</span>\n  <span class=\"hljs-comment\">// can stop and return 304?</span>\n}\n</code></pre><h2 id=\"other-changes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#other-changes\"></a>Other changes</h2><ul><li>Groovy has been sim­pli­fied in Vert.x 4 to re­move code gen­er­a­tion that was not re­ally needed in prac­tice</li><li>The orig­i­nal Redis client dep­re­cated in 3.7 has been re­moved re­placed by the new Redis client</li><li>JSON changes<ul><li>Jack­son data­bind is now an op­tional Maven de­pen­dency which means that ap­pli­ca­tions need to ex­plic­itly add this de­pen­dency to the class­path</li><li>Spe­cific Jack­son util­ity meth­ods are moved to spe­cific Jack­son classes</li><li>Vert.x can use an al­ter­na­tive im­ple­men­ta­tion than Jack­son for JSON en­cod­ing and JSON de­cod­ing</li></ul></li><li>The fol­low­ing com­po­nents have reached their end of life and have been pruned<ul><li>MySQL / Post­greSQL async client re­placed by the Vert.x SQL Client (since 3.8)</li><li>AMQP bridge re­placed by the Vert.x AMQP Client (since 3.7)</li></ul></li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone3-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the third mile­stone of Vert.x 4, we aim to re­lease Vert.x 4 by the end of this year and you can of course\nex­pect more mile­stones to out­line the progress of the ef­fort.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>For this re­lease there are no Docker im­ages.,</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone3\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone3/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0-​milestone3 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"json","tf":10},{"term":"client","tf":9},{"term":"object","tf":7},{"term":"servic","tf":6},{"term":"releas","tf":5},{"term":"will","tf":5},{"term":"data","tf":5},{"term":"type","tf":5},{"term":"respons","tf":5},{"term":"us","tf":5},{"term":"mileston","tf":4},{"term":"provid","tf":4},{"term":"proxi","tf":4},{"term":"third","tf":3},{"term":"featur","tf":3},{"term":"develop","tf":3},{"term":"map","tf":3},{"term":"request","tf":3},{"term":"gener","tf":3},{"term":"code","tf":3},{"term":"seri","tf":2},{"term":"aim","tf":2},{"term":"distribut","tf":2},{"term":"current","tf":2},{"term":"extend","tf":2}]},{"filename":"blog/2019-08-30-eclipse-vert-x-for-scala-next-steps.mdx","date":"2019-08-30","slug":"eclipse-vert-x-for-scala-next-steps","meta":{"title":"Eclipse Vert.x for Scala next steps","category":"news","authors":[{"name":"Jochen Mader","github_id":"codepitbull"}],"summary":"This blog post gives an overview of the current plans for the vertx-lang-scala module, in particular with respect to the upcoming Vert.x 4."},"readingTime":{"text":"6 min read","minutes":5.225,"time":313500,"words":1045},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TL;DR:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No Scala 2.13 in Eclipse Vert.x 3.x due to in\\xADcreased sup\\xADport bur\\xADden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New value classes based ap\\xADproach for Vert.x 4\")), mdx(\"h2\", {\n    \"id\": \"retrospective\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#retrospective\"\n  })), \"Retrospective\"), mdx(\"p\", null, \"It\\u2019s been more than two years since the in\\xADcep\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-lang-scala\"), \" to the Vert.x ecosys\\xADtem. And al\\xADmost as long since I wrote my first \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/blog/scala-is-here/\"\n  }), \"blog post\"), \" about it.\"), mdx(\"p\", null, \"A lot has hap\\xADpened since March 2017:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertx-lang-scala\"), \" kept up with new ver\\xADsions of Scala\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all Vert.x-\\u200Bmodules are sup\\xADported (35 so far)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a Giter8 based \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-scala.g8\"\n  }), \"tem\\xADplate\"), \" was added for eas\\xADily boot\\xADstrap\\xADping a Vert.x-\\u200BScala-project\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs were squashed\")), mdx(\"p\", null, \"And most re\\xADcently we re\\xADceived a great con\\xADtri\\xADbu\\xADtion by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/NikolajLeischner\"\n  }), \"Niko\\xADlaj Leis\\xADchner\"), \" who was kind enough to port the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Scala/vertx-web-scala\"\n  }), \"techempow\\xADered\"), \" bench\\xADmark to vert-\\u200Blang-scala. Which will be part of the next steps.\"), mdx(\"p\", null, \"The num\\xADbers pro\\xADduced by this bench\\xADmark were very promis\\xADing and and ad\\xADdi\\xADtional mo\\xADti\\xADva\\xADtion to move to the next phase of Scala sup\\xADport for Vert.x.\"), mdx(\"h2\", {\n    \"id\": \"old-idea\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#old-idea\"\n  })), \"Old idea\"), mdx(\"p\", null, \"Be\\xADfore get\\xADting to the new ideas I want to take a look at the \\u201Cold\\u201D one.\"), mdx(\"p\", null, \"The cur\\xADrent ver\\xADsion of vert-\\u200Blang-scala is based around the idea of wrap\\xADping the Vert.x-API with a ded\\xADi\\xADcated Scala-\\u200Blayer. That layer is cre\\xADated using a Freemarker-\\u200Bbased code gen\\xADer\\xADa\\xADtor. I took this idea from the first try by Tim Fox for build\\xADing that sup\\xADport.\"), mdx(\"p\", null, \"Wrap\\xADping the ex\\xADist\\xADing Java-\\u200BAPI was rather painful but gave me great flex\\xADi\\xADbil\\xADity to cre\\xADate an id\\xADiomatic Scala-\\u200BAPI.\"), mdx(\"p\", null, \"But an ap\\xADproach like that comes with a price:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are a lot of in\\xADter\\xADme\\xADdi\\xADate ob\\xADjects being cre\\xADated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Many un\\xADnec\\xADces\\xADsary con\\xADver\\xADsions be\\xADtween Java/Scala types\")), mdx(\"p\", null, \"Both in\\xADcreased mem\\xADory con\\xADsump\\xADtion and garbage col\\xADlec\\xADtion ac\\xADtiv\\xADity quite a bit and has been bug\\xADging me from the be\\xADgin\\xADning.\"), mdx(\"h2\", {\n    \"id\": \"new-idea\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#new-idea\"\n  })), \"New idea\"), mdx(\"p\", null, \"With Vert.x 4 ap\\xADproach\\xADing I was fi\\xADnally able to in\\xADvest time into the re\\xADwork I had wanted to do for quite a while.\"), mdx(\"p\", null, \"The core idea is to re\\xADplace the cur\\xADrent wrap\\xADping based ap\\xADproach with some\\xADthing more light\\xADweight but na\\xADtive to the Scala-\\u200Bworld.\"), mdx(\"p\", null, \"And that\\u2019s where \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.scala-lang.org/overviews/core/value-classes.html\"\n  }), \"value classes\"), \" come in.\"), mdx(\"p\", null, \"Value classes allow the ex\\xADten\\xADsion of ex\\xADist\\xADing classes with ad\\xADdi\\xADtional meth\\xADods. They make it easy to con\\xADtrol \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"when\"), \" meth\\xADods be\\xADcome vis\\xADi\\xADble and do that with a min\\xADi\\xADmum of over\\xADhead. To be pre\\xADcise: A wrap\\xADping class is nor\\xADmally ever only in\\xADstan\\xADti\\xADated \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"once\"), \".\"), mdx(\"p\", null, \"A good ex\\xADam\\xADple is the ad\\xADdi\\xADtion of meth\\xADods for wrap\\xADping the Vert.x ap\\xADproach of Promises with Scala-\\u200BFutures. Each method re\\xADturn\\xADing a Vert.x-\\u200BPromise needs to re\\xADceive an al\\xADter\\xADna\\xADtive ver\\xADsion which re\\xADturns a Scala-\\u200BFuture.\"), mdx(\"p\", null, \"In Vert.x 3 I achieved that by adding meth\\xADods to the wrap\\xADper and giv\\xADing them a dis\\xADtinct name. A method called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lis\\xADten\"), \" re\\xADturn\\xADing a Promise would re\\xADceive a com\\xADpan\\xADion called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lis\\xADten\\xADFu\\xADture\"), \" in the Scala layer.\"), mdx(\"p\", null, \"Let\\u2019s look at how this looks in the new ap\\xADproach:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" io.vertx.scala\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"object\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"core\")), \"{\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implicit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"HttpServerScala\"), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"val asJava: io.vertx.core.http.\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"HttpServer\")), \") \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AnyVal\"), \" \"), \"{\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"listenFuture\")), \"(port: java.lang.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Integer\"), \"): scala.concurrent.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Future\"), \"[io.vertx.core.http.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"HttpServer\"), \"] = {..}\\n      ..\\n}\\n\")), mdx(\"p\", null, \"The code above does the fol\\xADlow\\xADing things:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It cre\\xADates a pack\\xADage ob\\xADject for \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"io.vertx.scala.core\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it adds an im\\xADplict class \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HttpServer\\xADScala\"), \" to wrpa \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HttpServer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it adds a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lis\\xADten\\xADFu\\xADture\"), \" method\")), mdx(\"p\", null, \"Using this method in code looks like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-scala\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" io.vertx.scala.demo\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.lang.scala.\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"VertxExecutionContext\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.scala.core._\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" scala.util.{\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Failure\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Success\"), \"}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"object\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Main\"), \" \"), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"main\")), \"(args: \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Array\"), \"[\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"String\"), \"]): \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Unit\"), \" = {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" vertx = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Vertx\"), \".vertx()\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"implicit\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" ec = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"VertxExecutionContext\"), \"(vertx.getOrCreateContext())\\n    vertx\\n      .createHttpServer()\\n      .requestHandler(r => {\\n        r.response().end(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"bye\\\"\"), \")\\n      })\\n      .listenFuture(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"6667\"), \")\\n      .onComplete {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Success\"), \"(_) => println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Started\\\"\"), \")\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Failure\"), \"(exception) => println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure\\\"\"), \")\\n      }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Im\\xADport\\xADing the pack\\xADage ob\\xADject using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"im\\xADport io.vertx.scala.core._\"), \" brings the ex\\xADten\\xADsion method into scope and makes them avail\\xADable on all in\\xADstances of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HttpServer\"), \". In the ex\\xADam\\xADple above \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cre\\xADate\\xADHttpServer()\"), \" re\\xADturn such an in\\xADstance and we can now use the id\\xADiomatic Scala way of han\\xADdling a Fu\\xADture.\"), mdx(\"h3\", {\n    \"id\": \"even-more\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#even-more\"\n  })), \"Even more\"), mdx(\"p\", null, \"Ex\\xADtend\\xADing classes with Future-\\u200Bmethods is only one of the new things to come. On top of that the sup\\xADport for DataOb\\xADjects will be con\\xADsid\\xADer\\xADably im\\xADproved, both through ex\\xADtend\\xADing them and by pro\\xADvid\\xADing type aliases.\"), mdx(\"p\", null, \"I also switched from doing all con\\xADver\\xADsions for col\\xADlec\\xADtions au\\xADto\\xADmat\\xADi\\xADcally to hand\\xADing the con\\xADtrol back to the user. Some\\xADthing which gets even more im\\xADpor\\xADtant for Scala 2.13 and the new col\\xADlec\\xADtion API.\"), mdx(\"h3\", {\n    \"id\": \"the-downside\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-downside\"\n  })), \"The downside\"), mdx(\"p\", null, \"The clear down\\xADside of this ap\\xADproach is that the Java-\\u200Bmethods will stay vis\\xADi\\xADble since the java-\\u200Bclasses won\\u2019t be wrapped but ex\\xADtended. This might lead to some con\\xADfu\\xADsion but I am pretty sure the ben\\xADe\\xADfits out\\xADweight this down\\xADside.\"), mdx(\"p\", null, \"The big\\xADger change will be the re\\xADmoval of au\\xADto\\xADmatic von\\xADver\\xADsion be\\xADtween Scala types (Long/Int/String and  Col\\xADlec\\xADtions) and their Java coun\\xADter\\xADparts. I spent con\\xADsid\\xADer\\xADable time try\\xADing to tune that part in the cur\\xADrent ver\\xADsion bbut al\\xADways ended up hit\\xADting some edge\\xADcase. For now I\\u2019ve de\\xADcided to have the user pick the right time to con\\xADvert.\"), mdx(\"p\", null, \"I might still add this fea\\xADture in a later ver\\xADsion if user feed\\xADback points into that di\\xADrec\\xADtion.\"), mdx(\"h2\", {\n    \"id\": \"when-will-i-get-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#when-will-i-get-it\"\n  })), \"When will I get it?\"), mdx(\"p\", null, \"First for the good news: There is al\\xADready a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-lang-scala/tree/4.0\"\n  }), \"branch\"), \" with a full im\\xADple\\xADmen\\xADta\\xADtion.\"), mdx(\"p\", null, \"The bad news: It will break until Vert.x 4.0 is fi\\xADnally re\\xADleased.\"), mdx(\"p\", null, \"Vert.x 4 is in ac\\xADtive de\\xADvel\\xADop\\xADment with most APIs al\\xADready fi\\xADnal\\xADized but break\\xADing changes still hap\\xADpen. So use at your own risk!\"), mdx(\"h2\", {\n    \"id\": \"what-about-scala-213\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#what-about-scala-213\"\n  })), \"What about Scala 2.13?\"), mdx(\"p\", null, \"Scala 2.13 has been re\\xADleased re\\xADcently which prompted ques\\xADtions from the com\\xADmu\\xADnity about when it will be sup\\xADported by Vert.x.\"), mdx(\"p\", null, \"I haven\\u2019t done a good job pro\\xADvid\\xADing the re\\xADsults of our in\\xADter\\xADnal dis\\xADcus\\xADsions on that topic to the com\\xADmu\\xADnity. So here we go:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x 3 will stay on 2.12 for the fol\\xADlow\\xADing rea\\xADsons:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Both are still ac\\xADtively sup\\xADported\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scala ecosys\\xADtems takes some time to do the switch to 2.13\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We sim\\xADply don\\u2019t have the ca\\xADpac\\xADity to sup\\xADport both ver\\xADsions \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AND\"), \" the up\\xADcom\\xADing new ver\\xADsion\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x 4 will re\\xADceive 2.13 sup\\xADport\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scala ecosys\\xADtem will have moved closer to 2.13 adop\\xADtion when Vert.x 4 comes out\")))), mdx(\"h2\", {\n    \"id\": \"for-the-adventure-seaker\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#for-the-adventure-seaker\"\n  })), \"For the adventure seaker\"), mdx(\"p\", null, \"I ac\\xADtu\\xADally did a port of vertx-\\u200Blang-scala 3.8 to Scala 2.13 and you can grab the work in this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-lang-scala/tree/3.8_2.13\"\n  }), \"branch\"), \".\"), mdx(\"p\", null, \"Don\\u2019t ex\\xADpect \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ANY\"), \" sup\\xADport for this branch. This was only an ex\\xADper\\xADi\\xADment to see how much I had to change for ini\\xADtial 2.13 sup\\xADport.\"), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#summary\"\n  })), \"Summary\"), mdx(\"p\", null, \"Vert.x 4 will be an evo\\xADlu\\xADtion\\xADary step for vertx-\\u200Blang-scala. Value classes promise to re\\xADduce both com\\xADplex\\xADity and al\\xADlo\\xADca\\xADtion rate, two things which have been bug\\xADging me quite a bit with the cur\\xADrent ap\\xADproach.\"), mdx(\"p\", null, \"I am eager to hear from you all what you think about this new di\\xADrec\\xADtion.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><strong>TL;DR:</strong></p><ul><li>No Scala 2.13 in Eclipse Vert.x 3.x due to in­creased sup­port bur­den</li><li>New value classes based ap­proach for Vert.x 4</li></ul><h2 id=\"retrospective\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#retrospective\"></a>Retrospective</h2><p>It’s been more than two years since the in­cep­tion of <code>vertx-lang-scala</code> to the Vert.x ecosys­tem. And al­most as long since I wrote my first <a href=\"https://vertx.io/blog/scala-is-here/\">blog post</a> about it.</p><p>A lot has hap­pened since March 2017:</p><ul><li><code>vertx-lang-scala</code> kept up with new ver­sions of Scala</li><li>all Vert.x-​modules are sup­ported (35 so far)</li><li>a Giter8 based <a href=\"https://github.com/vert-x3/vertx-scala.g8\">tem­plate</a> was added for eas­ily boot­strap­ping a Vert.x-​Scala-project</li><li>Bugs were squashed</li></ul><p>And most re­cently we re­ceived a great con­tri­bu­tion by <a href=\"https://github.com/NikolajLeischner\">Niko­laj Leis­chner</a> who was kind enough to port the <a href=\"https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Scala/vertx-web-scala\">techempow­ered</a> bench­mark to vert-​lang-scala. Which will be part of the next steps.</p><p>The num­bers pro­duced by this bench­mark were very promis­ing and and ad­di­tional mo­ti­va­tion to move to the next phase of Scala sup­port for Vert.x.</p><h2 id=\"old-idea\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#old-idea\"></a>Old idea</h2><p>Be­fore get­ting to the new ideas I want to take a look at the “old” one.</p><p>The cur­rent ver­sion of vert-​lang-scala is based around the idea of wrap­ping the Vert.x-API with a ded­i­cated Scala-​layer. That layer is cre­ated using a Freemarker-​based code gen­er­a­tor. I took this idea from the first try by Tim Fox for build­ing that sup­port.</p><p>Wrap­ping the ex­ist­ing Java-​API was rather painful but gave me great flex­i­bil­ity to cre­ate an id­iomatic Scala-​API.</p><p>But an ap­proach like that comes with a price:</p><ul><li>There are a lot of in­ter­me­di­ate ob­jects being cre­ated.</li><li>Many un­nec­ces­sary con­ver­sions be­tween Java/Scala types</li></ul><p>Both in­creased mem­ory con­sump­tion and garbage col­lec­tion ac­tiv­ity quite a bit and has been bug­ging me from the be­gin­ning.</p><h2 id=\"new-idea\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#new-idea\"></a>New idea</h2><p>With Vert.x 4 ap­proach­ing I was fi­nally able to in­vest time into the re­work I had wanted to do for quite a while.</p><p>The core idea is to re­place the cur­rent wrap­ping based ap­proach with some­thing more light­weight but na­tive to the Scala-​world.</p><p>And that’s where <a href=\"https://docs.scala-lang.org/overviews/core/value-classes.html\">value classes</a> come in.</p><p>Value classes allow the ex­ten­sion of ex­ist­ing classes with ad­di­tional meth­ods. They make it easy to con­trol <strong>when</strong> meth­ods be­come vis­i­ble and do that with a min­i­mum of over­head. To be pre­cise: A wrap­ping class is nor­mally ever only in­stan­ti­ated <strong>once</strong>.</p><p>A good ex­am­ple is the ad­di­tion of meth­ods for wrap­ping the Vert.x ap­proach of Promises with Scala-​Futures. Each method re­turn­ing a Vert.x-​Promise needs to re­ceive an al­ter­na­tive ver­sion which re­turns a Scala-​Future.</p><p>In Vert.x 3 I achieved that by adding meth­ods to the wrap­per and giv­ing them a dis­tinct name. A method called <strong>lis­ten</strong> re­turn­ing a Promise would re­ceive a com­pan­ion called <strong>lis­ten­Fu­ture</strong> in the Scala layer.</p><p>Let’s look at how this looks in the new ap­proach:</p><pre><code class=\"hljs language-scala\"><span class=\"hljs-keyword\">package</span> io.vertx.scala\n<span class=\"hljs-keyword\">package</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">core</span></span>{\n   <span class=\"hljs-keyword\">implicit</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HttpServerScala</span>(<span class=\"hljs-params\">val asJava: io.vertx.core.http.<span class=\"hljs-type\">HttpServer</span></span>) <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AnyVal</span> </span>{\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">listenFuture</span></span>(port: java.lang.<span class=\"hljs-type\">Integer</span>): scala.concurrent.<span class=\"hljs-type\">Future</span>[io.vertx.core.http.<span class=\"hljs-type\">HttpServer</span>] = {..}\n      ..\n}\n</code></pre><p>The code above does the fol­low­ing things:</p><ul><li>It cre­ates a pack­age ob­ject for <strong>io.vertx.scala.core</strong></li><li>it adds an im­plict class <strong>HttpServer­Scala</strong> to wrpa <strong>HttpServer</strong></li><li>it adds a <strong>lis­ten­Fu­ture</strong> method</li></ul><p>Using this method in code looks like this:</p><pre><code class=\"hljs language-scala\"><span class=\"hljs-keyword\">package</span> io.vertx.scala.demo\n\n<span class=\"hljs-keyword\">import</span> io.vertx.lang.scala.<span class=\"hljs-type\">VertxExecutionContext</span>\n<span class=\"hljs-keyword\">import</span> io.vertx.scala.core._\n\n<span class=\"hljs-keyword\">import</span> scala.util.{<span class=\"hljs-type\">Failure</span>, <span class=\"hljs-type\">Success</span>}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">Main</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">main</span></span>(args: <span class=\"hljs-type\">Array</span>[<span class=\"hljs-type\">String</span>]): <span class=\"hljs-type\">Unit</span> = {\n    <span class=\"hljs-keyword\">val</span> vertx = <span class=\"hljs-type\">Vertx</span>.vertx()\n    <span class=\"hljs-keyword\">implicit</span> <span class=\"hljs-keyword\">val</span> ec = <span class=\"hljs-type\">VertxExecutionContext</span>(vertx.getOrCreateContext())\n    vertx\n      .createHttpServer()\n      .requestHandler(r =&gt; {\n        r.response().end(<span class=\"hljs-string\">&quot;bye&quot;</span>)\n      })\n      .listenFuture(<span class=\"hljs-number\">6667</span>)\n      .onComplete {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-type\">Success</span>(_) =&gt; println(<span class=\"hljs-string\">&quot;Started&quot;</span>)\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-type\">Failure</span>(exception) =&gt; println(<span class=\"hljs-string\">&quot;Failure&quot;</span>)\n      }\n  }\n}\n</code></pre><p>Im­port­ing the pack­age ob­ject using <strong>im­port io.vertx.scala.core._</strong> brings the ex­ten­sion method into scope and makes them avail­able on all in­stances of <strong>HttpServer</strong>. In the ex­am­ple above <strong>cre­ate­HttpServer()</strong> re­turn such an in­stance and we can now use the id­iomatic Scala way of han­dling a Fu­ture.</p><h3 id=\"even-more\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#even-more\"></a>Even more</h3><p>Ex­tend­ing classes with Future-​methods is only one of the new things to come. On top of that the sup­port for DataOb­jects will be con­sid­er­ably im­proved, both through ex­tend­ing them and by pro­vid­ing type aliases.</p><p>I also switched from doing all con­ver­sions for col­lec­tions au­to­mat­i­cally to hand­ing the con­trol back to the user. Some­thing which gets even more im­por­tant for Scala 2.13 and the new col­lec­tion API.</p><h3 id=\"the-downside\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-downside\"></a>The downside</h3><p>The clear down­side of this ap­proach is that the Java-​methods will stay vis­i­ble since the java-​classes won’t be wrapped but ex­tended. This might lead to some con­fu­sion but I am pretty sure the ben­e­fits out­weight this down­side.</p><p>The big­ger change will be the re­moval of au­to­matic von­ver­sion be­tween Scala types (Long/Int/String and  Col­lec­tions) and their Java coun­ter­parts. I spent con­sid­er­able time try­ing to tune that part in the cur­rent ver­sion bbut al­ways ended up hit­ting some edge­case. For now I’ve de­cided to have the user pick the right time to con­vert.</p><p>I might still add this fea­ture in a later ver­sion if user feed­back points into that di­rec­tion.</p><h2 id=\"when-will-i-get-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#when-will-i-get-it\"></a>When will I get it?</h2><p>First for the good news: There is al­ready a <a href=\"https://github.com/vert-x3/vertx-lang-scala/tree/4.0\">branch</a> with a full im­ple­men­ta­tion.</p><p>The bad news: It will break until Vert.x 4.0 is fi­nally re­leased.</p><p>Vert.x 4 is in ac­tive de­vel­op­ment with most APIs al­ready fi­nal­ized but break­ing changes still hap­pen. So use at your own risk!</p><h2 id=\"what-about-scala-213\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#what-about-scala-213\"></a>What about Scala 2.13?</h2><p>Scala 2.13 has been re­leased re­cently which prompted ques­tions from the com­mu­nity about when it will be sup­ported by Vert.x.</p><p>I haven’t done a good job pro­vid­ing the re­sults of our in­ter­nal dis­cus­sions on that topic to the com­mu­nity. So here we go:</p><ul><li>Vert.x 3 will stay on 2.12 for the fol­low­ing rea­sons:<ul><li>Both are still ac­tively sup­ported</li><li>Scala ecosys­tems takes some time to do the switch to 2.13</li><li>We sim­ply don’t have the ca­pac­ity to sup­port both ver­sions <strong>AND</strong> the up­com­ing new ver­sion</li></ul></li><li>Vert.x 4 will re­ceive 2.13 sup­port<ul><li>Scala ecosys­tem will have moved closer to 2.13 adop­tion when Vert.x 4 comes out</li></ul></li></ul><h2 id=\"for-the-adventure-seaker\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#for-the-adventure-seaker\"></a>For the adventure seaker</h2><p>I ac­tu­ally did a port of vertx-​lang-scala 3.8 to Scala 2.13 and you can grab the work in this <a href=\"https://github.com/vert-x3/vertx-lang-scala/tree/3.8_2.13\">branch</a>.</p><p>Don’t ex­pect <strong>ANY</strong> sup­port for this branch. This was only an ex­per­i­ment to see how much I had to change for ini­tial 2.13 sup­port.</p><h2 id=\"summary\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#summary\"></a>Summary</h2><p>Vert.x 4 will be an evo­lu­tion­ary step for vertx-​lang-scala. Value classes promise to re­duce both com­plex­ity and al­lo­ca­tion rate, two things which have been bug­ging me quite a bit with the cur­rent ap­proach.</p><p>I am eager to hear from you all what you think about this new di­rec­tion.</p>","scope":{}},"tfIdfTerms":[{"term":"scala","tf":25},{"term":"support","tf":11},{"term":"new","tf":11},{"term":"will","tf":11},{"term":"method","tf":11},{"term":"13","tf":9},{"term":"class","tf":9},{"term":"approach","tf":8},{"term":"version","tf":7},{"term":"idea","tf":6},{"term":"wrap","tf":6},{"term":"base","tf":5},{"term":"promis","tf":5},{"term":"api","tf":5},{"term":"us","tf":5},{"term":"java","tf":5},{"term":"valu","tf":4},{"term":"receiv","tf":4},{"term":"lang","tf":4},{"term":"look","tf":4},{"term":"current","tf":4},{"term":"creat","tf":4},{"term":"collect","tf":4},{"term":"time","tf":4},{"term":"futur","tf":4}]},{"filename":"blog/2019-08-26-eclipse-vert-x-4-milestone-2-released.mdx","date":"2019-08-26","slug":"eclipse-vert-x-4-milestone-2-released","meta":{"title":"Eclipse Vert.x 4 milestone 2 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The new milestone release of Vert.x 4 includes progress on futurisation, tracing, and many other improvements."},"readingTime":{"text":"3 min read","minutes":2.43,"time":145800,"words":486},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the sec\\xADond 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x .\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple who\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"futurisation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#futurisation\"\n  })), \"Futurisation\"), mdx(\"p\", null, \"Vert.x 4 ex\\xADtends the 3.x call\\xADback asyn\\xADchro\\xADnous model to a fu\\xADture/call\\xADback hy\\xADbrid model.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"NetClient\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Since 3.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host, Handler<AsyncResult<NetSocket>> handler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// New in 4.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"Future<NetSocket> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n}\\n\")), mdx(\"p\", null, \"The first mile\\xADstone, only cov\\xADered \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x Core\"), \", this sec\\xADond mile\\xADstone has made sig\\xADnif\\xADi\\xADcant progress with the fu\\xADtur\\xADi\\xADsa\\xADtion\\nof the fol\\xADlow\\xADing stack mod\\xADules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bauth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bweb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bmqtt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bcassandra-client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bredis-client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bkakfa-client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vertx-\\u200Bamqp-client\")), mdx(\"h2\", {\n    \"id\": \"tracing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#tracing\"\n  })), \"Tracing\"), mdx(\"p\", null, \"In\\xADstru\\xADment\\xADing asyn\\xADchro\\xADnous ap\\xADpli\\xADca\\xADtion for dis\\xADtrib\\xADuted trac\\xADing is quite chal\\xADleng\\xADing be\\xADcause most trac\\xADing li\\xADbraries\\nrely on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://fr.wikipedia.org/wiki/Thread_Local_Storage\"\n  }), \"thread local stor\\xADage\"), \". While it works rea\\xADsonnably well\\nin a block\\xADing ap\\xADpli\\xADca\\xADtion, this does not work for an asyn\\xADchro\\xADnous ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"This sup\\xADposes that the ap\\xADpli\\xADca\\xADtion con\\xADtrol flow mat\\xADters (i.e threads) al\\xADthough what re\\xADally mat\\xADters is the ap\\xADpli\\xADca\\xADtion\\nre\\xADquest flow (e.g the in\\xADcom\\xADing HTTP re\\xADquest).\"), mdx(\"p\", null, \"We im\\xADproved Vert.x 4 to reify the re\\xADquest flow, mak\\xADing it pos\\xADsi\\xADble to in\\xADte\\xADgrate pop\\xADu\\xADlar trac\\xADing tools such as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zipkin.io\"\n  }), \"Zip\\xADkin\"), \"\\nor \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://opentracing.io\"\n  }), \"Open\\xADtrac\\xADing\"), \". Vert.x per\\xADfor\\xADmance is leg\\xADendary and we made sure that this does not have\\nany over\\xADhead out of the box (dis\\xADabled).\"), mdx(\"p\", null, \"We pro\\xADvide sup\\xADport for these two pop\\xADu\\xADlar li\\xADbraries under the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x Trac\\xADing\"), \" um\\xADbrella.\"), mdx(\"h2\", {\n    \"id\": \"other-changes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#other-changes\"\n  })), \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Groovy has been sim\\xADpli\\xADfied in Vert.x 4 to re\\xADmove code gen\\xADer\\xADa\\xADtion that was not re\\xADally needed in prac\\xADtice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The orig\\xADi\\xADnal Redis client dep\\xADre\\xADcated in 3.7 has been re\\xADmoved re\\xADplaced by the new Redis client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The fol\\xADlow\\xADing com\\xADpo\\xADnents have reached their end of life and have been pruned\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MySQL / Post\\xADgreSQL async client re\\xADplaced by the Vert.x SQL Client (since 3.8)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AMQP bridge re\\xADplaced by the Vert.x AMQP Client (since 3.7)\")))), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone2-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the first mile\\xADstone of Vert.x 4, we aim to re\\xADlease Vert.x 4 by the end of this year and you can of course\\nex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"For this re\\xADlease there are no Docker im\\xADages.,\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone2\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone2/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 4.0.0-\\u200Bmilestone2 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the sec­ond 4.0 mile­stone re­lease of Eclipse Vert.x .</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple who\nwant to try it and pro­vide feed­back.</p><h2 id=\"futurisation\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#futurisation\"></a>Futurisation</h2><p>Vert.x 4 ex­tends the 3.x call­back asyn­chro­nous model to a fu­ture/call­back hy­brid model.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">NetClient</span> </span>{\n\n  <span class=\"hljs-comment\">// Since 3.0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host, Handler&lt;AsyncResult&lt;NetSocket&gt;&gt; handler)</span></span>;\n\n  <span class=\"hljs-comment\">// New in 4.0</span>\n  <span class=\"hljs-function\">Future&lt;NetSocket&gt; <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n}\n</code></pre><p>The first mile­stone, only cov­ered <em>Vert.x Core</em>, this sec­ond mile­stone has made sig­nif­i­cant progress with the fu­tur­i­sa­tion\nof the fol­low­ing stack mod­ules:</p><ul><li>vertx-​auth</li><li>vertx-​web</li><li>vertx-​mqtt</li><li>vertx-​cassandra-client</li><li>vertx-​redis-client</li><li>vertx-​kakfa-client</li><li>vertx-​amqp-client</li></ul><h2 id=\"tracing\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#tracing\"></a>Tracing</h2><p>In­stru­ment­ing asyn­chro­nous ap­pli­ca­tion for dis­trib­uted trac­ing is quite chal­leng­ing be­cause most trac­ing li­braries\nrely on <a href=\"https://fr.wikipedia.org/wiki/Thread_Local_Storage\">thread local stor­age</a>. While it works rea­sonnably well\nin a block­ing ap­pli­ca­tion, this does not work for an asyn­chro­nous ap­pli­ca­tion.</p><p>This sup­poses that the ap­pli­ca­tion con­trol flow mat­ters (i.e threads) al­though what re­ally mat­ters is the ap­pli­ca­tion\nre­quest flow (e.g the in­com­ing HTTP re­quest).</p><p>We im­proved Vert.x 4 to reify the re­quest flow, mak­ing it pos­si­ble to in­te­grate pop­u­lar trac­ing tools such as <a href=\"https://zipkin.io\">Zip­kin</a>\nor <a href=\"https://opentracing.io\">Open­trac­ing</a>. Vert.x per­for­mance is leg­endary and we made sure that this does not have\nany over­head out of the box (dis­abled).</p><p>We pro­vide sup­port for these two pop­u­lar li­braries under the <em>Vert.x Trac­ing</em> um­brella.</p><h2 id=\"other-changes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#other-changes\"></a>Other changes</h2><ul><li>Groovy has been sim­pli­fied in Vert.x 4 to re­move code gen­er­a­tion that was not re­ally needed in prac­tice</li><li>The orig­i­nal Redis client dep­re­cated in 3.7 has been re­moved re­placed by the new Redis client</li><li>The fol­low­ing com­po­nents have reached their end of life and have been pruned<ul><li>MySQL / Post­greSQL async client re­placed by the Vert.x SQL Client (since 3.8)</li><li>AMQP bridge re­placed by the Vert.x AMQP Client (since 3.7)</li></ul></li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone2-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the first mile­stone of Vert.x 4, we aim to re­lease Vert.x 4 by the end of this year and you can of course\nex­pect more mile­stones to out­line the progress of the ef­fort.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>For this re­lease there are no Docker im­ages.,</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone2\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone2/\">Maven Cen­tral</a>.</p><p>You can boot­strap a Vert.x 4.0.0-​milestone2 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"client","tf":9},{"term":"mileston","tf":5},{"term":"releas","tf":5},{"term":"trace","tf":5},{"term":"applic","tf":5},{"term":"featur","tf":3},{"term":"provid","tf":3},{"term":"distribut","tf":3},{"term":"develop","tf":3},{"term":"asynchron","tf":3},{"term":"redi","tf":3},{"term":"amqp","tf":3},{"term":"not","tf":3},{"term":"flow","tf":3},{"term":"request","tf":3},{"term":"http","tf":3},{"term":"chang","tf":3},{"term":"replac","tf":3},{"term":"second","tf":2},{"term":"seri","tf":2},{"term":"aim","tf":2},{"term":"futuris","tf":2},{"term":"callback","tf":2},{"term":"model","tf":2},{"term":"first","tf":2}]},{"filename":"blog/2019-08-23-eclipse-vert-x-3-8-1.mdx","date":"2019-08-23","slug":"eclipse-vert-x-3-8-1","meta":{"title":"Eclipse Vert.x 3.8.1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This new version is a bug fix release that addresses issues reported in Eclipse Vert.x 3.8.1. We also updated Netty to version 4.1.39.Final to fix some CVEs."},"readingTime":{"text":"1 min read","minutes":0.805,"time":48300.00000000001,"words":161},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have just re\\xADleased Vert.x 3.8.1, a bug fix re\\xADlease of Vert.x 3.8.x.\"), mdx(\"p\", null, \"This ver\\xADsion up\\xADdates to Netty 4.1.39.Final fix\\xADing the fol\\xADlow\\xADing HTTP/2 re\\xADlated CVEs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CVE-2019-9512: Ping Flood\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CVE-2019-9514: Reset Flood\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CVE-2019-9515: Set\\xADtings Flood\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CVE-2019-9518: Empty DATA frame flood\\xADing\")), mdx(\"p\", null, \"Since the re\\xADlease of Vert.x 3.8.0, quite a few bugs have been re\\xADported. We would like to thank you all for re\\xADport\\xADing these is\\xADsues.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Vert.x 3.8.1 dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.1-Deprecations-and-breaking-changes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.8.1-\\u200BDeprecations-and-breaking-changes\")))), mdx(\"p\", null, \"Vert.x 3.8.1 re\\xADlease notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.1-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.8.1-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.1%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.8.1/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"You can boot\\xADstrap a Vert.x 3.8.1 project using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://start.vertx.io\"\n  }), \"https://start.vertx.io\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We have just re­leased Vert.x 3.8.1, a bug fix re­lease of Vert.x 3.8.x.</p><p>This ver­sion up­dates to Netty 4.1.39.Final fix­ing the fol­low­ing HTTP/2 re­lated CVEs:</p><ul><li>CVE-2019-9512: Ping Flood</li><li>CVE-2019-9514: Reset Flood</li><li>CVE-2019-9515: Set­tings Flood</li><li>CVE-2019-9518: Empty DATA frame flood­ing</li></ul><p>Since the re­lease of Vert.x 3.8.0, quite a few bugs have been re­ported. We would like to thank you all for re­port­ing these is­sues.</p><ul><li><p>Vert.x 3.8.1 dep­re­ca­tions and break­ing changes</p></li><li><p><a href=\"https://github.com/vert-x3/wiki/wiki/3.8.1-Deprecations-and-breaking-changes\">https://github.com/vert-​x3/wiki/wiki/3.8.1-​Deprecations-and-breaking-changes</a></p></li></ul><p>Vert.x 3.8.1 re­lease notes</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.8.1-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.8.1-​Release-Notes</a></li></ul><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.1%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.8.1/view\">Bin­tray</a>.</p><p>You can boot­strap a Vert.x 3.8.1 project using <a href=\"https://start.vertx.io\">https://start.vertx.io</a>.</p><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"http","tf":7},{"term":"releas","tf":5},{"term":"cve","tf":5},{"term":"2019","tf":4},{"term":"flood","tf":4},{"term":"com","tf":4},{"term":"wiki","tf":4},{"term":"github","tf":3},{"term":"x3","tf":3},{"term":"avail","tf":3},{"term":"bug","tf":2},{"term":"fix","tf":2},{"term":"report","tf":2},{"term":"deprec","tf":2},{"term":"break","tf":2},{"term":"chang","tf":2},{"term":"note","tf":2},{"term":"distribut","tf":2},{"term":"us","tf":2},{"term":"bu","tf":2},{"term":"client","tf":2},{"term":"bower","tf":2},{"term":"webjar","tf":2},{"term":"www","tf":2},{"term":"docker","tf":2}]},{"filename":"blog/2019-07-26-eclipse-vert-x-4-milestone-1-released.mdx","date":"2019-07-26","slug":"eclipse-vert-x-4-milestone-1-released","meta":{"title":"Eclipse Vert.x 4 milestone 1 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"This is the first milestone of the upcoming Vert.x 4. It extends the 3.x callback asynchronous model to a future/callback hybrid model and introduces a Tracing API."},"readingTime":{"text":"3 min read","minutes":2.38,"time":142799.99999999997,"words":476},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce the first 4.0 mile\\xADstone re\\xADlease of Eclipse Vert.x .\"), mdx(\"p\", null, \"Vert.x 4 is the evo\\xADlu\\xADtion of the Vert.x 3.x se\\xADries that will bring key fea\\xADtures to Vert.x.\"), mdx(\"p\", null, \"This re\\xADlease aims to pro\\xADvide a re\\xADli\\xADable dis\\xADtri\\xADb\\xADu\\xADtion of the cur\\xADrent de\\xADvel\\xADop\\xADment of Vert.x 4 for peo\\xADple that\\nwant to try it and pro\\xADvide feed\\xADback.\"), mdx(\"h2\", {\n    \"id\": \"core-futurisation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#core-futurisation\"\n  })), \"Core futurisation\"), mdx(\"p\", null, \"Vert.x 4 ex\\xADtends the 3.x call\\xADback asyn\\xADchro\\xADnous model to a fu\\xADture/call\\xADback hy\\xADbrid model.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"NetClient\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Since 3.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host, Handler<AsyncResult<NetSocket>> handler)\")), \";\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// New in 4.0\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"Future<NetSocket> \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"connect\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" port, String host)\")), \";\\n}\\n\")), mdx(\"p\", null, \"In this first mile\\xADstone, only the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x Core\"), \" li\\xADbrary con\\xADtains the hy\\xADbrid model. More Vert.x com\\xADpo\\xADnents\\nwill be fu\\xADtur\\xADized soon and you will be able to try them in the next mile\\xADstones.\"), mdx(\"h2\", {\n    \"id\": \"tracing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#tracing\"\n  })), \"Tracing\"), mdx(\"p\", null, \"In\\xADstru\\xADment\\xADing asyn\\xADchro\\xADnous ap\\xADpli\\xADca\\xADtion for dis\\xADtrib\\xADuted trac\\xADing is quite chal\\xADleng\\xADing be\\xADcause most trac\\xADing li\\xADbraries\\nrely on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://fr.wikipedia.org/wiki/Thread_Local_Storage\"\n  }), \"thread local stor\\xADage\"), \". While it works rea\\xADson\\xADably well\\nin a block\\xADing ap\\xADpli\\xADca\\xADtion, this does not work for an asyn\\xADchro\\xADnous ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"This sup\\xADposes that the ap\\xADpli\\xADca\\xADtion con\\xADtrol flow mat\\xADters (i.e threads) al\\xADthough what re\\xADally mat\\xADters is the ap\\xADpli\\xADca\\xADtion\\nre\\xADquest flow (e.g the in\\xADcom\\xADing HTTP re\\xADquest).\"), mdx(\"p\", null, \"We im\\xADproved Vert.x 4 to reify the re\\xADquest flow, mak\\xADing it pos\\xADsi\\xADble to in\\xADte\\xADgrate pop\\xADu\\xADlar trac\\xADing tools such as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zipkin.io\"\n  }), \"Zip\\xADkin\"), \"\\nor \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://opentracing.io\"\n  }), \"Open\\xADtrac\\xADing\"), \". Vert.x per\\xADfor\\xADmance is leg\\xADendary and we made sure that this does not have\\nany over\\xADhead out of the box (dis\\xADabled).\"), mdx(\"p\", null, \"We pro\\xADvide sup\\xADport for these two pop\\xADu\\xADlar li\\xADbraries under the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x Trac\\xADing\"), \" um\\xADbrella.\"), mdx(\"h2\", {\n    \"id\": \"other-changes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#other-changes\"\n  })), \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Groovy has been sim\\xADpli\\xADfied in Vert.x 4 to re\\xADmove code gen\\xADer\\xADa\\xADtion that was not re\\xADally needed in prac\\xADtice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The orig\\xADi\\xADnal Redis client dep\\xADre\\xADcated in 3.7 has been re\\xADmoved re\\xADplaced by the new Redis client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The fol\\xADlow\\xADing com\\xADpo\\xADnents have reached their end of life and have been pruned\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MySQL / Post\\xADgreSQL async client re\\xADplaced by the Vert.x SQL Client (since 3.8)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AMQP bridge re\\xADplaced by the Vert.x AMQP Client (since 3.7)\")))), mdx(\"h2\", {\n    \"id\": \"ramping-up-to-vertx-4\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#ramping-up-to-vertx-4\"\n  })), \"Ramping up to Vert.x 4\"), mdx(\"p\", null, \"In\\xADstead of de\\xADvel\\xADop\\xADing all new fea\\xADtures ex\\xADclu\\xADsively in Vert.x 4, we in\\xADtro\\xADduce some of these fea\\xADtures in the 3.x branch\\nso the com\\xADmu\\xADnity can ben\\xADe\\xADfit from them. The Vert.x 4 de\\xADvel\\xADop\\xADment focus on more fun\\xADda\\xADmen\\xADtal changes that can\\xADnot be done\\nin the 3.x se\\xADries.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/blog/vertx-4-milestone1-release/vertx-4-timeline.png\",\n    \"alt\": \"Screenshot\"\n  }))), mdx(\"p\", null, \"This is the first mile\\xADstone of Vert.x 4, we aim to re\\xADlease Vert.x 4 by the end of this year and you can of course\\nex\\xADpect more mile\\xADstones to out\\xADline the progress of the ef\\xADfort.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\"), \"\\ncan be found on the wiki.\"), mdx(\"p\", null, \"For this re\\xADlease there are no Docker im\\xADages.,\"), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone1\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone1/\"\n  }), \"Maven Cen\\xADtral\"), \".\"), mdx(\"p\", null, \"Most im\\xADpor\\xADtantly the doc\\xADu\\xADmen\\xADta\\xADtion has been de\\xADployed on this pre\\xADview web-\\u200Bsite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx-ci.github.io/vertx-4-preview/docs/\"\n  }), \"https://vertx-\\u200Bci.github.io/vertx-\\u200B4-\\u200Bpreview/docs/\")), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce the first 4.0 mile­stone re­lease of Eclipse Vert.x .</p><p>Vert.x 4 is the evo­lu­tion of the Vert.x 3.x se­ries that will bring key fea­tures to Vert.x.</p><p>This re­lease aims to pro­vide a re­li­able dis­tri­b­u­tion of the cur­rent de­vel­op­ment of Vert.x 4 for peo­ple that\nwant to try it and pro­vide feed­back.</p><h2 id=\"core-futurisation\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#core-futurisation\"></a>Core futurisation</h2><p>Vert.x 4 ex­tends the 3.x call­back asyn­chro­nous model to a fu­ture/call­back hy­brid model.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">NetClient</span> </span>{\n\n  <span class=\"hljs-comment\">// Since 3.0</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host, Handler&lt;AsyncResult&lt;NetSocket&gt;&gt; handler)</span></span>;\n\n  <span class=\"hljs-comment\">// New in 4.0</span>\n  <span class=\"hljs-function\">Future&lt;NetSocket&gt; <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> port, String host)</span></span>;\n}\n</code></pre><p>In this first mile­stone, only the <em>Vert.x Core</em> li­brary con­tains the hy­brid model. More Vert.x com­po­nents\nwill be fu­tur­ized soon and you will be able to try them in the next mile­stones.</p><h2 id=\"tracing\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#tracing\"></a>Tracing</h2><p>In­stru­ment­ing asyn­chro­nous ap­pli­ca­tion for dis­trib­uted trac­ing is quite chal­leng­ing be­cause most trac­ing li­braries\nrely on <a href=\"https://fr.wikipedia.org/wiki/Thread_Local_Storage\">thread local stor­age</a>. While it works rea­son­ably well\nin a block­ing ap­pli­ca­tion, this does not work for an asyn­chro­nous ap­pli­ca­tion.</p><p>This sup­poses that the ap­pli­ca­tion con­trol flow mat­ters (i.e threads) al­though what re­ally mat­ters is the ap­pli­ca­tion\nre­quest flow (e.g the in­com­ing HTTP re­quest).</p><p>We im­proved Vert.x 4 to reify the re­quest flow, mak­ing it pos­si­ble to in­te­grate pop­u­lar trac­ing tools such as <a href=\"https://zipkin.io\">Zip­kin</a>\nor <a href=\"https://opentracing.io\">Open­trac­ing</a>. Vert.x per­for­mance is leg­endary and we made sure that this does not have\nany over­head out of the box (dis­abled).</p><p>We pro­vide sup­port for these two pop­u­lar li­braries under the <em>Vert.x Trac­ing</em> um­brella.</p><h2 id=\"other-changes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#other-changes\"></a>Other changes</h2><ul><li>Groovy has been sim­pli­fied in Vert.x 4 to re­move code gen­er­a­tion that was not re­ally needed in prac­tice</li><li>The orig­i­nal Redis client dep­re­cated in 3.7 has been re­moved re­placed by the new Redis client</li><li>The fol­low­ing com­po­nents have reached their end of life and have been pruned<ul><li>MySQL / Post­greSQL async client re­placed by the Vert.x SQL Client (since 3.8)</li><li>AMQP bridge re­placed by the Vert.x AMQP Client (since 3.7)</li></ul></li></ul><h2 id=\"ramping-up-to-vertx-4\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#ramping-up-to-vertx-4\"></a>Ramping up to Vert.x 4</h2><p>In­stead of de­vel­op­ing all new fea­tures ex­clu­sively in Vert.x 4, we in­tro­duce some of these fea­tures in the 3.x branch\nso the com­mu­nity can ben­e­fit from them. The Vert.x 4 de­vel­op­ment focus on more fun­da­men­tal changes that can­not be done\nin the 3.x se­ries.</p><p><img src=\"/images/blog/vertx-4-milestone1-release/vertx-4-timeline.png\" alt=\"Screenshot\"/></p><p>This is the first mile­stone of Vert.x 4, we aim to re­lease Vert.x 4 by the end of this year and you can of course\nex­pect more mile­stones to out­line the progress of the ef­fort.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a>\ncan be found on the wiki.</p><p>For this re­lease there are no Docker im­ages.,</p><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone1\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone1/\">Maven Cen­tral</a>.</p><p>Most im­por­tantly the doc­u­men­ta­tion has been de­ployed on this pre­view web-​site <a href=\"https://vertx-ci.github.io/vertx-4-preview/docs/\">https://vertx-​ci.github.io/vertx-​4-​preview/docs/</a></p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"mileston","tf":5},{"term":"releas","tf":5},{"term":"trace","tf":5},{"term":"applic","tf":5},{"term":"client","tf":5},{"term":"first","tf":3},{"term":"will","tf":3},{"term":"featur","tf":3},{"term":"provid","tf":3},{"term":"distribut","tf":3},{"term":"develop","tf":3},{"term":"asynchron","tf":3},{"term":"model","tf":3},{"term":"librari","tf":3},{"term":"not","tf":3},{"term":"flow","tf":3},{"term":"request","tf":3},{"term":"chang","tf":3},{"term":"replac","tf":3},{"term":"seri","tf":2},{"term":"aim","tf":2},{"term":"try","tf":2},{"term":"core","tf":2},{"term":"callback","tf":2},{"term":"futur","tf":2}]},{"filename":"blog/2019-07-19-eclipse-vert-x-3-8-0-released.mdx","date":"2019-07-19","slug":"eclipse-vert-x-3-8-0-released","meta":{"title":"Eclipse Vert.x 3.8.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We are extremely pleased to announce that Eclipse Vert.x 3.8.0 has been released. This is an important release introduceing a few changes ramping up to Vert.x 4."},"readingTime":{"text":"3 min read","minutes":2.595,"time":155700.00000000003,"words":519},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are ex\\xADtremely pleased to an\\xADnounce that the Eclipse Vert.x ver\\xADsion 3.8.0 has been re\\xADleased.\"), mdx(\"p\", null, \"This is an im\\xADpor\\xADtant re\\xADlease that in\\xADtro\\xADduces a few changes ramp\\xADing up to Vert.x 4 ex\\xADpected by the end of this year.\"), mdx(\"h2\", {\n    \"id\": \"the-reactive-sql-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-reactive-sql-client\"\n  })), \"The Reactive SQL Client\"), mdx(\"p\", null, \"The client is the evo\\xADlu\\xADtion of the leg\\xADendary \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Re\\xADac\\xADtive Post\\xADgreSQL Client\"), \" and pro\\xADvides\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Re\\xADac\\xADtive Post\\xADgreSQL Client aka Vert.x Post\\xADgreSQL Client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Re\\xADac\\xADtive MySQL Client aka Vert.x MySQL Client\")), mdx(\"p\", null, \"These im\\xADple\\xADmen\\xADta\\xADtions pro\\xADvide real high per\\xADfor\\xADmance non-\\u200Bblocking ac\\xADcess to Post\\xADgreSQL and MySQL.\"), mdx(\"p\", null, \"To use these new mod\\xADules, add the fol\\xADlow\\xADing to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"de\\xADpen\\xADden\\xADcies\"), \" sec\\xADtion of your Maven POM file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-pg-client\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.8.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-mysql-client\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.8.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Or, if you use Gra\\xADdle:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-gradle\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"compile\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-pg-client:3.8.0'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"compile\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-mysql-client:3.8.0'\"), \"\\n\")), mdx(\"p\", null, \"Then you are good to go!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Connect options\"), \"\\nPgConnectOptions connectOptions = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" PgConnectOptions()\\n  .setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"5432\"), \")\\n  .setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-host\\\"\"), \")\\n  .setDatabase(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-db\\\"\"), \")\\n  .setUser(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"user\\\"\"), \")\\n  .setPassword(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"secret\\\"\"), \");\\n\\nPgPool client = PgPool.pool(connectOptions, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" PoolOptions().setMaxSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"5\"), \"));\\n\\nclient.query(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id='julien'\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    RowSet result = ar.result();\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Got \\\"\"), \" + result.size() + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" rows \\\"\"), \");\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure: \\\"\"), \" + ar.cause().getMessage());\\n  }\\n});\\n\")), mdx(\"p\", null, \"Like\\xADwise you can achieve the same for MySQL:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"MySQLConnectOptions connectOptions = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MySQLConnectOptions()\\n  .setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"3306\"), \")\\n  .setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-host\\\"\"), \")\\n  .setDatabase(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"the-db\\\"\"), \")\\n  .setUser(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"user\\\"\"), \")\\n  .setPassword(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"secret\\\"\"), \");\\n\\nMySQLPool client = MySQLPool.pool(connectOptions, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" PoolOptions().setMaxSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"5\"), \"));\\n\\nclient.query(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT * FROM users WHERE id='julien'\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    RowSet result = ar.result();\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Got \\\"\"), \" + result.size() + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\" rows \\\"\"), \");\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failure: \\\"\"), \" + ar.cause().getMessage());\\n  }\\n});\\n\")), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Re\\xADac\\xADtive SQL Client\"), \" brings to you the next gen\\xADer\\xADa\\xADtion data\\xADbase ac\\xADcess, it is cer\\xADtainly the most ex\\xADcit\\xADing\\nthing hap\\xADpen\\xADing in the re\\xADac\\xADtive data\\xADbase ac\\xADcess space.\"), mdx(\"h2\", {\n    \"id\": \"future-api-improvements\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#future-api-improvements\"\n  })), \"Future API improvements\"), mdx(\"p\", null, \"In this re\\xADlease we up\\xADdated the Vert.x \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" in\\xADter\\xADface to ex\\xADpose com\\xADple\\xADtion meth\\xADods in a new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Promise\"), \" in\\xADter\\xADface.\"), mdx(\"p\", null, \"This im\\xADproves the de\\xADsign of the API of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" by hav\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Promise\"), \" being the write side of an asyn\\xADchro\\xADnous re\\xADsult\\nand the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" being its read side.\"), mdx(\"p\", null, \"While there is lit\\xADtle use for this in Vert.x 3.x, this has an im\\xADpact on Vert.x 4.\"), mdx(\"p\", null, \"Con\\xADse\\xADquently some method sig\\xADna\\xADtures have been changed to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Promise\"), \" in\\xADstead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Future\"), \" ex\\xADplained in this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes#future-creation-and-completion\"\n  }), \"page\"), \".\"), mdx(\"h2\", {\n    \"id\": \"upgrading-to-38\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#upgrading-to-38\"\n  })), \"Upgrading to 3.8\"), mdx(\"p\", null, \"Up\\xADgrad\\xADing to 3.8.0 might re\\xADquire a few changes in your ap\\xADpli\\xADca\\xADtion, you can read this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes#future-creation-and-completion\"\n  }), \"page\"), \" to un\\xADder\\xADstand the im\\xADpact of the\\n3.8 re\\xADlease on your ap\\xADpli\\xADca\\xADtion up\\xADgrade.\"), mdx(\"h2\", {\n    \"id\": \"and-more\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-more\"\n  })), \"And more\\u2026\"), mdx(\"p\", null, \"Here are some other im\\xADpor\\xADtant im\\xADprove\\xADments you can find in this re\\xADlease:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cas\\xADsan\\xADdra Client gets out of tech pre\\xADview\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jack\\xADson up\\xADgrade to 2.9.9 and data\\xADbind 2.9.9.1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And ob\\xADvi\\xADously we have the usual bug fixes!\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.0-Release-Notes\"\n  }), \"3.8.0 re\\xADlease notes\"), \" can be found on the wiki, as well as the\\nlist of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes\"\n  }), \"dep\\xADre\\xADca\\xADtions and break\\xADing changes\")), mdx(\"p\", null, \"Docker im\\xADages are avail\\xADable on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \".\"), mdx(\"p\", null, \"The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion can be down\\xADloaded on the web\\xADsite but is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge is avail\\xADable from:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"NPM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"Bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"We\\xADb\\xADJars\"))), mdx(\"p\", null, \"The re\\xADlease ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.8.0/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"That\\u2019s it! Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We are ex­tremely pleased to an­nounce that the Eclipse Vert.x ver­sion 3.8.0 has been re­leased.</p><p>This is an im­por­tant re­lease that in­tro­duces a few changes ramp­ing up to Vert.x 4 ex­pected by the end of this year.</p><h2 id=\"the-reactive-sql-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-reactive-sql-client\"></a>The Reactive SQL Client</h2><p>The client is the evo­lu­tion of the leg­endary <em>Re­ac­tive Post­greSQL Client</em> and pro­vides</p><ul><li>The Re­ac­tive Post­greSQL Client aka Vert.x Post­greSQL Client</li><li>The Re­ac­tive MySQL Client aka Vert.x MySQL Client</li></ul><p>These im­ple­men­ta­tions pro­vide real high per­for­mance non-​blocking ac­cess to Post­greSQL and MySQL.</p><p>To use these new mod­ules, add the fol­low­ing to the <em>de­pen­den­cies</em> sec­tion of your Maven POM file:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-pg-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-mysql-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Or, if you use Gra­dle:</p><pre><code class=\"hljs language-gradle\"><span class=\"hljs-keyword\">compile</span> <span class=\"hljs-string\">&#x27;io.vertx:vertx-pg-client:3.8.0&#x27;</span>\n<span class=\"hljs-keyword\">compile</span> <span class=\"hljs-string\">&#x27;io.vertx:vertx-mysql-client:3.8.0&#x27;</span>\n</code></pre><p>Then you are good to go!</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Connect options</span>\nPgConnectOptions connectOptions = <span class=\"hljs-keyword\">new</span> PgConnectOptions()\n  .setPort(<span class=\"hljs-number\">5432</span>)\n  .setHost(<span class=\"hljs-string\">&quot;the-host&quot;</span>)\n  .setDatabase(<span class=\"hljs-string\">&quot;the-db&quot;</span>)\n  .setUser(<span class=\"hljs-string\">&quot;user&quot;</span>)\n  .setPassword(<span class=\"hljs-string\">&quot;secret&quot;</span>);\n\nPgPool client = PgPool.pool(connectOptions, <span class=\"hljs-keyword\">new</span> PoolOptions().setMaxSize(<span class=\"hljs-number\">5</span>));\n\nclient.query(<span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=&#x27;julien&#x27;&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    RowSet result = ar.result();\n    System.out.println(<span class=\"hljs-string\">&quot;Got &quot;</span> + result.size() + <span class=\"hljs-string\">&quot; rows &quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failure: &quot;</span> + ar.cause().getMessage());\n  }\n});\n</code></pre><p>Like­wise you can achieve the same for MySQL:</p><pre><code class=\"hljs language-java\">MySQLConnectOptions connectOptions = <span class=\"hljs-keyword\">new</span> MySQLConnectOptions()\n  .setPort(<span class=\"hljs-number\">3306</span>)\n  .setHost(<span class=\"hljs-string\">&quot;the-host&quot;</span>)\n  .setDatabase(<span class=\"hljs-string\">&quot;the-db&quot;</span>)\n  .setUser(<span class=\"hljs-string\">&quot;user&quot;</span>)\n  .setPassword(<span class=\"hljs-string\">&quot;secret&quot;</span>);\n\nMySQLPool client = MySQLPool.pool(connectOptions, <span class=\"hljs-keyword\">new</span> PoolOptions().setMaxSize(<span class=\"hljs-number\">5</span>));\n\nclient.query(<span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id=&#x27;julien&#x27;&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    RowSet result = ar.result();\n    System.out.println(<span class=\"hljs-string\">&quot;Got &quot;</span> + result.size() + <span class=\"hljs-string\">&quot; rows &quot;</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failure: &quot;</span> + ar.cause().getMessage());\n  }\n});\n</code></pre><p>The <em>Re­ac­tive SQL Client</em> brings to you the next gen­er­a­tion data­base ac­cess, it is cer­tainly the most ex­cit­ing\nthing hap­pen­ing in the re­ac­tive data­base ac­cess space.</p><h2 id=\"future-api-improvements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#future-api-improvements\"></a>Future API improvements</h2><p>In this re­lease we up­dated the Vert.x <code>Future</code> in­ter­face to ex­pose com­ple­tion meth­ods in a new <code>Promise</code> in­ter­face.</p><p>This im­proves the de­sign of the API of <code>Future</code> by hav­ing <code>Promise</code> being the write side of an asyn­chro­nous re­sult\nand the <code>Future</code> being its read side.</p><p>While there is lit­tle use for this in Vert.x 3.x, this has an im­pact on Vert.x 4.</p><p>Con­se­quently some method sig­na­tures have been changed to use <code>Promise</code> in­stead of <code>Future</code> ex­plained in this <a href=\"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes#future-creation-and-completion\">page</a>.</p><h2 id=\"upgrading-to-38\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#upgrading-to-38\"></a>Upgrading to 3.8</h2><p>Up­grad­ing to 3.8.0 might re­quire a few changes in your ap­pli­ca­tion, you can read this <a href=\"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes#future-creation-and-completion\">page</a> to un­der­stand the im­pact of the\n3.8 re­lease on your ap­pli­ca­tion up­grade.</p><h2 id=\"and-more\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-more\"></a>And more…</h2><p>Here are some other im­por­tant im­prove­ments you can find in this re­lease:</p><ul><li>Cas­san­dra Client gets out of tech pre­view</li><li>Jack­son up­grade to 2.9.9 and data­bind 2.9.9.1</li><li>And ob­vi­ously we have the usual bug fixes!</li></ul><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The <a href=\"https://github.com/vert-x3/wiki/wiki/3.8.0-Release-Notes\">3.8.0 re­lease notes</a> can be found on the wiki, as well as the\nlist of <a href=\"https://github.com/vert-x3/wiki/wiki/3.8.0-Deprecations-and-breaking-changes\">dep­re­ca­tions and break­ing changes</a></p><p>Docker im­ages are avail­able on <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>.</p><p>The Vert.x dis­tri­b­u­tion can be down­loaded on the web­site but is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge is avail­able from:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">NPM</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">Bower</a></li><li><a href=\"http://www.webjars.org/\">We­b­Jars</a></li></ul><p>The re­lease ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.8.0/view\">Bin­tray</a>.</p><p>That’s it! Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"client","tf":10},{"term":"releas","tf":7},{"term":"reactiv","tf":6},{"term":"us","tf":5},{"term":"chang","tf":4},{"term":"postgresql","tf":4},{"term":"mysql","tf":4},{"term":"upgrad","tf":4},{"term":"access","tf":3},{"term":"improv","tf":3},{"term":"avail","tf":3},{"term":"import","tf":2},{"term":"sql","tf":2},{"term":"provid","tf":2},{"term":"aka","tf":2},{"term":"new","tf":2},{"term":"maven","tf":2},{"term":"databas","tf":2},{"term":"api","tf":2},{"term":"interfac","tf":2},{"term":"method","tf":2},{"term":"side","tf":2},{"term":"read","tf":2},{"term":"impact","tf":2},{"term":"page","tf":2}]}],"numPages":16},"__N_SSG":true}