{"pageProps":{"categories":["releases","guides","news"],"page":6,"posts":[{"filename":"blog/2018-07-13-eclipse-vert-x-3-5-3.mdx","date":"2018-07-13","slug":"eclipse-vert-x-3-5-3","meta":{"title":"Eclipse Vert.x 3.5.3","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.3, a bug fix release of Vert.x 3.5.x."},"readingTime":{"text":"1 min read","minutes":0.565,"time":33900,"words":113},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have just re\\xADleased Vert.x 3.5.3, a bug fix re\\xADlease of Vert.x 3.5.x.\"), mdx(\"p\", null, \"Since the re\\xADlease of Vert.x 3.5.2, quite a few bugs have been re\\xADported. We would like to thank you all for re\\xADport\\xADing these is\\xADsues.\"), mdx(\"p\", null, \"Vert.x 3.5.3 re\\xADlease notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.3-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.3-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.2%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.5.2/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"Happy cod\\xADing and see you soon on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We have just re­leased Vert.x 3.5.3, a bug fix re­lease of Vert.x 3.5.x.</p><p>Since the re­lease of Vert.x 3.5.2, quite a few bugs have been re­ported. We would like to thank you all for re­port­ing these is­sues.</p><p>Vert.x 3.5.3 re­lease notes:</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.3-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.5.3-​Release-Notes</a></li></ul><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.2%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.5.2/view\">Bin­tray</a>.</p><p>Happy cod­ing and see you soon on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"releas","tf":5},{"term":"http","tf":4},{"term":"com","tf":3},{"term":"avail","tf":3},{"term":"bug","tf":2},{"term":"report","tf":2},{"term":"note","tf":2},{"term":"github","tf":2},{"term":"x3","tf":2},{"term":"wiki","tf":2},{"term":"bu","tf":2},{"term":"client","tf":2},{"term":"bower","tf":2},{"term":"webjar","tf":2},{"term":"www","tf":2},{"term":"docker","tf":2},{"term":"distribut","tf":2},{"term":"just","tf":1},{"term":"fix","tf":1},{"term":"quit","tf":1},{"term":"thank","tf":1},{"term":"issu","tf":1},{"term":"event","tf":1},{"term":"us","tf":1},{"term":"sockj","tf":1}]},{"filename":"blog/2018-07-02-simplified-database-transaction-management-with-the-vert-x-rxjava-api.mdx","date":"2018-07-02","slug":"simplified-database-transaction-management-with-the-vert-x-rxjava-api","meta":{"title":"Simplified database transaction management with the Vert.x RxJava API","category":"guides","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"As of Vert.x 3.5, managing database transactions requires a lot of boilerplate code. Vert.x 3.6 provides helpers to easily make a reactive flow transactional."},"readingTime":{"text":"4 min read","minutes":3.235,"time":194100,"words":647},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"TL;DR As of 3.5, man\\xADag\\xADing data\\xADbase trans\\xADac\\xADtions with Vert.x re\\xADquires a lot of boil\\xADer\\xADplate code.\"), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vert.x 3.6 will pro\\xADvide helpers and \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"Observable\"), \" trans\\xADform\\xADers to eas\\xADily make a re\\xADac\\xADtive flow trans\\xADac\\xADtional.\")), mdx(\"h2\", {\n    \"id\": \"simple-queries-with-the-rxified-api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#simple-queries-with-the-rxified-api\"\n  })), \"Simple queries with the \", mdx(\"em\", {\n    parentName: \"h2\"\n  }, \"\\u201CRxified\\u201D\"), \" API\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-rx/java2/\"\n  }), \"Vert.x API for Rx\\xADJava\"), \" is one of the most pop\\xADu\\xADlar mod\\xADules in the Vert.x stack.\"), mdx(\"p\", null, \"So we make sure the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\u201CRx\\xADi\\xADfied\\u201D\"), \" API is easy to use for com\\xADmon pro\\xADgram\\xADming tasks, such as read\\xADing rows from a re\\xADla\\xADtional data\\xADbase and send\\xADing the re\\xADsult to the client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"dbClient.rxQuery(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT name, duration FROM tracks WHERE album = 'The Israelites'\\\"\"), \")\\n  .map(ResultSet::getResults)\\n  .map(rows -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Transform DB rows into a client-friendly JSON object\"), \"\\n  })\\n  .subscribe(json -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send JSON to the client\"), \"\\n  }, t -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send error to the client\"), \"\\n  });\\n\")), mdx(\"h2\", {\n    \"id\": \"managing-transactions-with-vertx-35\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#managing-transactions-with-vertx-35\"\n  })), \"Managing transactions with Vert.x 3.5\"), mdx(\"p\", null, \"But very often, de\\xADvel\\xADop\\xADers have to im\\xADple\\xADment com\\xADplex in\\xADter\\xADac\\xADtions with the data\\xADbase, run\\xADning in\\xADside a sin\\xADgle trans\\xADac\\xADtion.\\nTo do so, the im\\xADple\\xADmen\\xADta\\xADtion must fol\\xADlow this process:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"get a con\\xADnec\\xADtion from the pool,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"start a trans\\xADac\\xADtion,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ex\\xADe\\xADcute queries,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if all queries suc\\xADceed, com\\xADmit the trans\\xADac\\xADtion,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"oth\\xADer\\xADwise, roll\\xADback the changes.\")), mdx(\"p\", null, \"How does that trans\\xADlate to code?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Get a connection from the pool\"), \"\\ndbClient.rxGetConnection().flatMap(sqlConnection -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Setting auto-commit mode to false implicitely starts a transaction\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" sqlConnection.rxSetAutoCommit(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \")\\n    .andThen(\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Database queries\"), \"\\n      sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"), \")\\n        .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"), \"))\\n        .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"), \"))\\n        .andThen(sqlConnection.rxQuery(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"), \").map(ResultSet::getResults))\\n    )\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Commit if all queries succeed\"), \"\\n    .flatMap(rows -> sqlConnection.rxCommit().andThen(Single.just(rows)))\\n    .onErrorResumeNext(throwable -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// On error, rollback the changes\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" sqlConnection.rxRollback().onErrorComplete()\\n        .andThen(sqlConnection.rxSetAutoCommit(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"true\"), \").onErrorComplete())\\n        .andThen(Single.error(throwable));\\n    }).flatMap(rows -> sqlConnection.rxSetAutoCommit(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"true\"), \").andThen(Single.just(rows)))\\n    .doFinally(sqlConnection::close);\\n}).map(rows -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Transform DB rows into a client-friendly JSON object\"), \"\\n}).subscribe(json -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send JSON to the client\"), \"\\n}, t -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send error to the client\"), \"\\n});\\n\")), mdx(\"p\", null, \"That is a lot of boil\\xADer\\xADplate around the spe\\xADcific data\\xADbase queries\\u2026\\nIt would be bet\\xADter to re\\xADlieve the de\\xADvel\\xADoper from main\\xADtain\\xADing it.\"), mdx(\"h2\", {\n    \"id\": \"vertx-36-tools-for-transaction-management\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-36-tools-for-transaction-management\"\n  })), \"Vert.x 3.6 tools for transaction management\"), mdx(\"p\", null, \"That is why Vert.x 3.6 will pro\\xADvide \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"Observable\"), \" trans\\xADform\\xADers\"), \" that can be ap\\xADplied to re\\xADac\\xADtive flows with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://reactivex.io/RxJava/javadoc/io/reactivex/Flowable.html#compose-io.reactivex.FlowableTransformer-\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"compose\")), \" to make them trans\\xADac\\xADtional:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQLClientHelper#txFlowableTransformer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQLClientHelper#txObservableTransformer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQLClientHelper#txSingleTransformer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQLClientHelper#txMaybeTransformer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQLClientHelper#txCompletableTransformer\"))), mdx(\"p\", null, \"These \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"trans\\xADform\\xADers\"), \" wrap the cor\\xADre\\xADspond\\xADing source of events with SQL trans\\xADac\\xADtion man\\xADage\\xADment.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"dbClient.rxGetConnection().flatMap(sqlConnection -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"), \")\\n    .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"), \"))\\n    .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"), \"))\\n    .andThen(sqlConnection.rxQuery(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"), \").map(ResultSet::getResults))\\n    .compose(SQLClientHelper.txSingleTransformer(sqlConnection))\\n    .doFinally(sqlConnection::close);\\n}).map(rows -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Transform DB rows into a client-friendly JSON object\"), \"\\n}).subscribe(json -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send JSON to the client\"), \"\\n}, t -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send error to the client\"), \"\\n});\\n\")), mdx(\"p\", null, \"Source \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"trans\\xADform\\xADers\"), \" pro\\xADvide max\\xADi\\xADmum flex\\xADi\\xADbil\\xADity: you are still able to ex\\xADe\\xADcute op\\xADer\\xADa\\xADtions with the con\\xADnec\\xADtion after the trans\\xADac\\xADtion com\\xADpletes.\"), mdx(\"p\", null, \"How\\xADever, you usu\\xADally do not need the con\\xADnec\\xADtion after the changes are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"com\\xADmited\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"roll\\xADbacked\"), \".\\nIn this case, you may sim\\xADply cre\\xADate you source ob\\xADserv\\xADable with one of the trans\\xADac\\xADtional helper meth\\xADods in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx.reactivex.ext.sql.SQLClientHelper\"), \".\"), mdx(\"p\", null, \"Let\\u2019s rewrite the pre\\xADvi\\xADous ex\\xADam\\xADple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"SQLClientHelper.inTransactionSingle(client, sqlConnection -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO albums (name) VALUES ('The Israelites')\\\"\"), \")\\n    .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Israelites')\\\"\"), \"))\\n    .andThen(sqlConnection.rxExecute(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO tracks (album, name) VALUES ('The Israelites', 'Too Much Too Soon')\\\"\"), \"))\\n    .andThen(sqlConnection.rxQuery(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT name FROM tracks WHERE album = 'The Israelites'\\\"\"), \").map(ResultSet::getResults))\\n}).map(rows -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Transform DB rows into a client-friendly JSON object\"), \"\\n}).subscribe(json -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send JSON to the client\"), \"\\n}, t -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Send error to the client\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"give-it-a-try\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#give-it-a-try\"\n  })), \"Give it a try\"), mdx(\"p\", null, \"Vert.x 3.6 is ex\\xADpected around fall, but the code is al\\xADready in mas\\xADter and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"snap\\xADshots\"), \" are reg\\xADu\\xADlarly pub\\xADlished to Sonatype\\u2019s OSS repos.\"), mdx(\"p\", null, \"So give it a try and feel free to pro\\xADvide your fee\\xADback on our user or dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"chan\\xADnels\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><em>TL;DR As of 3.5, man­ag­ing data­base trans­ac­tions with Vert.x re­quires a lot of boil­er­plate code.</em>\n<em>Vert.x 3.6 will pro­vide helpers and <code>Observable</code> trans­form­ers to eas­ily make a re­ac­tive flow trans­ac­tional.</em></p><h2 id=\"simple-queries-with-the-rxified-api\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#simple-queries-with-the-rxified-api\"></a>Simple queries with the <em>“Rxified”</em> API</h2><p>The <a href=\"https://vertx.io/docs/vertx-rx/java2/\">Vert.x API for Rx­Java</a> is one of the most pop­u­lar mod­ules in the Vert.x stack.</p><p>So we make sure the <em>“Rx­i­fied”</em> API is easy to use for com­mon pro­gram­ming tasks, such as read­ing rows from a re­la­tional data­base and send­ing the re­sult to the client:</p><pre><code class=\"hljs language-java\">dbClient.rxQuery(<span class=\"hljs-string\">&quot;SELECT name, duration FROM tracks WHERE album = &#x27;The Israelites&#x27;&quot;</span>)\n  .map(ResultSet::getResults)\n  .map(rows -&gt; {\n    <span class=\"hljs-comment\">// Transform DB rows into a client-friendly JSON object</span>\n  })\n  .subscribe(json -&gt; {\n    <span class=\"hljs-comment\">// Send JSON to the client</span>\n  }, t -&gt; {\n    <span class=\"hljs-comment\">// Send error to the client</span>\n  });\n</code></pre><h2 id=\"managing-transactions-with-vertx-35\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#managing-transactions-with-vertx-35\"></a>Managing transactions with Vert.x 3.5</h2><p>But very often, de­vel­op­ers have to im­ple­ment com­plex in­ter­ac­tions with the data­base, run­ning in­side a sin­gle trans­ac­tion.\nTo do so, the im­ple­men­ta­tion must fol­low this process:</p><ul><li>get a con­nec­tion from the pool,</li><li>start a trans­ac­tion,</li><li>ex­e­cute queries,</li><li>if all queries suc­ceed, com­mit the trans­ac­tion,</li><li>oth­er­wise, roll­back the changes.</li></ul><p>How does that trans­late to code?</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Get a connection from the pool</span>\ndbClient.rxGetConnection().flatMap(sqlConnection -&gt; {\n  <span class=\"hljs-comment\">// Setting auto-commit mode to false implicitely starts a transaction</span>\n  <span class=\"hljs-keyword\">return</span> sqlConnection.rxSetAutoCommit(<span class=\"hljs-keyword\">false</span>)\n    .andThen(\n      <span class=\"hljs-comment\">// Database queries</span>\n      sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO albums (name) VALUES (&#x27;The Israelites&#x27;)&quot;</span>)\n        .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Israelites&#x27;)&quot;</span>))\n        .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Too Much Too Soon&#x27;)&quot;</span>))\n        .andThen(sqlConnection.rxQuery(<span class=\"hljs-string\">&quot;SELECT name FROM tracks WHERE album = &#x27;The Israelites&#x27;&quot;</span>).map(ResultSet::getResults))\n    )\n    <span class=\"hljs-comment\">// Commit if all queries succeed</span>\n    .flatMap(rows -&gt; sqlConnection.rxCommit().andThen(Single.just(rows)))\n    .onErrorResumeNext(throwable -&gt; {\n      <span class=\"hljs-comment\">// On error, rollback the changes</span>\n      <span class=\"hljs-keyword\">return</span> sqlConnection.rxRollback().onErrorComplete()\n        .andThen(sqlConnection.rxSetAutoCommit(<span class=\"hljs-keyword\">true</span>).onErrorComplete())\n        .andThen(Single.error(throwable));\n    }).flatMap(rows -&gt; sqlConnection.rxSetAutoCommit(<span class=\"hljs-keyword\">true</span>).andThen(Single.just(rows)))\n    .doFinally(sqlConnection::close);\n}).map(rows -&gt; {\n  <span class=\"hljs-comment\">// Transform DB rows into a client-friendly JSON object</span>\n}).subscribe(json -&gt; {\n  <span class=\"hljs-comment\">// Send JSON to the client</span>\n}, t -&gt; {\n  <span class=\"hljs-comment\">// Send error to the client</span>\n});\n</code></pre><p>That is a lot of boil­er­plate around the spe­cific data­base queries…\nIt would be bet­ter to re­lieve the de­vel­oper from main­tain­ing it.</p><h2 id=\"vertx-36-tools-for-transaction-management\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-36-tools-for-transaction-management\"></a>Vert.x 3.6 tools for transaction management</h2><p>That is why Vert.x 3.6 will pro­vide <em><code>Observable</code> trans­form­ers</em> that can be ap­plied to re­ac­tive flows with <a href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/Flowable.html#compose-io.reactivex.FlowableTransformer-\"><code>compose</code></a> to make them trans­ac­tional:</p><ul><li><code>SQLClientHelper#txFlowableTransformer</code></li><li><code>SQLClientHelper#txObservableTransformer</code></li><li><code>SQLClientHelper#txSingleTransformer</code></li><li><code>SQLClientHelper#txMaybeTransformer</code></li><li><code>SQLClientHelper#txCompletableTransformer</code></li></ul><p>These <em>trans­form­ers</em> wrap the cor­re­spond­ing source of events with SQL trans­ac­tion man­age­ment.</p><pre><code class=\"hljs language-java\">dbClient.rxGetConnection().flatMap(sqlConnection -&gt; {\n  <span class=\"hljs-keyword\">return</span> sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO albums (name) VALUES (&#x27;The Israelites&#x27;)&quot;</span>)\n    .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Israelites&#x27;)&quot;</span>))\n    .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Too Much Too Soon&#x27;)&quot;</span>))\n    .andThen(sqlConnection.rxQuery(<span class=\"hljs-string\">&quot;SELECT name FROM tracks WHERE album = &#x27;The Israelites&#x27;&quot;</span>).map(ResultSet::getResults))\n    .compose(SQLClientHelper.txSingleTransformer(sqlConnection))\n    .doFinally(sqlConnection::close);\n}).map(rows -&gt; {\n  <span class=\"hljs-comment\">// Transform DB rows into a client-friendly JSON object</span>\n}).subscribe(json -&gt; {\n  <span class=\"hljs-comment\">// Send JSON to the client</span>\n}, t -&gt; {\n  <span class=\"hljs-comment\">// Send error to the client</span>\n});\n</code></pre><p>Source <em>trans­form­ers</em> pro­vide max­i­mum flex­i­bil­ity: you are still able to ex­e­cute op­er­a­tions with the con­nec­tion after the trans­ac­tion com­pletes.</p><p>How­ever, you usu­ally do not need the con­nec­tion after the changes are <em>com­mited</em> or <em>roll­backed</em>.\nIn this case, you may sim­ply cre­ate you source ob­serv­able with one of the trans­ac­tional helper meth­ods in <code>io.vertx.reactivex.ext.sql.SQLClientHelper</code>.</p><p>Let’s rewrite the pre­vi­ous ex­am­ple:</p><pre><code class=\"hljs language-java\">SQLClientHelper.inTransactionSingle(client, sqlConnection -&gt; {\n  <span class=\"hljs-keyword\">return</span> sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO albums (name) VALUES (&#x27;The Israelites&#x27;)&quot;</span>)\n    .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Israelites&#x27;)&quot;</span>))\n    .andThen(sqlConnection.rxExecute(<span class=\"hljs-string\">&quot;INSERT INTO tracks (album, name) VALUES (&#x27;The Israelites&#x27;, &#x27;Too Much Too Soon&#x27;)&quot;</span>))\n    .andThen(sqlConnection.rxQuery(<span class=\"hljs-string\">&quot;SELECT name FROM tracks WHERE album = &#x27;The Israelites&#x27;&quot;</span>).map(ResultSet::getResults))\n}).map(rows -&gt; {\n  <span class=\"hljs-comment\">// Transform DB rows into a client-friendly JSON object</span>\n}).subscribe(json -&gt; {\n  <span class=\"hljs-comment\">// Send JSON to the client</span>\n}, t -&gt; {\n  <span class=\"hljs-comment\">// Send error to the client</span>\n});\n</code></pre><h2 id=\"give-it-a-try\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#give-it-a-try\"></a>Give it a try</h2><p>Vert.x 3.6 is ex­pected around fall, but the code is al­ready in mas­ter and <em>snap­shots</em> are reg­u­larly pub­lished to Sonatype’s OSS repos.</p><p>So give it a try and feel free to pro­vide your fee­back on our user or dev <a href=\"https://vertx.io/community\">chan­nels</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"transact","tf":11},{"term":"manag","tf":4},{"term":"databas","tf":4},{"term":"provid","tf":4},{"term":"transform","tf":4},{"term":"queri","tf":4},{"term":"code","tf":3},{"term":"api","tf":3},{"term":"connect","tf":3},{"term":"sourc","tf":3},{"term":"lot","tf":2},{"term":"boilerpl","tf":2},{"term":"will","tf":2},{"term":"helper","tf":2},{"term":"reactiv","tf":2},{"term":"flow","tf":2},{"term":"rxifi","tf":2},{"term":"on","tf":2},{"term":"develop","tf":2},{"term":"implement","tf":2},{"term":"execut","tf":2},{"term":"commit","tf":2},{"term":"rollback","tf":2},{"term":"chang","tf":2},{"term":"around","tf":2}]},{"filename":"blog/2018-06-08-eclipse-vert-x-3-5-2.mdx","date":"2018-06-08","slug":"eclipse-vert-x-3-5-2","meta":{"title":"Eclipse Vert.x 3.5.2","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"We have just released Vert.x 3.5.2, a bug fix release of Vert.x 3.5.x."},"readingTime":{"text":"1 min read","minutes":0.52,"time":31200.000000000004,"words":104},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have just re\\xADleased Vert.x 3.5.2, a bug fix re\\xADlease of Vert.x 3.5.x.\"), mdx(\"p\", null, \"Since the re\\xADlease of Vert.x 3.5.1, quite a few bugs have been re\\xADported. We would like to thank you all for re\\xADport\\xADing these is\\xADsues.\"), mdx(\"p\", null, \"Vert.x 3.5.2 re\\xADlease notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.2-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.2-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.2%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.5.2/view\"\n  }), \"Bin\\xADtray\"), \".\"), mdx(\"p\", null, \"Happy cod\\xADing !\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>We have just re­leased Vert.x 3.5.2, a bug fix re­lease of Vert.x 3.5.x.</p><p>Since the re­lease of Vert.x 3.5.1, quite a few bugs have been re­ported. We would like to thank you all for re­port­ing these is­sues.</p><p>Vert.x 3.5.2 re­lease notes:</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.2-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.5.2-​Release-Notes</a></li></ul><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able from <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.2%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.5.2/view\">Bin­tray</a>.</p><p>Happy cod­ing !</p>","scope":{}},"tfIdfTerms":[{"term":"releas","tf":5},{"term":"http","tf":4},{"term":"com","tf":3},{"term":"avail","tf":3},{"term":"bug","tf":2},{"term":"report","tf":2},{"term":"note","tf":2},{"term":"github","tf":2},{"term":"x3","tf":2},{"term":"wiki","tf":2},{"term":"bu","tf":2},{"term":"client","tf":2},{"term":"bower","tf":2},{"term":"webjar","tf":2},{"term":"www","tf":2},{"term":"docker","tf":2},{"term":"distribut","tf":2},{"term":"just","tf":1},{"term":"fix","tf":1},{"term":"quit","tf":1},{"term":"thank","tf":1},{"term":"issu","tf":1},{"term":"event","tf":1},{"term":"us","tf":1},{"term":"sockj","tf":1}]},{"filename":"blog/2018-06-04-eclipse-vert-x-goes-native.mdx","date":"2018-06-04","slug":"eclipse-vert-x-goes-native","meta":{"title":"Eclipse Vert.x goes Native","category":"guides","authors":[{"name":"Johannes Schüth","github_id":"jotschi"}],"summary":"This blog post introduces native image generation of Vert.x applications with GraalVM. Generated executables can be run without a JVM."},"readingTime":{"text":"5 min read","minutes":4.235,"time":254100.00000000003,"words":847},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I this blog post, I would like to give you a pre\\xADview on na\\xADtive image gen\\xADer\\xADa\\xADtion of Vert.x ap\\xADpli\\xADca\\xADtions using GraalVM.\"), mdx(\"p\", null, \"With \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM\"), \" it is pos\\xADsi\\xADble to gen\\xADer\\xADate na\\xADtive ex\\xADe\\xADcuta\\xADbles.\\nThese ex\\xADe\\xADcuta\\xADbles can be di\\xADrectly run with\\xADout the need of an in\\xADstalled JVM.\"), mdx(\"h2\", {\n    \"id\": \"benefits\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#benefits\"\n  })), \"Benefits\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The start up time is way faster. It is no longer re\\xADquired to wait for the start up of the JVM. The ap\\xADpli\\xADca\\xADtion is usu\\xADally up and run\\xADning in a mat\\xADter of mil\\xADlisec\\xADonds.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Re\\xADduced mem\\xADory foot\\xADprint. I mea\\xADsured 40 MB mem\\xADory usage (RSS) for the Vert.x Web ap\\xADpli\\xADca\\xADtion which I\\u2019m going to show\\xADcase.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smaller Con\\xADtain\\xADers. No JVM means no over\\xADhead. All the needed parts are al\\xADready con\\xADtained within the ex\\xADe\\xADcutable. This can be very ben\\xADe\\xADfi\\xADcial when build\\xADing de\\xADploy\\xADable con\\xADtainer im\\xADages.\"))), mdx(\"h2\", {\n    \"id\": \"demo-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#demo-project\"\n  })), \"Demo Project\"), mdx(\"p\", null, \"For the demo ap\\xADpli\\xADca\\xADtion I choose a very basic hello world \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/vertx-web/java/\"\n  }), \"Vert.x Web\"), \" server.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"package\"), \" de.jotschi.examples;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" java.io.File;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.Vertx;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.Logger;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.LoggerFactory;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.logging.SLF4JLogDelegateFactory;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.ext.web.Router;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Runner\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(String[] args)\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Use logback for logging\"), \"\\n    File logbackFile = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" File(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"config\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"logback.xml\\\"\"), \");\\n    System.setProperty(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"logback.configurationFile\\\"\"), \", logbackFile.getAbsolutePath());\\n    System.setProperty(LoggerFactory.LOGGER_DELEGATE_FACTORY_CLASS_NAME, SLF4JLogDelegateFactory.class.getName());\\n    Logger log = LoggerFactory.getLogger(Runner.class);\\n\\n    // Setup the http server\\n    log.info(\\\"Starting server \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \": http://localhost:\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \"/hello\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n    Vertx vertx = Vertx.vertx();\\n    Router router = Router.router(vertx);\\n\\n    router.route(\\\"\"), \"/hello\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\").handler(rc -> {\\n      log.info(\\\"\"), \"Got hello request\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n      rc.response().end(\\\"\"), \"World\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\");\\n    });\\n\\n    vertx.createHttpServer()\\n      .requestHandler(router::accept)\\n      .listen(8080);\\n\\n  }\\n\\n}\\n\"))), mdx(\"h2\", {\n    \"id\": \"graalvm\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#graalvm\"\n  })), \"GraalVM\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM\"), \" runs a sta\\xADtic analy\\xADsis on the gen\\xADer\\xADated ap\\xADpli\\xADca\\xADtion in order to find the reach\\xADable code.\\nThis process which is run within the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/tree/master/substratevm\"\n  }), \"Sub\\xADstrate VM\"), \" will lead to the gen\\xADer\\xADa\\xADtion of the na\\xADtive image.\"), mdx(\"h3\", {\n    \"id\": \"limitations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#limitations\"\n  })), \"Limitations\"), mdx(\"p\", null, \"Due to the na\\xADture of the sta\\xADtic analy\\xADsis Sub\\xADstrate VM also has some \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md\"\n  }), \"lim\\xADi\\xADta\\xADtions\"), \".\"), mdx(\"p\", null, \"Dy\\xADnamic class load\\xADing and un\\xADload\\xADing for ex\\xADam\\xADple is not sup\\xADported be\\xADcause this would in essence alter the avail\\xADable code dur\\xADing run\\xADtime. \"), mdx(\"p\", null, \"Re\\xADflec\\xADtion is only par\\xADtially sup\\xADported and re\\xADquires some man\\xADual steps which we will cover later on.\"), mdx(\"h3\", {\n    \"id\": \"patches--workarounds\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#patches--workarounds\"\n  })), \"Patches / Workarounds\"), mdx(Alert, {\n    info: true,\n    title: \"Work in progress\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Next we need to apply some patches / workarounds. Keep in mind that na\\xADtive image gen\\xADer\\xADa\\xADtion is a fairly new topic and the these workarounds will hope\\xADfully no longer be re\\xADquired once the Sub\\xADstrate VM and Netty have bet\\xADter sup\\xADport for each other.\")), mdx(\"p\", null, \"I did not man\\xADage to get na\\xADtive epoll, kqueue and SSL in\\xADte\\xADgra\\xADtion to work with na\\xADtive im\\xADages.\\nThese parts are heav\\xADily op\\xADti\\xADmized within Netty and use JNI to di\\xADrectly ac\\xADcess the OS fea\\xADtures.\\nSub\\xADstrate VM sup\\xADports JNI and could in the\\xADory in\\xADte\\xADgrate these na\\xADtive li\\xADbraries. \"), mdx(\"p\", null, \"I cre\\xADated a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graalvm-native-image-test/tree/netty-native-epoll\"\n  }), \"re\\xADpro\\xADducer\"), \"\\nand an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/oracle/graal/issues/442\"\n  }), \"issue\"), \" so hope\\xADfully these prob\\xADlems can be ad\\xADdressed soon.\"), mdx(\"h3\", {\n    \"id\": \"vertx-transport\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-transport\"\n  })), \"Vert.x Transport\"), mdx(\"p\", null, \"First I needed to patch the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx.core.net.impl.transport.Transport\"), \" class in order to pre\\xADvent the load\\xADing of EPoll and KQueue na\\xADtive sup\\xADport. Oth\\xADer\\xADwise Sub\\xADstrate VM will try to load these classes and fail.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"Transport\"), \" \"), \"{\\n\\u2026\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"/**\\n   * The native transport, it may be {\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-doctag\"\n  }), \"@code\"), \" null} or failed.\\n   */\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"static\"), \" Transport \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"nativeTransport\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Patched: I remove the native transport discovery. \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The imports would be picked up by substrate \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// and cause further issues. \"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \";\\n  }\\n\\u2026\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"netty-ssl\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#netty-ssl\"\n  })), \"Netty SSL\"), mdx(\"p\", null, \"Na\\xADtive SSL sup\\xADport is an\\xADother prob\\xADlem\\xADatic area. I cre\\xADated a patched dummy \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.netty.handler.ssl.ReferenceCountedOpenSslEngine\"), \" class in order to pre\\xADvent Sub\\xADstrate VM from dig\\xADging deeper into the SSL code of Netty.\"), mdx(\"p\", null, \"Next we need to set up the re\\xADflec\\xADtion con\\xADfig\\xADu\\xADra\\xADtion within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reflectconfigs/netty.json\"), \".\"), mdx(\"p\", null, \"Netty uses re\\xADflec\\xADtion to in\\xADstan\\xADti\\xADate the socket chan\\xADnels. This is done in the Re\\xADflec\\xADtiveChan\\xADnelFac\\xADtory. We need to tell Sub\\xADstrate VM how classes of type NioServer\\xADSock\\xADetChan\\xADnel  and NioSock\\xADetChan\\xADnel can be in\\xADstan\\xADti\\xADated. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-json\"\n  }), \"[\\n  {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.netty.channel.socket.nio.NioSocketChannel\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"methods\\\"\"), \" : [\\n      { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<init>\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"parameterTypes\\\"\"), \" : [] }\\n    ]\\n  },\\n  {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.netty.channel.socket.nio.NioServerSocketChannel\\\"\"), \",\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"methods\\\"\"), \" : [\\n      { \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"name\\\"\"), \" : \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"<init>\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"\\\"parameterTypes\\\"\"), \" : [] }\\n    ]\\n  }\\n]\\n\")), mdx(\"p\", null, \"If you want to learn more about the state of Netty and GraalVM I can rec\\xADom\\xADmend this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692\"\n  }), \"GraalVM Blog\\xADpost\"), \" by Co\\xADdrut Stancu.\"), mdx(\"h2\", {\n    \"id\": \"building\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#building\"\n  })), \"Building\"), mdx(\"p\", null, \"Fi\\xADnally we can build our maven project to gen\\xADer\\xADate a shaded jar.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"mvn clean package\\n\")), mdx(\"p\", null, \"Next we need the GraalVM pack\\xADage. You can down\\xADload it from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.graalvm.org/\"\n  }), \"GraalVM web\\xADsite\"), \".\"), mdx(\"p\", null, \"We use the shaded jar as the input source for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"native-image\"), \" com\\xADmand which will gen\\xADer\\xADate the ex\\xADe\\xADcutable.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-variable\"\n  }), \"$GRAALVMDIR\"), \"/bin/native-image \\\\\\n --verbose \\\\\\n --no-server \\\\\\n -Dio.netty.noUnsafe=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-literal\"\n  }), \"true\"), \"  \\\\\\n -H:ReflectionConfigurationFiles=./reflectconfigs/netty.json \\\\\\n -H:+ReportUnsupportedElementsAtRuntime \\\\\\n -Dfile.encoding=UTF-8 \\\\\\n -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar\\n\")), mdx(\"h2\", {\n    \"id\": \"result\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#result\"\n  })), \"Result\"), mdx(\"p\", null, \"Fi\\xADnally we end up with an 27 MB \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-graalvm-native-image-test-0.0.1-SNAPSHOT\"), \" ex\\xADe\\xADcutable which we can run.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"$ ldd vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \\n  linux-vdso.so.1 (0x00007ffc65be8000)\\n  libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8e892f0000)\\n  libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8e890d3000)\\n  libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8e88eb9000)\\n  librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8e88cb1000)\\n  libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8e88a79000)\\n  libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8e886da000)\\n  /lib64/ld-linux-x86-64.so.2 (0x00007f8e8afb7000)\\n\")), mdx(\"h3\", {\n    \"id\": \"memory\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#memory\"\n  })), \"Memory\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-bash\"\n  }), \"/usr/bin/time -f \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\\nmaxRSS\\\\t%MkB\\\"\"), \" java -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar \\n/usr/bin/time -f \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\\nmaxRSS\\\\t%MkB\\\"\"), \" ./vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Na\\xADtive Image: 40 MB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java 10: 125 MB\")), mdx(\"p\", null, \"The full project can be found on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Jotschi/vertx-graalvm-native-image-test\"\n  }), \"GitHub\"), \".\"), mdx(\"p\", null, \"If you want to read more on the topic I can also rec\\xADom\\xADmend \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://sites.google.com/a/athaydes.com/renato-athaydes/posts/a7mbnative-imagejavaappthatrunsin30msandusesonly4mbofram\"\n  }), \"this ar\\xADti\\xADcle\"), \" by Re\\xADnato Athay\\xADdes in which he demon\\xADstrates how to cre\\xADate a very small light weight low mem\\xADory ap\\xADpli\\xADca\\xADtion using GraalVM.\"), mdx(\"p\", null, \"Thanks for read\\xADing. If you have any fur\\xADther ques\\xADtions or feed\\xADback don\\u2019t hes\\xADi\\xADtate to send me a tweet to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/Jotschi/\"\n  }), \"@Jotschi\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I this blog post, I would like to give you a pre­view on na­tive image gen­er­a­tion of Vert.x ap­pli­ca­tions using GraalVM.</p><p>With <a href=\"https://www.graalvm.org/\">GraalVM</a> it is pos­si­ble to gen­er­ate na­tive ex­e­cuta­bles.\nThese ex­e­cuta­bles can be di­rectly run with­out the need of an in­stalled JVM.</p><h2 id=\"benefits\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#benefits\"></a>Benefits</h2><ul><li><p>The start up time is way faster. It is no longer re­quired to wait for the start up of the JVM. The ap­pli­ca­tion is usu­ally up and run­ning in a mat­ter of mil­lisec­onds.</p></li><li><p>Re­duced mem­ory foot­print. I mea­sured 40 MB mem­ory usage (RSS) for the Vert.x Web ap­pli­ca­tion which I’m going to show­case.</p></li><li><p>Smaller Con­tain­ers. No JVM means no over­head. All the needed parts are al­ready con­tained within the ex­e­cutable. This can be very ben­e­fi­cial when build­ing de­ploy­able con­tainer im­ages.</p></li></ul><h2 id=\"demo-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#demo-project\"></a>Demo Project</h2><p>For the demo ap­pli­ca­tion I choose a very basic hello world <a href=\"https://vertx.io/docs/vertx-web/java/\">Vert.x Web</a> server.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">package</span> de.jotschi.examples;\n\n<span class=\"hljs-keyword\">import</span> java.io.File;\n\n<span class=\"hljs-keyword\">import</span> io.vertx.core.Vertx;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.Logger;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.LoggerFactory;\n<span class=\"hljs-keyword\">import</span> io.vertx.core.logging.SLF4JLogDelegateFactory;\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Runner</span> </span>{\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n    <span class=\"hljs-comment\">// Use logback for logging</span>\n    File logbackFile = <span class=\"hljs-keyword\">new</span> File(<span class=\"hljs-string\">&quot;config&quot;</span>, <span class=\"hljs-string\">&quot;logback.xml&quot;</span>);\n    System.setProperty(<span class=\"hljs-string\">&quot;logback.configurationFile&quot;</span>, logbackFile.getAbsolutePath());\n    System.setProperty(LoggerFactory.LOGGER_DELEGATE_FACTORY_CLASS_NAME, SLF4JLogDelegateFactory.class.getName());\n    Logger log = LoggerFactory.getLogger(Runner.class);\n\n    // Setup the http server\n    log.info(&quot;Starting server <span class=\"hljs-keyword\">for</span>: http://localhost:<span class=\"hljs-number\">8080</span>/hello<span class=\"hljs-string\">&quot;);\n    Vertx vertx = Vertx.vertx();\n    Router router = Router.router(vertx);\n\n    router.route(&quot;</span>/hello<span class=\"hljs-string\">&quot;).handler(rc -&gt; {\n      log.info(&quot;</span>Got hello request<span class=\"hljs-string\">&quot;);\n      rc.response().end(&quot;</span>World<span class=\"hljs-string\">&quot;);\n    });\n\n    vertx.createHttpServer()\n      .requestHandler(router::accept)\n      .listen(8080);\n\n  }\n\n}\n</span></code></pre><h2 id=\"graalvm\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#graalvm\"></a>GraalVM</h2><p><a href=\"https://www.graalvm.org/\">GraalVM</a> runs a sta­tic analy­sis on the gen­er­ated ap­pli­ca­tion in order to find the reach­able code.\nThis process which is run within the <a href=\"https://github.com/oracle/graal/tree/master/substratevm\">Sub­strate VM</a> will lead to the gen­er­a­tion of the na­tive image.</p><h3 id=\"limitations\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#limitations\"></a>Limitations</h3><p>Due to the na­ture of the sta­tic analy­sis Sub­strate VM also has some <a href=\"https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md\">lim­i­ta­tions</a>.</p><p>Dy­namic class load­ing and un­load­ing for ex­am­ple is not sup­ported be­cause this would in essence alter the avail­able code dur­ing run­time. </p><p>Re­flec­tion is only par­tially sup­ported and re­quires some man­ual steps which we will cover later on.</p><h3 id=\"patches--workarounds\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#patches--workarounds\"></a>Patches / Workarounds</h3><div class=\"alert info\"><div class=\"alert-title\">Work in progress</div><p>Next we need to apply some patches / workarounds. Keep in mind that na­tive image gen­er­a­tion is a fairly new topic and the these workarounds will hope­fully no longer be re­quired once the Sub­strate VM and Netty have bet­ter sup­port for each other.</p></div><p>I did not man­age to get na­tive epoll, kqueue and SSL in­te­gra­tion to work with na­tive im­ages.\nThese parts are heav­ily op­ti­mized within Netty and use JNI to di­rectly ac­cess the OS fea­tures.\nSub­strate VM sup­ports JNI and could in the­ory in­te­grate these na­tive li­braries. </p><p>I cre­ated a <a href=\"https://github.com/Jotschi/vertx-graalvm-native-image-test/tree/netty-native-epoll\">re­pro­ducer</a>\nand an <a href=\"https://github.com/oracle/graal/issues/442\">issue</a> so hope­fully these prob­lems can be ad­dressed soon.</p><h3 id=\"vertx-transport\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-transport\"></a>Vert.x Transport</h3><p>First I needed to patch the <code>io.vertx.core.net.impl.transport.Transport</code> class in order to pre­vent the load­ing of EPoll and KQueue na­tive sup­port. Oth­er­wise Sub­strate VM will try to load these classes and fail.</p><pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Transport</span> </span>{\n…\n  <span class=\"hljs-comment\">/**\n   * The native transport, it may be {<span class=\"hljs-doctag\">@code</span> null} or failed.\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Transport <span class=\"hljs-title\">nativeTransport</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-comment\">// Patched: I remove the native transport discovery. </span>\n    <span class=\"hljs-comment\">// The imports would be picked up by substrate </span>\n    <span class=\"hljs-comment\">// and cause further issues. </span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\n  }\n…\n}\n</code></pre><h3 id=\"netty-ssl\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#netty-ssl\"></a>Netty SSL</h3><p>Na­tive SSL sup­port is an­other prob­lem­atic area. I cre­ated a patched dummy <code>io.netty.handler.ssl.ReferenceCountedOpenSslEngine</code> class in order to pre­vent Sub­strate VM from dig­ging deeper into the SSL code of Netty.</p><p>Next we need to set up the re­flec­tion con­fig­u­ra­tion within <code>reflectconfigs/netty.json</code>.</p><p>Netty uses re­flec­tion to in­stan­ti­ate the socket chan­nels. This is done in the Re­flec­tiveChan­nelFac­tory. We need to tell Sub­strate VM how classes of type NioServer­Sock­etChan­nel  and NioSock­etChan­nel can be in­stan­ti­ated. </p><pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;io.netty.channel.socket.nio.NioSocketChannel&quot;</span>,\n    <span class=\"hljs-attr\">&quot;methods&quot;</span> : [\n      { <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;&lt;init&gt;&quot;</span>, <span class=\"hljs-attr\">&quot;parameterTypes&quot;</span> : [] }\n    ]\n  },\n  {\n    <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;io.netty.channel.socket.nio.NioServerSocketChannel&quot;</span>,\n    <span class=\"hljs-attr\">&quot;methods&quot;</span> : [\n      { <span class=\"hljs-attr\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;&lt;init&gt;&quot;</span>, <span class=\"hljs-attr\">&quot;parameterTypes&quot;</span> : [] }\n    ]\n  }\n]\n</code></pre><p>If you want to learn more about the state of Netty and GraalVM I can rec­om­mend this <a href=\"https://medium.com/graalvm/instant-netty-startup-using-graalvm-native-image-generation-ed6f14ff7692\">GraalVM Blog­post</a> by Co­drut Stancu.</p><h2 id=\"building\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#building\"></a>Building</h2><p>Fi­nally we can build our maven project to gen­er­ate a shaded jar.</p><pre><code class=\"hljs language-bash\">mvn clean package\n</code></pre><p>Next we need the GraalVM pack­age. You can down­load it from the <a href=\"https://www.graalvm.org/\">GraalVM web­site</a>.</p><p>We use the shaded jar as the input source for the <code>native-image</code> com­mand which will gen­er­ate the ex­e­cutable.</p><pre><code class=\"hljs language-bash\"><span class=\"hljs-variable\">$GRAALVMDIR</span>/bin/native-image \\\n --verbose \\\n --no-server \\\n -Dio.netty.noUnsafe=<span class=\"hljs-literal\">true</span>  \\\n -H:ReflectionConfigurationFiles=./reflectconfigs/netty.json \\\n -H:+ReportUnsupportedElementsAtRuntime \\\n -Dfile.encoding=UTF-8 \\\n -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar\n</code></pre><h2 id=\"result\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#result\"></a>Result</h2><p>Fi­nally we end up with an 27 MB <code>vertx-graalvm-native-image-test-0.0.1-SNAPSHOT</code> ex­e­cutable which we can run.</p><pre><code class=\"hljs language-bash\">$ ldd vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n  linux-vdso.so.1 (0x00007ffc65be8000)\n  libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8e892f0000)\n  libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8e890d3000)\n  libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f8e88eb9000)\n  librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8e88cb1000)\n  libcrypt.so.1 =&gt; /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8e88a79000)\n  libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8e886da000)\n  /lib64/ld-linux-x86-64.so.2 (0x00007f8e8afb7000)\n</code></pre><h3 id=\"memory\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#memory\"></a>Memory</h3><pre><code class=\"hljs language-bash\">/usr/bin/time -f <span class=\"hljs-string\">&quot;\\nmaxRSS\\t%MkB&quot;</span> java -jar target/vertx-graalvm-native-image-test-0.0.1-SNAPSHOT.jar \n/usr/bin/time -f <span class=\"hljs-string\">&quot;\\nmaxRSS\\t%MkB&quot;</span> ./vertx-graalvm-native-image-test-0.0.1-SNAPSHOT \n</code></pre><ul><li>Na­tive Image: 40 MB</li><li>Java 10: 125 MB</li></ul><p>The full project can be found on <a href=\"https://github.com/Jotschi/vertx-graalvm-native-image-test\">GitHub</a>.</p><p>If you want to read more on the topic I can also rec­om­mend <a href=\"https://sites.google.com/a/athaydes.com/renato-athaydes/posts/a7mbnative-imagejavaappthatrunsin30msandusesonly4mbofram\">this ar­ti­cle</a> by Re­nato Athay­des in which he demon­strates how to cre­ate a very small light weight low mem­ory ap­pli­ca­tion using GraalVM.</p><p>Thanks for read­ing. If you have any fur­ther ques­tions or feed­back don’t hes­i­tate to send me a tweet to <a href=\"https://twitter.com/Jotschi/\">@Jotschi</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"nativ","tf":10},{"term":"graalvm","tf":9},{"term":"gener","tf":7},{"term":"need","tf":7},{"term":"substrat","tf":7},{"term":"vm","tf":7},{"term":"imag","tf":6},{"term":"applic","tf":6},{"term":"support","tf":6},{"term":"netti","tf":6},{"term":"us","tf":5},{"term":"execut","tf":5},{"term":"run","tf":5},{"term":"will","tf":5},{"term":"class","tf":5},{"term":"no","tf":4},{"term":"memori","tf":4},{"term":"mb","tf":4},{"term":"within","tf":4},{"term":"patch","tf":4},{"term":"ssl","tf":4},{"term":"jvm","tf":3},{"term":"requir","tf":3},{"term":"contain","tf":3},{"term":"build","tf":3}]},{"filename":"blog/2018-04-23-eclipse-vert-x-rabbitmq-client-gets-a-new-consumer-api.mdx","date":"2018-04-23","slug":"eclipse-vert-x-rabbitmq-client-gets-a-new-consumer-api","meta":{"title":"Eclipse Vert.x RabbitMQ client gets a new consumer API!","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this blog post, we present the new consumer API of the RabbitMQ client that will be released with Eclipse Vert.x 3.6.0."},"readingTime":{"text":"3 min read","minutes":2.245,"time":134700.00000000003,"words":449},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In Eclipse Vert.x 3.6.0, the Rab\\xADbitMQ client will get a new con\\xADsumer API. In this post we are going to show\\nthe im\\xADprove\\xADments since the pre\\xADvi\\xADous API and how easy it is to use now.\"), mdx(\"p\", null, \"Be\\xADfore dig\\xADging into the new API let\\u2019s find out what were the lim\\xADi\\xADta\\xADtions of the ac\\xADtual one:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The API uses the event bus in such lim\\xADit\\xADing the con\\xADtrol of the con\\xADsumer over the Rab\\xADbitMQ queue.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The mes\\xADsage API is based on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"JsonObject\"), \" which does not pro\\xADvide a typed API\")), mdx(\"h2\", {\n    \"id\": \"the-new-api-at-a-glance\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#the-new-api-at-a-glance\"\n  })), \"The new API at a glance\"), mdx(\"p\", null, \"Here is how sim\\xADple queue con\\xADsump\\xADtion looks like with the new API:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RabbitMQClient client = RabbitMQClient.create(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RabbitMQOptions());\\n\\nclient.basicConsumer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my.queue\\\"\"), \", res -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (res.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"RabbitMQ consumer created !\\\"\"), \");\\n    RabbitMQConsumer mqConsumer = res.result();\\n    mqConsumer.handler((RabbitMQMessage message) -> {\\n        System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Got message: \\\"\"), \" + message.body().toString());\\n    });\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Oups something went wrong\"), \"\\n    res.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"Now to cre\\xADate a queue you sim\\xADply call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"basicConsumer\"), \" method and you ob\\xADtain asyn\\xADchro\\xADnously\\na \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RabbitMQConsumer\"), \".\"), mdx(\"p\", null, \"Then you need to pro\\xADvide a han\\xADdler called for each mes\\xADsage con\\xADsumed via \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Rab\\xADbit\\xADMQ\\xADCon\\xADsumer#han\\xADdler\"), \" which\\nis the id\\xADiomatic way to con\\xADsumer stream in Vert.x\"), mdx(\"p\", null, \"You may also note that when we a mes\\xADsage ar\\xADrives, it has the type of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RabbitMQMessage\"), \", this is a typed\\nmes\\xADsage rep\\xADre\\xADsen\\xADta\\xADtion.\"), mdx(\"p\", null, \"Since \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RabbitMQConsumer\"), \" is a stream, you also al\\xADlowed to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pause\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resume\"), \" the stream, sub\\xADscribe to the\\nend event, get no\\xADti\\xADfied when an ex\\xADcep\\xADtion oc\\xADcurs.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion, you can can\\xADcel the sub\\xADscrip\\xADtion by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RabbitMQConsumer#cancel\"), \" method.\"), mdx(\"h2\", {\n    \"id\": \"backpressure\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#backpressure\"\n  })), \"Backpressure\"), mdx(\"p\", null, \"Some\\xADtimes you can have more in\\xADcom\\xADing mes\\xADsages than you can han\\xADdle.\"), mdx(\"p\", null, \"The new con\\xADsumer API al\\xADlows you to con\\xADtrol this and lets you store ar\\xADrived mes\\xADsages in the in\\xADter\\xADnal queue\\nbe\\xADfore they are de\\xADliv\\xADered to the ap\\xADpli\\xADca\\xADtion. In\\xADdeed, you can con\\xADfig\\xADure the queue size.\"), mdx(\"p\", null, \"Here is how you can limit the in\\xADter\\xADnal queue size:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Limit to max 300 messages\"), \"\\nQueueOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" QueueOptions()\\n  .setMaxInternalQueueSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"300\"), \");\\n\\nRabbitMQClient client = RabbitMQClient.create(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" RabbitMQOptions());\\n\\nclient.basicConsumer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"my.queue\\\"\"), \", options, res -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (res.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"RabbitMQ consumer created !\\\"\"), \");\\n    RabbitMQConsumer mqConsumer = res.result();\\n    mqConsumer.handler((RabbitMQMessage message) -> {\\n      System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Got message: \\\"\"), \" + message.body().toString());\\n    });\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    res.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"When the in\\xADten\\xADral queue queue ca\\xADpac\\xADity is ex\\xADceeded, the new mes\\xADsage will be sim\\xADply dropped.\"), mdx(\"p\", null, \"An al\\xADter\\xADna\\xADtive op\\xADtion is to drop the old\\xADest mes\\xADsage in the queue.\"), mdx(\"p\", null, \"In order to achieve this, you should spec\\xADify the be\\xADhav\\xADior by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"QueueOptions#setKeepMostRecent\"), \" method.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The new Vert.x Rab\\xADbitMQ client con\\xADsumer API is way more id\\xADiomatic and mod\\xADern way to con\\xADsume mes\\xADsages from a queue.\"), mdx(\"p\", null, \"This API is going to pro\\xADvided in the 3.6.0 re\\xADlease, while the old will be dep\\xADre\\xADcated.\"), mdx(\"p\", null, \"I hope you en\\xADjoyed read\\xADing this ar\\xADti\\xADcle. See you soon on our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"Git\\xADter chan\\xADnel\"), \"!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>In Eclipse Vert.x 3.6.0, the Rab­bitMQ client will get a new con­sumer API. In this post we are going to show\nthe im­prove­ments since the pre­vi­ous API and how easy it is to use now.</p><p>Be­fore dig­ging into the new API let’s find out what were the lim­i­ta­tions of the ac­tual one:</p><ol><li>The API uses the event bus in such lim­it­ing the con­trol of the con­sumer over the Rab­bitMQ queue.</li><li>The mes­sage API is based on <code>JsonObject</code> which does not pro­vide a typed API</li></ol><h2 id=\"the-new-api-at-a-glance\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#the-new-api-at-a-glance\"></a>The new API at a glance</h2><p>Here is how sim­ple queue con­sump­tion looks like with the new API:</p><pre><code class=\"hljs language-java\">RabbitMQClient client = RabbitMQClient.create(vertx, <span class=\"hljs-keyword\">new</span> RabbitMQOptions());\n\nclient.basicConsumer(<span class=\"hljs-string\">&quot;my.queue&quot;</span>, res -&gt; {\n  <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;RabbitMQ consumer created !&quot;</span>);\n    RabbitMQConsumer mqConsumer = res.result();\n    mqConsumer.handler((RabbitMQMessage message) -&gt; {\n        System.out.println(<span class=\"hljs-string\">&quot;Got message: &quot;</span> + message.body().toString());\n    });\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Oups something went wrong</span>\n    res.cause().printStackTrace();\n  }\n});\n</code></pre><p>Now to cre­ate a queue you sim­ply call the <code>basicConsumer</code> method and you ob­tain asyn­chro­nously\na <code>RabbitMQConsumer</code>.</p><p>Then you need to pro­vide a han­dler called for each mes­sage con­sumed via <em>Rab­bit­MQ­Con­sumer#han­dler</em> which\nis the id­iomatic way to con­sumer stream in Vert.x</p><p>You may also note that when we a mes­sage ar­rives, it has the type of <code>RabbitMQMessage</code>, this is a typed\nmes­sage rep­re­sen­ta­tion.</p><p>Since <code>RabbitMQConsumer</code> is a stream, you also al­lowed to <code>pause</code> and <code>resume</code> the stream, sub­scribe to the\nend event, get no­ti­fied when an ex­cep­tion oc­curs.</p><p>In ad­di­tion, you can can­cel the sub­scrip­tion by call­ing <code>RabbitMQConsumer#cancel</code> method.</p><h2 id=\"backpressure\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#backpressure\"></a>Backpressure</h2><p>Some­times you can have more in­com­ing mes­sages than you can han­dle.</p><p>The new con­sumer API al­lows you to con­trol this and lets you store ar­rived mes­sages in the in­ter­nal queue\nbe­fore they are de­liv­ered to the ap­pli­ca­tion. In­deed, you can con­fig­ure the queue size.</p><p>Here is how you can limit the in­ter­nal queue size:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-comment\">// Limit to max 300 messages</span>\nQueueOptions options = <span class=\"hljs-keyword\">new</span> QueueOptions()\n  .setMaxInternalQueueSize(<span class=\"hljs-number\">300</span>);\n\nRabbitMQClient client = RabbitMQClient.create(vertx, <span class=\"hljs-keyword\">new</span> RabbitMQOptions());\n\nclient.basicConsumer(<span class=\"hljs-string\">&quot;my.queue&quot;</span>, options, res -&gt; {\n  <span class=\"hljs-keyword\">if</span> (res.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;RabbitMQ consumer created !&quot;</span>);\n    RabbitMQConsumer mqConsumer = res.result();\n    mqConsumer.handler((RabbitMQMessage message) -&gt; {\n      System.out.println(<span class=\"hljs-string\">&quot;Got message: &quot;</span> + message.body().toString());\n    });\n  } <span class=\"hljs-keyword\">else</span> {\n    res.cause().printStackTrace();\n  }\n});\n</code></pre><p>When the in­ten­ral queue queue ca­pac­ity is ex­ceeded, the new mes­sage will be sim­ply dropped.</p><p>An al­ter­na­tive op­tion is to drop the old­est mes­sage in the queue.</p><p>In order to achieve this, you should spec­ify the be­hav­ior by call­ing <code>QueueOptions#setKeepMostRecent</code> method.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The new Vert.x Rab­bitMQ client con­sumer API is way more id­iomatic and mod­ern way to con­sume mes­sages from a queue.</p><p>This API is going to pro­vided in the 3.6.0 re­lease, while the old will be dep­re­cated.</p><p>I hope you en­joyed read­ing this ar­ti­cle. See you soon on our <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">Git­ter chan­nel</a>!</p>","scope":{}},"tfIdfTerms":[{"term":"api","tf":11},{"term":"queue","tf":10},{"term":"messag","tf":9},{"term":"new","tf":7},{"term":"consum","tf":7},{"term":"call","tf":4},{"term":"rabbitmq","tf":3},{"term":"will","tf":3},{"term":"limit","tf":3},{"term":"provid","tf":3},{"term":"type","tf":3},{"term":"method","tf":3},{"term":"stream","tf":3},{"term":"client","tf":2},{"term":"go","tf":2},{"term":"us","tf":2},{"term":"let","tf":2},{"term":"event","tf":2},{"term":"control","tf":2},{"term":"simpli","tf":2},{"term":"handler","tf":2},{"term":"idiomat","tf":2},{"term":"arriv","tf":2},{"term":"allow","tf":2},{"term":"intern","tf":2}]},{"filename":"blog/2018-04-13-new-community-channels.mdx","date":"2018-04-13","slug":"new-community-channels","meta":{"title":"New community channels","category":"news","authors":[{"name":"Thomas Segismont","github_id":"tsegismont"}],"summary":"In order to better support the community, we (the core team and module maintainers) now also provide help on Stack Overflow and Gitter."},"readingTime":{"text":"2 min read","minutes":1.325,"time":79500,"words":265},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you vis\\xADited the Eclipse Vert.x web\\xADsite re\\xADcently, you might have no\\xADticed a cou\\xADple of nov\\xADel\\xADties on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/community\"\n  }), \"com\\xADmu\\xADnity\"), \" page:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the Stack Over\\xADflow \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/tagged/vert.x?sort=newest&pageSize=15\"\n  }), \"vert.x\"), \" tag for user ques\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"vertx-\\u200Busers\"), \" Git\\xADter chan\\xADnel to chat with other users and mod\\xADule main\\xADtain\\xADers\")), mdx(\"p\", null, \"Won\\xADder\\xADing why?\"), mdx(\"h2\", {\n    \"id\": \"answering-questions-wherever-they-are-asked\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#answering-questions-wherever-they-are-asked\"\n  })), \"Answering questions wherever they are asked\"), mdx(\"p\", null, \"In order to help us sup\\xADport the com\\xADmu\\xADnity, we (the core team and mod\\xADule main\\xADtain\\xADers) have tried so far to stick to a few rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://groups.google.com/forum/?fromgroups#!forum/vertx\"\n  }), \"user group\"), \" for ques\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IRC to chat\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bugs and is\\xADsues re\\xADported on GitHub\")), mdx(\"p\", null, \"These rules were doc\\xADu\\xADmented on the web\\xADsite, but ad\\xADmit\\xADtedly they are hard (if pos\\xADsi\\xADble at all) to en\\xADforce.\\nAnd let\\u2019s face it: many new users like to ask ques\\xADtions on Stack\\xADover\\xADflow and GitHub.\"), mdx(\"p\", null, \"So we now an\\xADswer ques\\xADtions wher\\xADever they are asked.\\nWe keep the user group as the main chan\\xADnel though: some con\\xADver\\xADsa\\xADtions just don\\u2019t fit the Stack Over\\xADflow model, and not every\\xADone in the com\\xADmu\\xADnity watches the GitHub repos\\xADi\\xADto\\xADries.\"), mdx(\"h2\", {\n    \"id\": \"moving-from-irc-to-gitter\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#moving-from-irc-to-gitter\"\n  })), \"Moving from IRC to Gitter\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#vertx\"), \" chan\\xADnel is recorded on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echelog\"), \" but it\\u2019s not con\\xADve\\xADnient to search or browse.\\nAnd shar\\xADing code, logs, is\\xADsues is sim\\xADply awful com\\xADpared to mod\\xADern al\\xADter\\xADna\\xADtives like Git\\xADter or Slack.\"), mdx(\"p\", null, \"Git\\xADter got our pref\\xADer\\xADence be\\xADcause:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s free, with\\xADout lim\\xADits\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s not re\\xADsource hun\\xADgry (on a browser at least)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\\u2019s well in\\xADte\\xADgrated with GitHub\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it sup\\xADports ad\\xADvanced for\\xADmat\\xADting\")), mdx(\"p\", null, \"Since the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/eclipse-vertx/vertx-users\"\n  }), \"chan\\xADnel\"), \" was opened, new peo\\xADple are join\\xADing every day.\\nAt the time of writ\\xADing, there are 74 peo\\xADple reg\\xADis\\xADtered al\\xADready.\\nWe hope you will be the next one!\"), mdx(\"p\", null, \"See you soon on\\xADline.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>If you vis­ited the Eclipse Vert.x web­site re­cently, you might have no­ticed a cou­ple of nov­el­ties on the <a href=\"https://vertx.io/community\">com­mu­nity</a> page:</p><ul><li>the Stack Over­flow <a href=\"https://stackoverflow.com/questions/tagged/vert.x?sort=newest&amp;pageSize=15\">vert.x</a> tag for user ques­tions</li><li>the <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">vertx-​users</a> Git­ter chan­nel to chat with other users and mod­ule main­tain­ers</li></ul><p>Won­der­ing why?</p><h2 id=\"answering-questions-wherever-they-are-asked\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#answering-questions-wherever-they-are-asked\"></a>Answering questions wherever they are asked</h2><p>In order to help us sup­port the com­mu­nity, we (the core team and mod­ule main­tain­ers) have tried so far to stick to a few rules:</p><ul><li><a href=\"https://groups.google.com/forum/?fromgroups#!forum/vertx\">user group</a> for ques­tions</li><li>IRC to chat</li><li>bugs and is­sues re­ported on GitHub</li></ul><p>These rules were doc­u­mented on the web­site, but ad­mit­tedly they are hard (if pos­si­ble at all) to en­force.\nAnd let’s face it: many new users like to ask ques­tions on Stack­over­flow and GitHub.</p><p>So we now an­swer ques­tions wher­ever they are asked.\nWe keep the user group as the main chan­nel though: some con­ver­sa­tions just don’t fit the Stack Over­flow model, and not every­one in the com­mu­nity watches the GitHub repos­i­to­ries.</p><h2 id=\"moving-from-irc-to-gitter\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#moving-from-irc-to-gitter\"></a>Moving from IRC to Gitter</h2><p>The <code>#vertx</code> chan­nel is recorded on <code>echelog</code> but it’s not con­ve­nient to search or browse.\nAnd shar­ing code, logs, is­sues is sim­ply awful com­pared to mod­ern al­ter­na­tives like Git­ter or Slack.</p><p>Git­ter got our pref­er­ence be­cause:</p><ul><li>it’s free, with­out lim­its</li><li>it’s not re­source hun­gry (on a browser at least)</li><li>it’s well in­te­grated with GitHub</li><li>it sup­ports ad­vanced for­mat­ting</li></ul><p>Since the <a href=\"https://gitter.im/eclipse-vertx/vertx-users\">chan­nel</a> was opened, new peo­ple are join­ing every day.\nAt the time of writ­ing, there are 74 peo­ple reg­is­tered al­ready.\nWe hope you will be the next one!</p><p>See you soon on­line.</p>","scope":{}},"tfIdfTerms":[{"term":"user","tf":6},{"term":"question","tf":5},{"term":"gitter","tf":4},{"term":"channel","tf":4},{"term":"github","tf":4},{"term":"commun","tf":3},{"term":"ask","tf":3},{"term":"not","tf":3},{"term":"websit","tf":2},{"term":"stack","tf":2},{"term":"overflow","tf":2},{"term":"chat","tf":2},{"term":"modul","tf":2},{"term":"maintain","tf":2},{"term":"answer","tf":2},{"term":"wherev","tf":2},{"term":"support","tf":2},{"term":"rule","tf":2},{"term":"group","tf":2},{"term":"irc","tf":2},{"term":"issu","tf":2},{"term":"new","tf":2},{"term":"peopl","tf":2},{"term":"74","tf":1},{"term":"visit","tf":1}]}],"numPages":16},"__N_SSG":true}