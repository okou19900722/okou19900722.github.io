{"pageProps":{"categories":["releases","guides","news"],"page":8,"posts":[{"filename":"blog/2017-10-20-eclipse-vert-x-3-5-0-released.mdx","date":"2017-10-20","slug":"eclipse-vert-x-3-5-0-released","meta":{"title":"Eclipse Vert.x 3.5.0 released!","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"The Vert.x team is pleased to announce the release of Eclipse Vert.x 3.5.0."},"readingTime":{"text":"6 min read","minutes":5.315,"time":318900.00000000006,"words":1063},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Vert.x team is pleased to an\\xADnounce the re\\xADlease of Eclipse Vert.x 3.5.0.\"), mdx(\"p\", null, \"As usual it de\\xADliv\\xADers an im\\xADpres\\xADsive num\\xADber of high qual\\xADity fea\\xADtures.\"), mdx(\"h2\", {\n    \"id\": \"lets-go-rxjava2\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#lets-go-rxjava2\"\n  })), \"Let\\u2019s go RxJava2\"), mdx(\"p\", null, \"First and fore\\xADmost this re\\xADlease de\\xADliv\\xADers the Rx\\xADJava2 API with sup\\xADport of its full range of types.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Single\"), \", Rx\\xADi\\xADfied APIs also ex\\xADpose the\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Completable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Maybe\"), \" types:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<Void>>\"), \"\\nCompletable completable = server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"closed\\\"\"), \"));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<String>> where the result can be null\"), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"www.google.com\\\"\"), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"resolved to \\\"\"), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"does not resolve\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Rx\\xADJava aug\\xADments Vert.x streams with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toObservable()\"), \" method, like\\xADwise Rx\\xADJava2 adds the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toFlowable()\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// back-pressured stream\"), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// but we still can get an Observable<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// non back-pressured stream\"), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\")), mdx(\"p\", null, \"What\\u2019s so dif\\xADfer\\xADent be\\xADtween \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flowable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Observable\"), \"? the for\\xADmer han\\xADdles back-\\u200Bpressure, i.e the\\nsub\\xADscriber can con\\xADtrol the flow of items and the later can not!!!\"), mdx(\"p\", null, \"You can read the doc\\xADu\\xADmen\\xADta\\xADtion in the sec\\xADtion of the \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-rx/java2/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"docs\")), \"\\nor go straight to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/rxjava2-examples\"\n  }), \"ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"kotlin-coroutines\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#kotlin-coroutines\"\n  })), \"Kotlin coroutines\"), mdx(\"p\", null, \"Sup\\xADport for \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-lang-kotlin-coroutines/kotlin/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"Kotlin Corou\\xADtines\")), \" is one of my favourite 3.5 fea\\xADtures (by the way I\\u2019ll present a talk about Vert.x\\nand corou\\xADtines at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.kotlinconf.com/sessions/\"\n  }), \"Kotlin\\xADConf\"), \").\"), mdx(\"p\", null, \"Corou\\xADtines al\\xADlows you to rea\\xADson about asyn\\xADchro\\xADnous flow the same way you do with tra\\xADdi\\xADtional se\\xADquen\\xADtial flow with\\nthe extra bonus to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catch\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"finally\"), \" super combo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" movie = ctx.pathParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"id\\\"\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" rating = Integer.parseInt(ctx.queryParam(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"getRating\\\"\"), \")[\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \"])\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" connection = awaitResult<SQLConnection> { client.getConnection(it) }\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"try\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" result = awaitResult<ResultSet> { connection.queryWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT TITLE FROM MOVIE WHERE ID=?\\\"\"), \", json { array(movie) }, it) }\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (result.rows.size == \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"1\"), \") {\\n    awaitResult<UpdateResult> { connection.updateWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"INSERT INTO RATING (VALUE, MOVIE_ID) VALUES ?, ?\\\"\"), \", json { array(rating, movie) }, it) }\\n    ctx.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"200\"), \").end()\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    ctx.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"404\"), \").end()\\n  }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"finally\"), \" {\\n  connection.close()\\n}\\n\")), mdx(\"p\", null, \"This ex\\xADam\\xADple is bor\\xADrowed from our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/kotlin-examples/coroutines\"\n  }), \"ex\\xADam\\xADples\"), \".\"), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"I\\u2019ve used \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"finally\"), \" pur\\xADposely in\\xADstead of Kotlin\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use\"), \" ex\\xADten\\xADsion method\")), mdx(\"h2\", {\n    \"id\": \"mqtt-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mqtt-client\"\n  })), \"MQTT Client\"), mdx(\"p\", null, \"In Vert.x 3.4 we added the \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_server\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"MQTT server\")), \", 3.5 com\\xADpletes the\\nMQTT story with the \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-mqtt/java/#_vert_x_mqtt_client\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"MQTT client\")), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"MqttClient mqttClient = MqttClient.create(vertx,\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Connected to a server\\\"\"), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Disconnected from server\\\"\"), \")));\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failed to connect to a server\\\"\"), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"You can find MQTT client and server ex\\xADam\\xADples \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/mqtt-examples\"\n  }), \"here\")), mdx(\"h2\", {\n    \"id\": \"web-api-contracts\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#web-api-contracts\"\n  })), \"Web API contracts\"), mdx(\"p\", null, \"With the new \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-web-api-contract/java/\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"Ope\\xADnAPI\")), \" router fac\\xADtory we can focus on the API im\\xADple\\xADmen\\xADta\\xADtion and not on the val\\xADi\\xADda\\xADtion\\nof the input. The usage is quite sim\\xADple:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"OpenAPI3RouterFactory.createRouterFactoryFromFile(vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"petstore.yaml\\\"\"), \", ar -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success\"), \"\\n    OpenAPI3RouterFactory routerFactory = ar.result();\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add your API and security handlers to the factory\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add it to a server\"), \"\\n    vertx.createHttpServer()\\n      .requestHandler(routerFactory.getRouter()::accept)\\n      .listen();\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Now as a de\\xADvel\\xADoper you only need to care about the API and not on the val\\xADi\\xADda\\xADtion. The Ope\\xADnAPI router will en\\xADsure that a\\nre\\xADquest to an API will first to the con\\xADtract be\\xADfore your han\\xADdler is in\\xADvoked.\"), mdx(\"h2\", {\n    \"id\": \"java-9-support\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#java-9-support\"\n  })), \"Java 9 support\"), mdx(\"p\", null, \"Java 9 was re\\xADleased a few days ago and the Vert.x stack has been care\\xADfully tested on Java 9 and most of our com\\xADpo\\xADnents\\nrun on Java 9 (Groovy does not run well on Java 9, please see the sup\\xADport \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/Java-9-Support\"\n  }), \"ma\\xADtrix\"), \")\"), mdx(\"p\", null, \"As a bonus you can now use HTTP/2 out of the box with JDK SSL!\"), mdx(\"p\", null, \"You can also use Vert.x jars as anony\\xADmous mod\\xADules.\"), mdx(\"h2\", {\n    \"id\": \"event-driven-json-parsing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#event-driven-json-parsing\"\n  })), \"Event driven JSON Parsing\"), mdx(\"p\", null, \"We pro\\xADvide now an event dri\\xADven \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/apidocs/io/vertx/core/parsetools/JsonParser.html\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"JSON Parser\")), \" emit\\xADting parse events that is very handy when you need to han\\xADdle very large\\nJSON struc\\xADtures and you don\\u2019t want to buffer it which in\\xADtro\\xADduce extra la\\xADtency and in\\xADcrease the mem\\xADory con\\xADsump\\xADtion.\"), mdx(\"p\", null, \"The parser al\\xADlows you to switch be\\xADtween fine grained JSON parse events or full struc\\xADtures, for in\\xADstance\\nyou can parse an array of ob\\xADject very ef\\xADfi\\xADciently:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"JsonParser parser = JsonParser.newParser();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// The parser will handle JSON objects as values\"), \"\\nparser.objectValueMode();\\n\\nparser.handler(event -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"switch\"), \" (event.type()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" START_ARRAY:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Start the array\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" END_ARRAY:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// End the array\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"case\"), \" VALUE:\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle each object\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"break\"), \";\\n  }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"single-sql-operations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#single-sql-operations\"\n  })), \"Single SQL operations\"), mdx(\"p\", null, \"Sin\\xADgle SQL op\\xADer\\xADa\\xADtions (aka \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"one-\\u200Bshot\"), \") have been dras\\xADti\\xADcally sim\\xADpli\\xADfied: most of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SQLOperations\"), \" op\\xADer\\xADa\\xADtions can now be\\nper\\xADformed di\\xADrectly on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SQLClient\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"client.queryWithParams(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"SELECT AVG(VALUE) AS VALUE FROM RATING WHERE MOVIE_ID=?\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" JsonArray().add(id), ar2 -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"int\"), \" value = ar.result().get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \").getInteger(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"VALUE\\\"\"), \");\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Continue\"), \"\\n  }\\n});\\n\")), mdx(\"p\", null, \"Under the hood, the client takes care of the pool ac\\xADquire/re\\xADlease in\\xADter\\xADac\\xADtion for you.\"), mdx(\"h2\", {\n    \"id\": \"native-transport-and-domain-sockets\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#native-transport-and-domain-sockets\"\n  })), \"Native transport and domain sockets\"), mdx(\"p\", null, \"We now sup\\xADport \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-core/java/#_native_transports\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"na\\xADtive trans\\xADports\")), \" on Linux (Epoll) and MacOS (KQueue), as well as \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-core/java/#_domain_sockets\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"UNIX do\\xADmain sock\\xADets\")), \" for\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NetServer/NetClient\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpServer\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HttpClient\"), \" should sup\\xADport UNIX do\\xADmain sock\\xADets soon).\"), mdx(\"h2\", {\n    \"id\": \"auth-handler-chaining\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#auth-handler-chaining\"\n  })), \"Auth handler chaining\"), mdx(\"p\", null, \"There are times when you want to sup\\xADport mul\\xADti\\xADple authN/authZ mech\\xADa\\xADnisms in a sin\\xADgle ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"Vert.x Web sup\\xADports auth han\\xADdlers \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-web/java/#_chaining_multiple_auth_handlers\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"chain\\xADing\"))), mdx(\"h2\", {\n    \"id\": \"vertx-config-improvements\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#vertx-config-improvements\"\n  })), \"Vert.x config improvements\"), mdx(\"p\", null, \"Vert.x Con\\xADfig al\\xADlows con\\xADfig\\xADur\\xADing your ap\\xADpli\\xADca\\xADtion by as\\xADsem\\xADbling con\\xADfig chunks from dif\\xADfer\\xADent lo\\xADca\\xADtions such as file,\\nhttp, zookeeper\\u2026\"), mdx(\"p\", null, \"In this ver\\xADsion, we have added the sup\\xADport for Con\\xADsul and Vault.\"), mdx(\"p\", null, \"With the \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-config/java/#_consul_configuration_store\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"Con\\xADsul con\\xADfig store\")), \", you can re\\xADtrieve your con\\xADfig\\xADu\\xADra\\xADtion from a Con\\xADsul server - so in other words, dis\\xADtrib\\xADute\\nthe con\\xADfig\\xADu\\xADra\\xADtion from your or\\xADches\\xADtra\\xADtion in\\xADfra\\xADstruc\\xADture.\"), mdx(\"p\", null, \"The \", mdx(Link, {\n    href: \"/docs/[[...slug]]\",\n    as: \"/docs/vertx-config/java/#_vault_config_store\",\n    passHref: true,\n    mdxType: \"Link\"\n  }, mdx(\"a\", null, \"Vault con\\xADfig store\")), \" lets you re\\xADtrieve se\\xADcrets avoid\\xADing hard cod\\xADing se\\xADcrets or dis\\xADtrib\\xADut\\xADing cre\\xADden\\xADtials using an\\nin\\xADse\\xADcure way. Vault en\\xADforces the se\\xADcu\\xADrity of your se\\xADcrets and only al\\xADlowed ap\\xADpli\\xADca\\xADtions can re\\xADtrieve them. In other\\nwords, now you can keep your se\\xADcrets se\\xADcret.\"), mdx(\"h2\", {\n    \"id\": \"acks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#acks\"\n  })), \"ACKs\"), mdx(\"p\", null, \"I want on be\\xADhalf of the team to thank all the con\\xADtrib\\xADu\\xADtors for this re\\xADlease in\\xADclud\\xADing the Google Sum\\xADmer of Code stu\\xADdents\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/titantins\"\n  }), \"Pavel Drankov\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/slinkyguardiani\"\n  }), \"Francesco Guardiani\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://yunyul.in\"\n  }), \"Yunyu Lin\"), \")\\nthat de\\xADliv\\xADered an im\\xADpres\\xADsive work.\"), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"The re\\xADlease notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/wiki/wiki/3.5.0-Release-Notes\"\n  }), \"https://github.com/vert-\\u200Bx3/wiki/wiki/3.5.0-\\u200BRelease-Notes\"))), mdx(\"p\", null, \"Docker im\\xADages are also avail\\xADable on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hub.docker.com/u/vertx/\"\n  }), \"Docker Hub\"), \". The Vert.x dis\\xADtri\\xADb\\xADu\\xADtion is also avail\\xADable\\nfrom \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://sdkman.io/index.html\"\n  }), \"SD\\xADKMan\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://brew.sh/\"\n  }), \"Home\\xADBrew\"), \".\"), mdx(\"p\", null, \"The event bus client using the SockJS bridge are avail\\xADable from NPM, Bower and as a We\\xADb\\xADJar:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/vertx3-eventbus-client\"\n  }), \"https://www.npmjs.com/pack\\xADage/vertx3-\\u200Beventbus-client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-bus-bower\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bbus-bower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.webjars.org/\"\n  }), \"http://www.we\\xADb\\xADjars.org/\"))), mdx(\"p\", null, \"The ar\\xADti\\xADfacts have been de\\xADployed to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.0%22\"\n  }), \"Maven Cen\\xADtral\"), \" and you can get the dis\\xADtri\\xADb\\xADu\\xADtion on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://bintray.com/vertx/downloads/distribution/3.5.0/view\"\n  }), \"Bin\\xADtray\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>The Vert.x team is pleased to an­nounce the re­lease of Eclipse Vert.x 3.5.0.</p><p>As usual it de­liv­ers an im­pres­sive num­ber of high qual­ity fea­tures.</p><h2 id=\"lets-go-rxjava2\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#lets-go-rxjava2\"></a>Let’s go RxJava2</h2><p>First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.</p><p>In ad­di­tion of <code>Single</code>, Rx­i­fied APIs also ex­pose the<code>Completable</code> and <code>Maybe</code> types:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;Void&gt;&gt;</span>\nCompletable completable = server.rxClose();\n\ncompletable.subscribe(() -&gt; System.out.println(<span class=\"hljs-string\">&quot;closed&quot;</span>));\n\n<span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;String&gt;&gt; where the result can be null</span>\nMaybe&lt;String&gt; ipAddress = dnsClient.rxLookup(<span class=\"hljs-string\">&quot;www.google.com&quot;</span>);\nipAddress.subscribe(\n  value -&gt; System.out.println(<span class=\"hljs-string\">&quot;resolved to &quot;</span> + value),\n  err -&gt; err.printStackTrace(),\n  () -&gt; System.out.println(<span class=\"hljs-string\">&quot;does not resolve&quot;</span>));\n</code></pre><p>Rx­Java aug­ments Vert.x streams with a <code>toObservable()</code> method, like­wise Rx­Java2 adds the <code>toFlowable()</code> method:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Flowable&lt;Buffer&gt; maps to a ReadStream&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// back-pressured stream</span>\nFlowable&lt;Buffer&gt; flowable = asyncFile.toFlowable();\n\n<span class=\"hljs-comment\">// but we still can get an Observable&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// non back-pressured stream</span>\nObservable&lt;Buffer&gt; flowable = asyncFile.toObservable();\n</code></pre><p>What’s so dif­fer­ent be­tween <code>Flowable</code> and <code>Observable</code>? the for­mer han­dles back-​pressure, i.e the\nsub­scriber can con­trol the flow of items and the later can not!!!</p><p>You can read the doc­u­men­ta­tion in the sec­tion of the <a href=\"/docs/vertx-rx/java2/\">docs</a>\nor go straight to the <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/rxjava2-examples\">ex­am­ples</a></p><h2 id=\"kotlin-coroutines\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#kotlin-coroutines\"></a>Kotlin coroutines</h2><p>Sup­port for <a href=\"/docs/vertx-lang-kotlin-coroutines/kotlin/\">Kotlin Corou­tines</a> is one of my favourite 3.5 fea­tures (by the way I’ll present a talk about Vert.x\nand corou­tines at <a href=\"https://www.kotlinconf.com/sessions/\">Kotlin­Conf</a>).</p><p>Corou­tines al­lows you to rea­son about asyn­chro­nous flow the same way you do with tra­di­tional se­quen­tial flow with\nthe extra bonus to use <code>try</code>/<code>catch</code>/<code>finally</code> super combo:</p><pre><code class=\"hljs language-kotlin\"><span class=\"hljs-keyword\">val</span> movie = ctx.pathParam(<span class=\"hljs-string\">&quot;id&quot;</span>)\n<span class=\"hljs-keyword\">val</span> rating = Integer.parseInt(ctx.queryParam(<span class=\"hljs-string\">&quot;getRating&quot;</span>)[<span class=\"hljs-number\">0</span>])\n<span class=\"hljs-keyword\">val</span> connection = awaitResult&lt;SQLConnection&gt; { client.getConnection(it) }\n<span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-keyword\">val</span> result = awaitResult&lt;ResultSet&gt; { connection.queryWithParams(<span class=\"hljs-string\">&quot;SELECT TITLE FROM MOVIE WHERE ID=?&quot;</span>, json { array(movie) }, it) }\n  <span class=\"hljs-keyword\">if</span> (result.rows.size == <span class=\"hljs-number\">1</span>) {\n    awaitResult&lt;UpdateResult&gt; { connection.updateWithParams(<span class=\"hljs-string\">&quot;INSERT INTO RATING (VALUE, MOVIE_ID) VALUES ?, ?&quot;</span>, json { array(rating, movie) }, it) }\n    ctx.response().setStatusCode(<span class=\"hljs-number\">200</span>).end()\n  } <span class=\"hljs-keyword\">else</span> {\n    ctx.response().setStatusCode(<span class=\"hljs-number\">404</span>).end()\n  }\n} <span class=\"hljs-keyword\">finally</span> {\n  connection.close()\n}\n</code></pre><p>This ex­am­ple is bor­rowed from our <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/kotlin-examples/coroutines\">ex­am­ples</a>.</p><div class=\"alert info\"><p>I’ve used <code>try</code>/<code>finally</code> pur­posely in­stead of Kotlin’s <code>use</code> ex­ten­sion method</p></div><h2 id=\"mqtt-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mqtt-client\"></a>MQTT Client</h2><p>In Vert.x 3.4 we added the <a href=\"/docs/vertx-mqtt/java/#_vert_x_mqtt_server\">MQTT server</a>, 3.5 com­pletes the\nMQTT story with the <a href=\"/docs/vertx-mqtt/java/#_vert_x_mqtt_client\">MQTT client</a>:</p><pre><code class=\"hljs language-java\">MqttClient mqttClient = MqttClient.create(vertx,\n   <span class=\"hljs-keyword\">new</span> MqttClientOptions()\n     .setPort(BROKER_PORT)\n     .setHost(BROKER_HOST)).connect(ar -&gt;\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;Connected to a server&quot;</span>);\n\n    mqttClient.publish(\n      MQTT_TOPIC,\n      Buffer.buffer(MQTT_MESSAGE),\n      MqttQoS.AT_MOST_ONCE,\n      <span class=\"hljs-keyword\">false</span>,\n      <span class=\"hljs-keyword\">false</span>,\n      s -&gt; mqttClient.disconnect(d -&gt; System.out.println(<span class=\"hljs-string\">&quot;Disconnected from server&quot;</span>)));\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failed to connect to a server&quot;</span>);\n    ar.cause().printStackTrace();\n  }\n});\n</code></pre><p>You can find MQTT client and server ex­am­ples <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/mqtt-examples\">here</a></p><h2 id=\"web-api-contracts\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#web-api-contracts\"></a>Web API contracts</h2><p>With the new <a href=\"/docs/vertx-web-api-contract/java/\">Ope­nAPI</a> router fac­tory we can focus on the API im­ple­men­ta­tion and not on the val­i­da­tion\nof the input. The usage is quite sim­ple:</p><pre><code class=\"hljs language-java\">OpenAPI3RouterFactory.createRouterFactoryFromFile(vertx, <span class=\"hljs-string\">&quot;petstore.yaml&quot;</span>, ar -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-comment\">// Spec loaded with success</span>\n    OpenAPI3RouterFactory routerFactory = ar.result();\n\n    <span class=\"hljs-comment\">// add your API and security handlers to the factory</span>\n\n    <span class=\"hljs-comment\">// add it to a server</span>\n    vertx.createHttpServer()\n      .requestHandler(routerFactory.getRouter()::accept)\n      .listen();\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n  }\n});\n</code></pre><p>Now as a de­vel­oper you only need to care about the API and not on the val­i­da­tion. The Ope­nAPI router will en­sure that a\nre­quest to an API will first to the con­tract be­fore your han­dler is in­voked.</p><h2 id=\"java-9-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#java-9-support\"></a>Java 9 support</h2><p>Java 9 was re­leased a few days ago and the Vert.x stack has been care­fully tested on Java 9 and most of our com­po­nents\nrun on Java 9 (Groovy does not run well on Java 9, please see the sup­port <a href=\"https://github.com/vert-x3/wiki/wiki/Java-9-Support\">ma­trix</a>)</p><p>As a bonus you can now use HTTP/2 out of the box with JDK SSL!</p><p>You can also use Vert.x jars as anony­mous mod­ules.</p><h2 id=\"event-driven-json-parsing\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#event-driven-json-parsing\"></a>Event driven JSON Parsing</h2><p>We pro­vide now an event dri­ven <a href=\"/docs/apidocs/io/vertx/core/parsetools/JsonParser.html\">JSON Parser</a> emit­ting parse events that is very handy when you need to han­dle very large\nJSON struc­tures and you don’t want to buffer it which in­tro­duce extra la­tency and in­crease the mem­ory con­sump­tion.</p><p>The parser al­lows you to switch be­tween fine grained JSON parse events or full struc­tures, for in­stance\nyou can parse an array of ob­ject very ef­fi­ciently:</p><pre><code class=\"hljs language-java\">JsonParser parser = JsonParser.newParser();\n\n<span class=\"hljs-comment\">// The parser will handle JSON objects as values</span>\nparser.objectValueMode();\n\nparser.handler(event -&gt; {\n  <span class=\"hljs-keyword\">switch</span> (event.type()) {\n    <span class=\"hljs-keyword\">case</span> START_ARRAY:\n      <span class=\"hljs-comment\">// Start the array</span>\n      <span class=\"hljs-keyword\">break</span>;\n    <span class=\"hljs-keyword\">case</span> END_ARRAY:\n      <span class=\"hljs-comment\">// End the array</span>\n      <span class=\"hljs-keyword\">break</span>;\n    <span class=\"hljs-keyword\">case</span> VALUE:\n      <span class=\"hljs-comment\">// Handle each object</span>\n      <span class=\"hljs-keyword\">break</span>;\n  }\n});\n</code></pre><h2 id=\"single-sql-operations\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#single-sql-operations\"></a>Single SQL operations</h2><p>Sin­gle SQL op­er­a­tions (aka <em>one-​shot</em>) have been dras­ti­cally sim­pli­fied: most of the <code>SQLOperations</code> op­er­a­tions can now be\nper­formed di­rectly on the <code>SQLClient</code>:</p><pre><code class=\"hljs language-java\">client.queryWithParams(<span class=\"hljs-string\">&quot;SELECT AVG(VALUE) AS VALUE FROM RATING WHERE MOVIE_ID=?&quot;</span>, <span class=\"hljs-keyword\">new</span> JsonArray().add(id), ar2 -&gt; {\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    <span class=\"hljs-keyword\">int</span> value = ar.result().get(<span class=\"hljs-number\">0</span>).getInteger(<span class=\"hljs-string\">&quot;VALUE&quot;</span>);\n    <span class=\"hljs-comment\">// Continue</span>\n  }\n});\n</code></pre><p>Under the hood, the client takes care of the pool ac­quire/re­lease in­ter­ac­tion for you.</p><h2 id=\"native-transport-and-domain-sockets\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#native-transport-and-domain-sockets\"></a>Native transport and domain sockets</h2><p>We now sup­port <a href=\"/docs/vertx-core/java/#_native_transports\">na­tive trans­ports</a> on Linux (Epoll) and MacOS (KQueue), as well as <a href=\"/docs/vertx-core/java/#_domain_sockets\">UNIX do­main sock­ets</a> for\n<code>NetServer/NetClient</code> (<code>HttpServer</code>/<code>HttpClient</code> should sup­port UNIX do­main sock­ets soon).</p><h2 id=\"auth-handler-chaining\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#auth-handler-chaining\"></a>Auth handler chaining</h2><p>There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.</p><p>Vert.x Web sup­ports auth han­dlers <a href=\"/docs/vertx-web/java/#_chaining_multiple_auth_handlers\">chain­ing</a></p><h2 id=\"vertx-config-improvements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#vertx-config-improvements\"></a>Vert.x config improvements</h2><p>Vert.x Con­fig al­lows con­fig­ur­ing your ap­pli­ca­tion by as­sem­bling con­fig chunks from dif­fer­ent lo­ca­tions such as file,\nhttp, zookeeper…</p><p>In this ver­sion, we have added the sup­port for Con­sul and Vault.</p><p>With the <a href=\"/docs/vertx-config/java/#_consul_configuration_store\">Con­sul con­fig store</a>, you can re­trieve your con­fig­u­ra­tion from a Con­sul server - so in other words, dis­trib­ute\nthe con­fig­u­ra­tion from your or­ches­tra­tion in­fra­struc­ture.</p><p>The <a href=\"/docs/vertx-config/java/#_vault_config_store\">Vault con­fig store</a> lets you re­trieve se­crets avoid­ing hard cod­ing se­crets or dis­trib­ut­ing cre­den­tials using an\nin­se­cure way. Vault en­forces the se­cu­rity of your se­crets and only al­lowed ap­pli­ca­tions can re­trieve them. In other\nwords, now you can keep your se­crets se­cret.</p><h2 id=\"acks\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#acks\"></a>ACKs</h2><p>I want on be­half of the team to thank all the con­trib­u­tors for this re­lease in­clud­ing the Google Sum­mer of Code stu­dents\n(<a href=\"https://twitter.com/titantins\">Pavel Drankov</a>, <a href=\"https://twitter.com/slinkyguardiani\">Francesco Guardiani</a> and <a href=\"https://yunyul.in\">Yunyu Lin</a>)\nthat de­liv­ered an im­pres­sive work.</p><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>The re­lease notes</p><ul><li><a href=\"https://github.com/vert-x3/wiki/wiki/3.5.0-Release-Notes\">https://github.com/vert-​x3/wiki/wiki/3.5.0-​Release-Notes</a></li></ul><p>Docker im­ages are also avail­able on the <a href=\"https://hub.docker.com/u/vertx/\">Docker Hub</a>. The Vert.x dis­tri­b­u­tion is also avail­able\nfrom <a href=\"http://sdkman.io/index.html\">SD­KMan</a> and <a href=\"http://brew.sh/\">Home­Brew</a>.</p><p>The event bus client using the SockJS bridge are avail­able from NPM, Bower and as a We­b­Jar:</p><ul><li><a href=\"https://www.npmjs.com/package/vertx3-eventbus-client\">https://www.npmjs.com/pack­age/vertx3-​eventbus-client</a></li><li><a href=\"https://github.com/vert-x3/vertx-bus-bower\">https://github.com/vert-​x3/vertx-​bus-bower</a></li><li><a href=\"http://www.webjars.org/\">http://www.we­b­jars.org/</a></li></ul><p>The ar­ti­facts have been de­ployed to <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.5.0%22\">Maven Cen­tral</a> and you can get the dis­tri­b­u­tion on <a href=\"https://bintray.com/vertx/downloads/distribution/3.5.0/view\">Bin­tray</a>.</p>","scope":{}},"tfIdfTerms":[{"term":"support","tf":9},{"term":"releas","tf":7},{"term":"api","tf":6},{"term":"us","tf":6},{"term":"client","tf":6},{"term":"http","tf":6},{"term":"mqtt","tf":5},{"term":"java","tf":5},{"term":"event","tf":5},{"term":"config","tf":5},{"term":"secret","tf":5},{"term":"not","tf":4},{"term":"exampl","tf":4},{"term":"coroutin","tf":4},{"term":"allow","tf":4},{"term":"json","tf":4},{"term":"pars","tf":4},{"term":"distribut","tf":4},{"term":"deliv","tf":3},{"term":"rxjava2","tf":3},{"term":"method","tf":3},{"term":"flow","tf":3},{"term":"kotlin","tf":3},{"term":"server","tf":3},{"term":"handler","tf":3}]},{"filename":"blog/2017-09-28-an-eclipse-vert-x-gradle-plugin.mdx","date":"2017-09-28","slug":"an-eclipse-vert-x-gradle-plugin","meta":{"title":"An Eclipse Vert.x Gradle Plugin","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"The new Vert.x Gradle plugin offers an opinionated plugin for building Vert.x applications with Gradle."},"readingTime":{"text":"4 min read","minutes":3.305,"time":198300,"words":661},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Eclipse Vert.x is a ver\\xADsa\\xADtile toolkit, and as such it does not have any strong opin\\xADion on the tools that you should be using.\"), mdx(\"p\", null, \"Gra\\xADdle is a pop\\xADu\\xADlar build tool in the JVM ecosys\\xADtem, and it is quite easy to use for build\\xADing Vert.x project as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\"\n  }), \"show in one of the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-examples\"), \" sam\\xADples\"), \" where a so-\\u200Bcalled \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jar\"), \" is being pro\\xADduced.\"), mdx(\"p\", null, \"The new \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"Vert.x Gra\\xADdle plugin\"), \" of\\xADfers an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"opin\\xADion\\xADated\"), \" plug\\xADin for build\\xADing Vert.x ap\\xADpli\\xADca\\xADtions with Gra\\xADdle.\"), mdx(\"p\", null, \"It au\\xADto\\xADmat\\xADi\\xADcally ap\\xADplies the fol\\xADlow\\xADing plu\\xADg\\xADins:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java\"), \" (and sets the source com\\xADpat\\xADi\\xADbil\\xADity to Java 8),\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shadow\"), \" to gen\\xADer\\xADate fat Jars with all de\\xADpen\\xADden\\xADcies bun\\xADdled,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nebula-dependency-recommender-plugin\"), \" so that you can omit ver\\xADsions from mod\\xADules from the the Vert.x stack.\")), mdx(\"p\", null, \"The plug\\xADin au\\xADto\\xADmat\\xADi\\xADcally adds \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"io.vertx:vertx-core\"), \" as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compile\"), \" de\\xADpen\\xADdency, so you don\\u2019t need to do it.\"), mdx(\"p\", null, \"The plug\\xADin pro\\xADvides a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task that can take ad\\xADvan\\xADtage of the Vert.x auto-\\u200Breloading ca\\xADpa\\xADbil\\xADi\\xADties, so you can just run it then have your code being au\\xADto\\xADmat\\xADi\\xADcally com\\xADpiled and re\\xADloaded as you make changes.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#getting-started\"\n  })), \"Getting started\"), mdx(\"p\", null, \"A min\\xADi\\xADmal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" looks like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'sample.App'\"), \"\\n}\\n\")), mdx(\"p\", null, \"Pro\\xADvided \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample.App\"), \" is a Vert.x ver\\xADti\\xADcle, then:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle shadowJar\"), \" builds an ex\\xADe\\xADcutable Jar with all de\\xADpen\\xADden\\xADcies: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java -jar build/libs/simple-project-fat.jar\"), \", and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle vertxRun\"), \" starts the ap\\xADpli\\xADca\\xADtion and au\\xADto\\xADmat\\xADi\\xADcally re\\xADcom\\xADpiles (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gradle classes\"), \") and re\\xADloads the code when any file under \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/\"), \" is being added, mod\\xADi\\xADfied or deleted.\")), mdx(\"h2\", {\n    \"id\": \"using-with-kotlin-or-groovy-or\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-kotlin-or-groovy-or\"\n  })), \"Using with Kotlin (or Groovy, or\\u2026)\"), mdx(\"p\", null, \"The plug\\xADin in\\xADte\\xADgrates well with plu\\xADg\\xADins that add con\\xADfig\\xADu\\xADra\\xADtions and tasks trig\\xADgered by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" task.\"), mdx(\"p\", null, \"Here is how to use the plug\\xADin with Kotlin (re\\xADplace the ver\\xADsion num\\xADbers with the lat\\xADest ones\\u2026):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'x.y.z'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin.jvm'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'a.b.c'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-lang-kotlin'\"), \"\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'org.jetbrains.kotlin:kotlin-stdlib-jre8'\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n}\\n\\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\\n  kotlinOptions {\\n    jvmTarget = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"1.8\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"using-with-webpack-or-any-other-custom-task\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#using-with-webpack-or-any-other-custom-task\"\n  })), \"Using with WebPack (or any other custom task)\"), mdx(\"p\", null, \"Web\\xADPack is pop\\xADu\\xADlar to bun\\xADdle web as\\xADsets, and there is even \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://guides.gradle.org/running-webpack-with-gradle/\"\n  }), \"a guide for its in\\xADte\\xADgra\\xADtion with Gra\\xADdle\"), \".\"), mdx(\"p\", null, \"Mix\\xADing the Vert.x Gra\\xADdle plug\\xADin with Web\\xADPack is very sim\\xADple, es\\xADpe\\xADcially in com\\xADbi\\xADna\\xADtion with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"com.moowork.node\"), \" plug\\xADin that in\\xADte\\xADgrates Node into Gra\\xADdle.\"), mdx(\"p\", null, \"Sup\\xADpose we want to mix Vert.x code and JavaScript with Gra\\xADdle and Web\\xADPack.\\nWe as\\xADsume a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), \"{\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"name\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack-sample\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"version\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"0.0.1\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"description\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"A sample with Vert.x, Gradle and Webpack\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"main\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/webapp/index.js\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scripts\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"test\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"author\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"license\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ISC\\\"\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"devDependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^2.7.0\\\"\"), \"\\n  },\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dependencies\\\"\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"axios\\\"\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"^0.16.2\\\"\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-javascript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"module\"), \".exports = {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"entry\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./src/main/webapp/index.js'\"), \",\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"output\"), \": {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"filename\"), \": \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'./build/resources/main/webroot/bundle.js'\"), \"\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" file is the fol\\xADlow\\xADing:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"plugins {\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx.vertx-plugin'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'0.0.4'\"), \"\\n  id \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'com.moowork.node'\"), \" version \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'1.2.0'\"), \"\\n}\\n\\nrepositories {\\n  jcenter()\\n}\\n\\ndependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"io.vertx:vertx-web\\\"\"), \"\\n}\\n\\nvertx {\\n  mainVerticle = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"sample.MainVerticle\\\"\"), \"\\n  watch = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/**/*\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"build.gradle\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"yarn.lock\\\"\"), \"]\\n  onRedeploy = [\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"classes\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"webpack\\\"\"), \"]\\n}\\n\\ntask webpack(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-attr\"\n  }), \"type:\"), \" Exec) {\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/yarn.lock\\\"\"), \")\\n  inputs.file(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/webpack.config.js\\\"\"), \")\\n  inputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/src/main/webapp\\\"\"), \")\\n  outputs.dir(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$buildDir/resources/main/webroot\\\"\"), \")\\n  commandLine \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"$projectDir/node_modules/.bin/webpack\\\"\"), \"\\n}\\n\")), mdx(\"p\", null, \"This cus\\xADtom build ex\\xADposes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" task that in\\xADvokes Web\\xADPack, with proper file track\\xADing so that Gra\\xADdle knows when the task is up-\\u200Bto-date or not.\"), mdx(\"p\", null, \"The Node plug\\xADin adds many tasks, and in\\xADte\\xADgrates fine with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn\"), \", so fetch\\xADing all NPM de\\xADpen\\xADden\\xADcies is done by call\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew yarn\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertxRun\"), \" task now re\\xADde\\xADploys on mod\\xADi\\xADfi\\xADca\\xADtions to files in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/\"), \" (and sub-\\u200Bfolders), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn.lock\"), \", call\\xADing both the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"classes\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" tasks:\"), mdx(\"div\", {\n    className: \"youtube-embed\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\",\n    frameBorder: \"0\",\n    allowFullScreen: true\n  })), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#summary\"\n  })), \"Summary\"), mdx(\"p\", null, \"The Vert.x Gra\\xADdle plug\\xADin pro\\xADvides lots of de\\xADfaults to con\\xADfig\\xADure a Gra\\xADdle project for Vert.x ap\\xADpli\\xADca\\xADtions, pro\\xADduc\\xADing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fat Jars\"), \" and of\\xADfer\\xADing a run\\xADning task with au\\xADto\\xADmatic re\\xADde\\xADploy\\xADment.\\nThe plug\\xADin also in\\xADte\\xADgrates well with other plu\\xADg\\xADins and ex\\xADter\\xADnal tools for which a Gra\\xADdle task is avail\\xADable.\"), mdx(\"p\", null, \"The project is still in its early stages and we are look\\xADing for\\xADward to hear\\xADing from you!\"), mdx(\"h3\", {\n    \"id\": \"links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#links\"\n  })), \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jponge/vertx-gradle-plugin\"\n  }), \"The project on GitHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\"\n  }), \"The plug\\xADin on the Gra\\xADdle plu\\xADg\\xADins por\\xADtal\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Eclipse Vert.x is a ver­sa­tile toolkit, and as such it does not have any strong opin­ion on the tools that you should be using.</p><p>Gra­dle is a pop­u­lar build tool in the JVM ecosys­tem, and it is quite easy to use for build­ing Vert.x project as <a href=\"https://github.com/vert-x3/vertx-examples/blob/master/gradle-verticles/gradle-verticle/build.gradle\">show in one of the <code>vertx-examples</code> sam­ples</a> where a so-​called <em>fat Jar</em> is being pro­duced.</p><p>The new <a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">Vert.x Gra­dle plugin</a> of­fers an <em>opin­ion­ated</em> plug­in for build­ing Vert.x ap­pli­ca­tions with Gra­dle.</p><p>It au­to­mat­i­cally ap­plies the fol­low­ing plu­g­ins:</p><ul><li><code>java</code> (and sets the source com­pat­i­bil­ity to Java 8),</li><li><code>application</code> + <code>shadow</code> to gen­er­ate fat Jars with all de­pen­den­cies bun­dled,</li><li><code>nebula-dependency-recommender-plugin</code> so that you can omit ver­sions from mod­ules from the the Vert.x stack.</li></ul><p>The plug­in au­to­mat­i­cally adds <code>io.vertx:vertx-core</code> as a <code>compile</code> de­pen­dency, so you don’t need to do it.</p><p>The plug­in pro­vides a <code>vertxRun</code> task that can take ad­van­tage of the Vert.x auto-​reloading ca­pa­bil­i­ties, so you can just run it then have your code being au­to­mat­i­cally com­piled and re­loaded as you make changes.</p><h2 id=\"getting-started\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#getting-started\"></a>Getting started</h2><p>A min­i­mal <code>build.gradle</code> looks like:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&#x27;sample.App&#x27;</span>\n}\n</code></pre><p>Pro­vided <code>sample.App</code> is a Vert.x ver­ti­cle, then:</p><ol><li><code>gradle shadowJar</code> builds an ex­e­cutable Jar with all de­pen­den­cies: <code>java -jar build/libs/simple-project-fat.jar</code>, and</li><li><code>gradle vertxRun</code> starts the ap­pli­ca­tion and au­to­mat­i­cally re­com­piles (<code>gradle classes</code>) and re­loads the code when any file under <code>src/</code> is being added, mod­i­fied or deleted.</li></ol><h2 id=\"using-with-kotlin-or-groovy-or\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-kotlin-or-groovy-or\"></a>Using with Kotlin (or Groovy, or…)</h2><p>The plug­in in­te­grates well with plu­g­ins that add con­fig­u­ra­tions and tasks trig­gered by the <code>classes</code> task.</p><p>Here is how to use the plug­in with Kotlin (re­place the ver­sion num­bers with the lat­est ones…):</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;x.y.z&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin.jvm&#x27;</span> version <span class=\"hljs-string\">&#x27;a.b.c&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-lang-kotlin&#x27;</span>\n  compile <span class=\"hljs-string\">&#x27;org.jetbrains.kotlin:kotlin-stdlib-jre8&#x27;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n}\n\ntasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {\n  kotlinOptions {\n    jvmTarget = <span class=\"hljs-string\">&quot;1.8&quot;</span>\n  }\n}\n</code></pre><h2 id=\"using-with-webpack-or-any-other-custom-task\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#using-with-webpack-or-any-other-custom-task\"></a>Using with WebPack (or any other custom task)</h2><p>Web­Pack is pop­u­lar to bun­dle web as­sets, and there is even <a href=\"https://guides.gradle.org/running-webpack-with-gradle/\">a guide for its in­te­gra­tion with Gra­dle</a>.</p><p>Mix­ing the Vert.x Gra­dle plug­in with Web­Pack is very sim­ple, es­pe­cially in com­bi­na­tion with the <code>com.moowork.node</code> plug­in that in­te­grates Node into Gra­dle.</p><p>Sup­pose we want to mix Vert.x code and JavaScript with Gra­dle and Web­Pack.\nWe as­sume a <code>package.json</code> as:</p><pre><code class=\"hljs language-javascript\">{\n  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;webpack-sample&quot;</span>,\n  <span class=\"hljs-string\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;0.0.1&quot;</span>,\n  <span class=\"hljs-string\">&quot;description&quot;</span>: <span class=\"hljs-string\">&quot;A sample with Vert.x, Gradle and Webpack&quot;</span>,\n  <span class=\"hljs-string\">&quot;main&quot;</span>: <span class=\"hljs-string\">&quot;src/main/webapp/index.js&quot;</span>,\n  <span class=\"hljs-string\">&quot;scripts&quot;</span>: {\n    <span class=\"hljs-string\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;author&quot;</span>: <span class=\"hljs-string\">&quot;&quot;</span>,\n  <span class=\"hljs-string\">&quot;license&quot;</span>: <span class=\"hljs-string\">&quot;ISC&quot;</span>,\n  <span class=\"hljs-string\">&quot;devDependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;webpack&quot;</span>: <span class=\"hljs-string\">&quot;^2.7.0&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;dependencies&quot;</span>: {\n    <span class=\"hljs-string\">&quot;axios&quot;</span>: <span class=\"hljs-string\">&quot;^0.16.2&quot;</span>\n  }\n}\n</code></pre><p>and <code>webpack.config.js</code> as:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">entry</span>: <span class=\"hljs-string\">&#x27;./src/main/webapp/index.js&#x27;</span>,\n  <span class=\"hljs-attr\">output</span>: {\n    <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">&#x27;./build/resources/main/webroot/bundle.js&#x27;</span>\n  }\n}\n</code></pre><p>The <code>build.gradle</code> file is the fol­low­ing:</p><pre><code class=\"hljs language-groovy\">plugins {\n  id <span class=\"hljs-string\">&#x27;io.vertx.vertx-plugin&#x27;</span> version <span class=\"hljs-string\">&#x27;0.0.4&#x27;</span>\n  id <span class=\"hljs-string\">&#x27;com.moowork.node&#x27;</span> version <span class=\"hljs-string\">&#x27;1.2.0&#x27;</span>\n}\n\nrepositories {\n  jcenter()\n}\n\ndependencies {\n  compile <span class=\"hljs-string\">&quot;io.vertx:vertx-web&quot;</span>\n}\n\nvertx {\n  mainVerticle = <span class=\"hljs-string\">&quot;sample.MainVerticle&quot;</span>\n  watch = [<span class=\"hljs-string\">&quot;src/**/*&quot;</span>, <span class=\"hljs-string\">&quot;build.gradle&quot;</span>, <span class=\"hljs-string\">&quot;yarn.lock&quot;</span>]\n  onRedeploy = [<span class=\"hljs-string\">&quot;classes&quot;</span>, <span class=\"hljs-string\">&quot;webpack&quot;</span>]\n}\n\ntask webpack(<span class=\"hljs-attr\">type:</span> Exec) {\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/yarn.lock&quot;</span>)\n  inputs.file(<span class=\"hljs-string\">&quot;$projectDir/webpack.config.js&quot;</span>)\n  inputs.dir(<span class=\"hljs-string\">&quot;$projectDir/src/main/webapp&quot;</span>)\n  outputs.dir(<span class=\"hljs-string\">&quot;$buildDir/resources/main/webroot&quot;</span>)\n  commandLine <span class=\"hljs-string\">&quot;$projectDir/node_modules/.bin/webpack&quot;</span>\n}\n</code></pre><p>This cus­tom build ex­poses a <code>webpack</code> task that in­vokes Web­Pack, with proper file track­ing so that Gra­dle knows when the task is up-​to-date or not.</p><p>The Node plug­in adds many tasks, and in­te­grates fine with <code>npm</code> or <code>yarn</code>, so fetch­ing all NPM de­pen­den­cies is done by call­ing <code>./gradlew yarn</code>.</p><p>The <code>vertxRun</code> task now re­de­ploys on mod­i­fi­ca­tions to files in <code>src/</code> (and sub-​folders), <code>build.gradle</code> and <code>yarn.lock</code>, call­ing both the <code>classes</code> and <code>webpack</code> tasks:</p><div class=\"youtube-embed\"><iframe src=\"https://www.youtube.com/embed/OGy-1w8Z6Dc?rel=0\" frameBorder=\"0\" allowfullscreen=\"\"></iframe></div><h2 id=\"summary\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#summary\"></a>Summary</h2><p>The Vert.x Gra­dle plug­in pro­vides lots of de­faults to con­fig­ure a Gra­dle project for Vert.x ap­pli­ca­tions, pro­duc­ing <em>fat Jars</em> and of­fer­ing a run­ning task with au­to­matic re­de­ploy­ment.\nThe plug­in also in­te­grates well with other plu­g­ins and ex­ter­nal tools for which a Gra­dle task is avail­able.</p><p>The project is still in its early stages and we are look­ing for­ward to hear­ing from you!</p><h3 id=\"links\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#links\"></a>Links</h3><ul><li><a href=\"https://github.com/jponge/vertx-gradle-plugin\">The project on GitHub</a></li><li><a href=\"https://plugins.gradle.org/plugin/io.vertx.vertx-plugin\">The plug­in on the Gra­dle plu­g­ins por­tal</a></li></ul>","scope":{}},"tfIdfTerms":[{"term":"plugin","tf":16},{"term":"gradl","tf":12},{"term":"task","tf":11},{"term":"us","tf":5},{"term":"build","tf":5},{"term":"automat","tf":5},{"term":"integr","tf":5},{"term":"webpack","tf":5},{"term":"project","tf":4},{"term":"jar","tf":4},{"term":"depend","tf":4},{"term":"file","tf":4},{"term":"tool","tf":3},{"term":"call","tf":3},{"term":"fat","tf":3},{"term":"applic","tf":3},{"term":"add","tf":3},{"term":"provid","tf":3},{"term":"reload","tf":3},{"term":"code","tf":3},{"term":"not","tf":2},{"term":"opinion","tf":2},{"term":"popular","tf":2},{"term":"on","tf":2},{"term":"produc","tf":2}]},{"filename":"blog/2017-08-21-introducing-vert-x-mqtt-client.mdx","date":"2017-08-21","slug":"introducing-vert-x-mqtt-client","meta":{"title":"Introducing Vert.x MQTT client","category":"guides","authors":[{"name":"Pavel Drankov","github_id":"Sammers21"}],"summary":"In this article, we will see how to set up the new Vert.x MQTT client. An example project is available on GitHub."},"readingTime":{"text":"2 min read","minutes":1.72,"time":103200,"words":344},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this ar\\xADti\\xADcle, we will see how to set up the new Vert.x MQTT client. Ac\\xADtu\\xADally, I have a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Sammers21/vertx-mqtt-client-example\"\n  }), \"real ex\\xADam\\xADple\"), \" so you can try it quickly.\"), mdx(\"p\", null, \"If you are using Maven or Gra\\xADdle, add the fol\\xADlow\\xADing de\\xADpen\\xADdency to the de\\xADpen\\xADden\\xADcies sec\\xADtion of your project de\\xADscrip\\xADtor to ac\\xADcess the Vert.x MQTT client:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maven (in your pom.xml):\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-mqtt\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.5.0.Beta1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gra\\xADdle (in your build.gra\\xADdle file):\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), \"dependencies {\\n  compile \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'io.vertx:vertx-mqtt:3.5.0.Beta1'\"), \"\\n}\\n\")), mdx(\"p\", null, \"Now that you\\u2019ve set up your project, you can cre\\xADate a sim\\xADple ap\\xADpli\\xADca\\xADtion which will re\\xADceive all mes\\xADsages from all bro\\xADker chan\\xADnels:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.core.AbstractVerticle;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.mqtt.MqttClient;\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" io.vertx.mqtt.MqttClientOptions;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" java.io.UnsupportedEncodingException;\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"MainVerticle\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"AbstractVerticle\"), \" \"), \"{\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Override\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"public\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"void\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"()\"), \" \"), \"{\\n     MqttClientOptions options = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions();\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// specify broker host\"), \"\\n      options.setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"iot.eclipse.org\\\"\"), \");\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// specify max size of message in bytes\"), \"\\n      options.setMaxMessageSize(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"100_000_000\"), \");\\n\\n    MqttClient client = MqttClient.create(vertx, options);\\n\\n    client.publishHandler(s -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"try\"), \" {\\n        String message = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" String(s.payload().getBytes(), \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"UTF-8\\\"\"), \");\\n        System.out.println(String.format(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Receive message with content: \\\\\\\"%s\\\\\\\" from topic \\\\\\\"%s\\\\\\\"\\\"\"), \", message, s.topicName()));\\n      } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"catch\"), \" (UnsupportedEncodingException e) {\\n        e.printStackTrace();\\n      }\\n    });\\n\\n    client.connect(s -> {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// subscribe to all subtopics\"), \"\\n      client.subscribe(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"#\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"0\"), \");\\n    });\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pub\\xADlish\\xADHan\\xADdler\"), \" is the han\\xADdler called each time the bro\\xADker, lo\\xADcated at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iot.eclipse.org:1883\"), \", sends a mes\\xADsage to you, from the top\\xADics you are sub\\xADscrib\\xADing for.\"), mdx(\"p\", null, \"But only pro\\xADvid\\xADing a han\\xADdler is not enough, you should also con\\xADnect to the bro\\xADker and sub\\xADscribe to some top\\xADics. For this rea\\xADson, you should use the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"con\\xADnect\"), \" method and then call \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sub\\xADscribe\"), \" when the con\\xADnec\\xADtion es\\xADtab\\xADlished. \"), mdx(\"p\", null, \"To de\\xADploy this ver\\xADti\\xADcle from an ap\\xADpli\\xADca\\xADtion you should have in your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"main\"), \" method some\\xADthing like that:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Vertx vertx = Vertx.vertx();\\nvertx.deployVerticle(MainVerticle.class.getCanonicalName());\\n\")), mdx(\"p\", null, \"When you have com\\xADpleted all steps cor\\xADrectly the re\\xADsult should look like that:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://i.imgur.com/b4yYQJE.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"As the al\\xADter\\xADna\\xADtive and rec\\xADom\\xADmended way to boot\\xADstrap Vert.x ap\\xADpli\\xADca\\xADtions you can use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-maven-starter\"\n  }), \"vertx-\\u200Bmaven-starter\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-gradle-starter\"\n  }), \"vertx-\\u200Bgradle-starter\"), \". For com\\xADplet\\xADing this guide I have used the first one. The final source code avail\\xADable \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Sammers21/vertx-mqtt-client-example\"\n  }), \"here\"), \". If you would like to learn more about Vert.x MQTT client API then check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-mqtt-client/blob/initial-work/src/main/asciidoc/java/index.adoc\"\n  }), \"full doc\\xADu\\xADmen\\xADta\\xADtion\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\"\n  }), \"more ex\\xADam\\xADples\"), \". \"), mdx(\"p\", null, \"Thank you for read\\xADing!\"), mdx(\"p\", null, \"Cheers!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>In this ar­ti­cle, we will see how to set up the new Vert.x MQTT client. Ac­tu­ally, I have a <a href=\"https://github.com/Sammers21/vertx-mqtt-client-example\">real ex­am­ple</a> so you can try it quickly.</p><p>If you are using Maven or Gra­dle, add the fol­low­ing de­pen­dency to the de­pen­den­cies sec­tion of your project de­scrip­tor to ac­cess the Vert.x MQTT client:</p><ul><li>Maven (in your pom.xml):</li></ul><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-mqtt<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.5.0.Beta1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><ul><li>Gra­dle (in your build.gra­dle file):</li></ul><pre><code class=\"hljs language-groovy\">dependencies {\n  compile <span class=\"hljs-string\">&#x27;io.vertx:vertx-mqtt:3.5.0.Beta1&#x27;</span>\n}\n</code></pre><p>Now that you’ve set up your project, you can cre­ate a sim­ple ap­pli­ca­tion which will re­ceive all mes­sages from all bro­ker chan­nels:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-keyword\">import</span> io.vertx.core.AbstractVerticle;\n<span class=\"hljs-keyword\">import</span> io.vertx.mqtt.MqttClient;\n<span class=\"hljs-keyword\">import</span> io.vertx.mqtt.MqttClientOptions;\n\n<span class=\"hljs-keyword\">import</span> java.io.UnsupportedEncodingException;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainVerticle</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractVerticle</span> </span>{\n\n  <span class=\"hljs-meta\">@Override</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">()</span> </span>{\n     MqttClientOptions options = <span class=\"hljs-keyword\">new</span> MqttClientOptions();\n      <span class=\"hljs-comment\">// specify broker host</span>\n      options.setHost(<span class=\"hljs-string\">&quot;iot.eclipse.org&quot;</span>);\n      <span class=\"hljs-comment\">// specify max size of message in bytes</span>\n      options.setMaxMessageSize(<span class=\"hljs-number\">100_000_000</span>);\n\n    MqttClient client = MqttClient.create(vertx, options);\n\n    client.publishHandler(s -&gt; {\n      <span class=\"hljs-keyword\">try</span> {\n        String message = <span class=\"hljs-keyword\">new</span> String(s.payload().getBytes(), <span class=\"hljs-string\">&quot;UTF-8&quot;</span>);\n        System.out.println(String.format(<span class=\"hljs-string\">&quot;Receive message with content: \\&quot;%s\\&quot; from topic \\&quot;%s\\&quot;&quot;</span>, message, s.topicName()));\n      } <span class=\"hljs-keyword\">catch</span> (UnsupportedEncodingException e) {\n        e.printStackTrace();\n      }\n    });\n\n    client.connect(s -&gt; {\n      <span class=\"hljs-comment\">// subscribe to all subtopics</span>\n      client.subscribe(<span class=\"hljs-string\">&quot;#&quot;</span>, <span class=\"hljs-number\">0</span>);\n    });\n  }\n}\n</code></pre><p>The <strong>pub­lish­Han­dler</strong> is the han­dler called each time the bro­ker, lo­cated at <code>iot.eclipse.org:1883</code>, sends a mes­sage to you, from the top­ics you are sub­scrib­ing for.</p><p>But only pro­vid­ing a han­dler is not enough, you should also con­nect to the bro­ker and sub­scribe to some top­ics. For this rea­son, you should use the <strong>con­nect</strong> method and then call <strong>sub­scribe</strong> when the con­nec­tion es­tab­lished. </p><p>To de­ploy this ver­ti­cle from an ap­pli­ca­tion you should have in your <strong>main</strong> method some­thing like that:</p><pre><code class=\"hljs language-java\">Vertx vertx = Vertx.vertx();\nvertx.deployVerticle(MainVerticle.class.getCanonicalName());\n</code></pre><p>When you have com­pleted all steps cor­rectly the re­sult should look like that:</p><p><img src=\"http://i.imgur.com/b4yYQJE.gif\"/></p><p>As the al­ter­na­tive and rec­om­mended way to boot­strap Vert.x ap­pli­ca­tions you can use <a href=\"https://github.com/vert-x3/vertx-maven-starter\">vertx-​maven-starter</a> or <a href=\"https://github.com/vert-x3/vertx-gradle-starter\">vertx-​gradle-starter</a>. For com­plet­ing this guide I have used the first one. The final source code avail­able <a href=\"https://github.com/Sammers21/vertx-mqtt-client-example\">here</a>. If you would like to learn more about Vert.x MQTT client API then check out the <a href=\"https://github.com/vert-x3/vertx-mqtt-client/blob/initial-work/src/main/asciidoc/java/index.adoc\">full doc­u­men­ta­tion</a> and <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\">more ex­am­ples</a>. </p><p>Thank you for read­ing!</p><p>Cheers!</p>","scope":{}},"tfIdfTerms":[{"term":"us","tf":4},{"term":"gradl","tf":4},{"term":"mqtt","tf":3},{"term":"client","tf":3},{"term":"maven","tf":3},{"term":"applic","tf":3},{"term":"broker","tf":3},{"term":"subscrib","tf":3},{"term":"connect","tf":3},{"term":"will","tf":2},{"term":"set","tf":2},{"term":"exampl","tf":2},{"term":"depend","tf":2},{"term":"project","tf":2},{"term":"messag","tf":2},{"term":"handler","tf":2},{"term":"call","tf":2},{"term":"topic","tf":2},{"term":"method","tf":2},{"term":"complet","tf":2},{"term":"starter","tf":2},{"term":"articl","tf":1},{"term":"new","tf":1},{"term":"actual","tf":1},{"term":"real","tf":1}]},{"filename":"blog/2017-08-10-vert-x-3-5-0-beta1.mdx","date":"2017-08-10","slug":"vert-x-3-5-0-beta1","meta":{"title":"Vert.x 3.5.0.Beta1","category":"releases","authors":[{"name":"Julien Viet","github_id":"vietj"}],"summary":"It's summer time and we have just released Vert.x 3.5.0.Beta1!"},"readingTime":{"text":"3 min read","minutes":2.075,"time":124500.00000000001,"words":415},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It\\u2019s sum\\xADmer time and we have just re\\xADleased Vert.x 3.5.0.Beta1!\"), mdx(\"h2\", {\n    \"id\": \"lets-go-rxjava2\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#lets-go-rxjava2\"\n  })), \"Let\\u2019s go RxJava2\"), mdx(\"p\", null, \"First and fore\\xADmost this re\\xADlease de\\xADliv\\xADers the Rx\\xADJava2 API with sup\\xADport of its full range of types.\"), mdx(\"p\", null, \"In ad\\xADdi\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Single\"), \", Rx\\xADi\\xADfied APIs ex\\xADpose also the\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Completable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Maybe\"), \" types\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<Void>>\"), \"\\nCompletable completable = server.rxClose();\\n\\ncompletable.subscribe(() -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"closed\\\"\"), \"));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// expose Handler<AsyncResult<String>> where the result can be null\"), \"\\nMaybe<String> ipAddress = dnsClient.rxLookup(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"www.google.com\\\"\"), \");\\nipAddress.subscribe(\\n  value -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"resolved to \\\"\"), \" + value),\\n  err -> err.printStackTrace(),\\n  () -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"does not resolve\\\"\"), \"));\\n\")), mdx(\"p\", null, \"Rx\\xADJava aug\\xADments Vert.x streams with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toObservable()\"), \" method, Rx\\xADJava2 adds the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"toFlowable()\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Flowable<Buffer> maps to a ReadStream<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// back-pressured stream\"), \"\\nFlowable<Buffer> flowable = asyncFile.toFlowable();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// but we still can get an Observable<Buffer>\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// non back-pressured stream\"), \"\\nObservable<Buffer> flowable = asyncFile.toObservable();\\n\")), mdx(\"p\", null, \"What\\u2019s so dif\\xADfer\\xADent be\\xADtween \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flowable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Observable\"), \" ? the for\\xADmer han\\xADdles back-\\u200Bpressure, i.e the\\nsub\\xADscriber can con\\xADtrol the flow of items and the later can not!!!\"), mdx(\"p\", null, \"You can read the doc\\xADu\\xADmen\\xADta\\xADtion in the beta sec\\xADtion of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/3.5.0.Beta1/vertx-rx/java2/\"\n  }), \"docs\"), \"\\nor go straight to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples\"\n  }), \"ex\\xADam\\xADples\")), mdx(\"h2\", {\n    \"id\": \"mqtt-client\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#mqtt-client\"\n  })), \"MQTT Client\"), mdx(\"p\", null, \"In Vert.x 3.4 we added the MQTT server, 3.5 com\\xADpletes the MQTT story with the MQTT client:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"MqttClient mqttClient = MqttClient.create(vertx,\\n   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" MqttClientOptions()\\n     .setPort(BROKER_PORT)\\n     .setHost(BROKER_HOST)).connect(ar ->\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Connected to a server\\\"\"), \");\\n\\n    mqttClient.publish(\\n      MQTT_TOPIC,\\n      Buffer.buffer(MQTT_MESSAGE),\\n      MqttQoS.AT_MOST_ONCE,\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"false\"), \",\\n      s -> mqttClient.disconnect(d -> System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Disconnected from server\\\"\"), \")));\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    System.out.println(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Failed to connect to a server\\\"\"), \");\\n    ar.cause().printStackTrace();\\n  }\\n});\\n\")), mdx(\"p\", null, \"You can find MQTT client and server ex\\xADam\\xADples \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\"\n  }), \"here\")), mdx(\"h2\", {\n    \"id\": \"auth-handler-chaining\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#auth-handler-chaining\"\n  })), \"Auth handler chaining\"), mdx(\"p\", null, \"There are times when you want to sup\\xADport mul\\xADti\\xADple authN/authZ mech\\xADa\\xADnisms in a sin\\xADgle ap\\xADpli\\xADca\\xADtion.\"), mdx(\"p\", null, \"Vert.x Web sup\\xADports auth han\\xADdlers \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vertx.io/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers\"\n  }), \"chain\\xADing\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"ChainAuthHandler chain = ChainAuthHandler.create();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add http basic auth handler to the chain\"), \"\\nchain.append(BasicAuthHandler.create(provider));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// add form redirect auth handler to the chain\"), \"\\nchain.append(RedirectAuthHandler.create(provider));\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// secure your route\"), \"\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/secure/resource\\\"\"), \").handler(chain);\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// your app\"), \"\\nrouter.route(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/secure/resource\\\"\"), \").handler(ctx -> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// do something...\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"finally\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#finally\"\n  })), \"Finally\"), mdx(\"p\", null, \"This beta also pro\\xADvides\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vert.x Con\\xADfig stores for Vault and Con\\xADsul\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Up\\xADgrade to Hazel\\xADcast 3.8.2\")), mdx(\"h2\", {\n    \"id\": \"use-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#use-it\"\n  })), \"Use it!\"), mdx(\"p\", null, \"You can use and con\\xADsume it in your projects from Maven or Gra\\xADdle as usual with the ver\\xADsion \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3.5.0.Beta1\"), \" or read\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vertx.io/docs/index-beta.html\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion pre\\xADview\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"see the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1\"\n  }), \"ex\\xADam\\xADples\"))), mdx(\"p\", null, \"You can also down\\xADload var\\xADi\\xADous bi\\xADna\\xADries from Maven Cen\\xADtral:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz\"\n  }), \"base dis\\xADtrib\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz\"\n  }), \"full dis\\xADtrib\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip\"\n  }), \"docs zip\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz\"\n  }), \"scala dis\\xADtrib\"))), mdx(\"p\", null, \"as usual feed\\xADback is very im\\xADpor\\xADtant to us and one goal of this beta re\\xADlease is to let the com\\xADmu\\xADnity\\npro\\xADvide early feed\\xADback!\"), mdx(\"p\", null, \"The final is ex\\xADpected at the be\\xADgin\\xADning of Oc\\xADto\\xADber.\"), mdx(\"p\", null, \"Enjoy\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>It’s sum­mer time and we have just re­leased Vert.x 3.5.0.Beta1!</p><h2 id=\"lets-go-rxjava2\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#lets-go-rxjava2\"></a>Let’s go RxJava2</h2><p>First and fore­most this re­lease de­liv­ers the Rx­Java2 API with sup­port of its full range of types.</p><p>In ad­di­tion of <code>Single</code>, Rx­i­fied APIs ex­pose also the<code>Completable</code> and <code>Maybe</code> types</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;Void&gt;&gt;</span>\nCompletable completable = server.rxClose();\n\ncompletable.subscribe(() -&gt; System.out.println(<span class=\"hljs-string\">&quot;closed&quot;</span>));\n\n<span class=\"hljs-comment\">// expose Handler&lt;AsyncResult&lt;String&gt;&gt; where the result can be null</span>\nMaybe&lt;String&gt; ipAddress = dnsClient.rxLookup(<span class=\"hljs-string\">&quot;www.google.com&quot;</span>);\nipAddress.subscribe(\n  value -&gt; System.out.println(<span class=\"hljs-string\">&quot;resolved to &quot;</span> + value),\n  err -&gt; err.printStackTrace(),\n  () -&gt; System.out.println(<span class=\"hljs-string\">&quot;does not resolve&quot;</span>));\n</code></pre><p>Rx­Java aug­ments Vert.x streams with a <code>toObservable()</code> method, Rx­Java2 adds the <code>toFlowable()</code> method:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Flowable&lt;Buffer&gt; maps to a ReadStream&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// back-pressured stream</span>\nFlowable&lt;Buffer&gt; flowable = asyncFile.toFlowable();\n\n<span class=\"hljs-comment\">// but we still can get an Observable&lt;Buffer&gt;</span>\n<span class=\"hljs-comment\">// non back-pressured stream</span>\nObservable&lt;Buffer&gt; flowable = asyncFile.toObservable();\n</code></pre><p>What’s so dif­fer­ent be­tween <code>Flowable</code> and <code>Observable</code> ? the for­mer han­dles back-​pressure, i.e the\nsub­scriber can con­trol the flow of items and the later can not!!!</p><p>You can read the doc­u­men­ta­tion in the beta sec­tion of the <a href=\"http://vertx.io/docs/3.5.0.Beta1/vertx-rx/java2/\">docs</a>\nor go straight to the <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples\">ex­am­ples</a></p><h2 id=\"mqtt-client\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#mqtt-client\"></a>MQTT Client</h2><p>In Vert.x 3.4 we added the MQTT server, 3.5 com­pletes the MQTT story with the MQTT client:</p><pre><code class=\"hljs language-java\">MqttClient mqttClient = MqttClient.create(vertx,\n   <span class=\"hljs-keyword\">new</span> MqttClientOptions()\n     .setPort(BROKER_PORT)\n     .setHost(BROKER_HOST)).connect(ar -&gt;\n  <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n    System.out.println(<span class=\"hljs-string\">&quot;Connected to a server&quot;</span>);\n\n    mqttClient.publish(\n      MQTT_TOPIC,\n      Buffer.buffer(MQTT_MESSAGE),\n      MqttQoS.AT_MOST_ONCE,\n      <span class=\"hljs-keyword\">false</span>,\n      <span class=\"hljs-keyword\">false</span>,\n      s -&gt; mqttClient.disconnect(d -&gt; System.out.println(<span class=\"hljs-string\">&quot;Disconnected from server&quot;</span>)));\n  } <span class=\"hljs-keyword\">else</span> {\n    System.out.println(<span class=\"hljs-string\">&quot;Failed to connect to a server&quot;</span>);\n    ar.cause().printStackTrace();\n  }\n});\n</code></pre><p>You can find MQTT client and server ex­am­ples <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples\">here</a></p><h2 id=\"auth-handler-chaining\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#auth-handler-chaining\"></a>Auth handler chaining</h2><p>There are times when you want to sup­port mul­ti­ple authN/authZ mech­a­nisms in a sin­gle ap­pli­ca­tion.</p><p>Vert.x Web sup­ports auth han­dlers <a href=\"http://vertx.io/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers\">chain­ing</a></p><pre><code class=\"hljs language-java\">ChainAuthHandler chain = ChainAuthHandler.create();\n\n<span class=\"hljs-comment\">// add http basic auth handler to the chain</span>\nchain.append(BasicAuthHandler.create(provider));\n\n<span class=\"hljs-comment\">// add form redirect auth handler to the chain</span>\nchain.append(RedirectAuthHandler.create(provider));\n\n<span class=\"hljs-comment\">// secure your route</span>\nrouter.route(<span class=\"hljs-string\">&quot;/secure/resource&quot;</span>).handler(chain);\n\n<span class=\"hljs-comment\">// your app</span>\nrouter.route(<span class=\"hljs-string\">&quot;/secure/resource&quot;</span>).handler(ctx -&gt; {\n  <span class=\"hljs-comment\">// do something...</span>\n});\n</code></pre><h2 id=\"finally\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#finally\"></a>Finally</h2><p>This beta also pro­vides</p><ul><li>Vert.x Con­fig stores for Vault and Con­sul</li><li>Up­grade to Hazel­cast 3.8.2</li></ul><h2 id=\"use-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#use-it\"></a>Use it!</h2><p>You can use and con­sume it in your projects from Maven or Gra­dle as usual with the ver­sion <code>3.5.0.Beta1</code> or read</p><ul><li>the <a href=\"http://vertx.io/docs/index-beta.html\">doc­u­men­ta­tion pre­view</a></li><li>see the <a href=\"https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1\">ex­am­ples</a></li></ul><p>You can also down­load var­i­ous bi­na­ries from Maven Cen­tral:</p><ul><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz\">base dis­trib</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz\">full dis­trib</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip\">docs zip</a></li><li><a href=\"https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz\">scala dis­trib</a></li></ul><p>as usual feed­back is very im­por­tant to us and one goal of this beta re­lease is to let the com­mu­nity\npro­vide early feed­back!</p><p>The final is ex­pected at the be­gin­ning of Oc­to­ber.</p><p>Enjoy</p>","scope":{}},"tfIdfTerms":[{"term":"mqtt","tf":5},{"term":"releas","tf":3},{"term":"rxjava2","tf":3},{"term":"support","tf":3},{"term":"beta","tf":3},{"term":"exampl","tf":3},{"term":"client","tf":3},{"term":"us","tf":3},{"term":"distrib","tf":3},{"term":"time","tf":2},{"term":"let","tf":2},{"term":"go","tf":2},{"term":"api","tf":2},{"term":"full","tf":2},{"term":"type","tf":2},{"term":"method","tf":2},{"term":"read","tf":2},{"term":"document","tf":2},{"term":"doc","tf":2},{"term":"server","tf":2},{"term":"auth","tf":2},{"term":"handler","tf":2},{"term":"chain","tf":2},{"term":"final","tf":2},{"term":"provid","tf":2}]},{"filename":"blog/2017-07-04-openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage.mdx","date":"2017-07-04","slug":"openapi-fka-swagger-3-support-in-eclipse-vert-x-now-in-test-stage","meta":{"title":"OpenAPI (fka Swagger) 3 support in Eclipse Vert.x now in test stage!","category":"guides","authors":[{"name":"Francesco Guardiani","github_id":"slinkydeveloper"}],"summary":"As GSoC 2017's student, I'm working on an embedded support to OpenAPI 3 standard inside Eclipse Vert.x framework. Now, after a lot of work, you can try it!"},"readingTime":{"text":"6 min read","minutes":5.8,"time":348000,"words":1160},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Alert, {\n    info: true,\n    title: \"Now on upstream!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"We have pub\\xADlished this pack\\xADage with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vertx-web-api-contract\"))), mdx(\"p\", null, \"As GSoC 2017\\u2019s stu\\xADdent, I\\u2019m ac\\xADtu\\xADally work\\xADing on an em\\xADbed\\xADded sup\\xADport to Ope\\xADnAPI 3 stan\\xADdard in\\xADside Eclipse Vert.x frame\\xADwork. Now, after a lot of work, you can try it!\"), mdx(\"h2\", {\n    \"id\": \"why-openapi-3\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#why-openapi-3\"\n  })), \"Why OpenAPI 3?\"), mdx(\"p\", null, \"Ope\\xADnAPI 2 is the most im\\xADpor\\xADtant industry-\\u200Bgrade stan\\xADdard for API Spec\\xADi\\xADfi\\xADca\\xADtions. As you can see on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.openapis.org/blog/2017/05/25/the-open-api-initiative-is-sending-you-a-save-the-date-card?utm_source=Blog&utm_medium=Twitter&utm_campaign=SaveTheDate\"\n  }), \"of\\xADfi\\xADcial blog of Ope\\xADnAPI Ini\\xADtia\\xADtive\"), \", the re\\xADlease of ver\\xADsion 3 is be\\xADhind the cor\\xADner, so we want to give to our com\\xADmu\\xADnity the lat\\xADest tools for the lat\\xADest stan\\xADdards!\"), mdx(\"p\", null, \"Vert.x project ob\\xADjec\\xADtive is to give you more in\\xADte\\xADgrated tools. With this new sup\\xADport, it gives you the abil\\xADity to use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://swaggerhub.com/blog/api-design/design-first-or-code-first-api-development/\"\n  }), \"De\\xADsign Dri\\xADven\"), \" (or De\\xADsign First) ap\\xADproach \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"with\\xADout load\\xADing any thirds par\\xADties li\\xADbraries\"), \".\"), mdx(\"h2\", {\n    \"id\": \"features\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#features\"\n  })), \"Features\"), mdx(\"p\", null, \"The ac\\xADtu\\xADally sup\\xADported fea\\xADtures are the fol\\xADlow\\xADing (we reefer to Ope\\xADnAPI ver\\xADsion 3.0.0):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ope\\xADnAPI 3 com\\xADpli\\xADant API spec\\xADi\\xADfi\\xADca\\xADtion val\\xADi\\xADda\\xADtion with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"load\\xADing of ex\\xADter\\xADnal Json schemas\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic re\\xADquest val\\xADi\\xADda\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic mount of se\\xADcu\\xADrity val\\xADi\\xADda\\xADtion han\\xADdlers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic 501 re\\xADsponse for not im\\xADple\\xADmented op\\xADer\\xADa\\xADtions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Router fac\\xADtory to pro\\xADvide all this fea\\xADtures to users\")), mdx(\"p\", null, \"Au\\xADto\\xADmatic re\\xADquest val\\xADi\\xADda\\xADtion is pro\\xADvided by a new han\\xADdler: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \". You can also de\\xADfine your own \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \" with\\xADout API spec\\xADi\\xADfi\\xADca\\xADtions, but I will dis\\xADcuss it later.\"), mdx(\"p\", null, \"The re\\xADquest val\\xADi\\xADda\\xADtion (pro\\xADvided by sub\\xADclass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenAPI3RequestValidationHandler\"), \") ac\\xADtu\\xADally sup\\xADports:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pa\\xADra\\xADme\\xADters de\\xADfined in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#parameter-object\"\n  }), \"Pa\\xADra\\xADme\\xADter ob\\xADject\"), \". We sup\\xADport every type of pa\\xADra\\xADme\\xADter, in\\xADclud\\xADing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"object\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"array\"), \". We also sup\\xADport every type de\\xADscrip\\xADtion field (for ex\\xADam\\xADple \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"format\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"minimum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"maximum\"), \", etc). Also, at the mo\\xADment, we sup\\xADport every com\\xADbi\\xADna\\xADtion of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"explode\"), \" field (ex\\xADcluded styles \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Body de\\xADfined in new \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#request-body-object\"\n  }), \"Re\\xADquest\\xADBody ob\\xADject\"), \". In par\\xADtic\\xADu\\xADlar:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \" the val\\xADi\\xADda\\xADtion han\\xADdler will take schema that you have de\\xADfined in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema\"), \" ob\\xADject and will val\\xADi\\xADdate json bod\\xADies with it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/x-www-form-urlencoded\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"multipart/form-data\"), \" the val\\xADi\\xADda\\xADtion han\\xADdler will take care of val\\xADi\\xADdate every pa\\xADra\\xADme\\xADters in form at\\xADtrib\\xADutes. It ac\\xADtu\\xADally sup\\xADports only comma sep\\xADa\\xADrated val\\xADues for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"object\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"arrays\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For other pa\\xADra\\xADme\\xADter types it will check \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Content-Type\"), \" header\")))), mdx(\"p\", null, \"Re\\xADquest val\\xADi\\xADda\\xADtion er\\xADrors will be car\\xADried with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RoutingContext\"), \" en\\xADcap\\xADsu\\xADlated in an ob\\xADject called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationHandler\"), \", so you have to at\\xADtach fail\\xADure han\\xADdler to check if some\\xADthing went wrong dur\\xADing val\\xADi\\xADda\\xADtion. Also the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RoutingContext\"), \" carry a new ob\\xADject called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" that en\\xADcap\\xADsu\\xADlate all re\\xADquest pa\\xADra\\xADme\\xADters de\\xADse\\xADri\\xADal\\xADized and parsed.\"), mdx(\"p\", null, \"Router fac\\xADtory is in\\xADtended to give you a re\\xADally sim\\xADple user in\\xADter\\xADface to use Ope\\xADnAPI 3 sup\\xADport. Most im\\xADpor\\xADtant fea\\xADtures are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Async load\\xADing of spec\\xADi\\xADfi\\xADca\\xADtion and its schema de\\xADpen\\xADden\\xADcies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic con\\xADvert Ope\\xADnAPI style paths to Vert.x style paths\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lazy meth\\xADods: op\\xADer\\xADa\\xADtions (com\\xADbi\\xADna\\xADtion of paths and HTTP meth\\xADods) are mounted in de\\xADf\\xADi\\xADn\\xADi\\xADtion order in\\xADside spec\\xADi\\xADfi\\xADca\\xADtion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Au\\xADto\\xADmatic mount of se\\xADcu\\xADrity val\\xADi\\xADda\\xADtion han\\xADdlers\")), mdx(\"p\", null, \"Also, it\\u2019s planned to re\\xADlease a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"project skele\\xADton gen\\xADer\\xADa\\xADtor\"), \" based on API spec.\"), mdx(\"h2\", {\n    \"id\": \"startup-your-project\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#startup-your-project\"\n  })), \"Startup your project\"), mdx(\"p\", null, \"We are in a test\\xADing stage, so the vertx-\\u200Bweb of\\xADfi\\xADcial repo doesn\\u2019t con\\xADtain it. To in\\xADclude the mod\\xADi\\xADfied ver\\xADsion of vertx-\\u200Bweb re\\xADplace your vertx-\\u200Bweb maven de\\xADpen\\xADdency with this one:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-xml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"io.vertx\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"groupId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"vertx-web-api-contract\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"artifactId\"), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"3.6.0\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"version\"), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-tag\"\n  }), \"</\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-name\"\n  }), \"dependency\"), \">\"), \"\\n\")), mdx(\"p\", null, \"Now you can start using Ope\\xADnAPI 3 in\\xADside your Vert.x pow\\xADered app!\"), mdx(\"p\", null, \"First of all you need to load the spec\\xADi\\xADfi\\xADca\\xADtion and con\\xADstruct the router fac\\xADtory:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Load the api spec. This operation is asynchronous\"), \"\\nOpenAPI3RouterFactory.create(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"this\"), \".vertx, \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"src/main/resources/petstore.yaml\\\"\"), \", ar -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (ar.succeeded()) {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Spec loaded with success\"), \"\\n        OpenAPI3RouterFactory routerFactory = ar.result();\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Something went wrong during router factory initialization\"), \"\\n        Throwable exception = ar.cause();\\n        logger.error(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Ops!\\\"\"), \", exception);\\n    }\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"handlers-mounting\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#handlers-mounting\"\n  })), \"Handlers mounting\"), mdx(\"p\", null, \"Now load han\\xADdlers to your op\\xADer\\xADa\\xADtions. Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addHandlerByOperationId(String operationId, Handler<RoutingContext> handler)\"), \" to add an han\\xADdler to a route that matches the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operationId\"), \". To add a fail\\xADure han\\xADdler use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addFailureHandlerByOperationId(String operationId, Handler<RoutingContext> failureHandler) \")), mdx(\"p\", null, \"You can, of course, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"add mul\\xADti\\xADple han\\xADdlers to same op\\xADer\\xADa\\xADtion\"), \", with\\xADout over\\xADwrit\\xADing the ex\\xADist\\xADing ones.\"), mdx(\"p\", null, \"This is an ex\\xADam\\xADple of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addHandlerByOperationId()\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Add an handler with operationId\"), \"\\nrouterFactory.addHandlerByOperationId(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"listPets\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle listPets operation (GET /pets)\"), \"\\n}, routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle failure\"), \"\\n});\\n\")), mdx(\"h2\", {\n    \"id\": \"request-parameters\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#request-parameters\"\n  })), \"Request parameters\"), mdx(\"p\", null, \"Now you can freely use re\\xADquest pa\\xADra\\xADme\\xADters. To get the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" ob\\xADject:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameters params = routingContext.get(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"parsedParameters\\\"\"), \");\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequestParameters\"), \" ob\\xADject pro\\xADvides all meth\\xADods to ac\\xADcess to query, cookie, header, path, form and en\\xADtire body pa\\xADra\\xADme\\xADters. Here are some ex\\xADam\\xADples of how to use this ob\\xADject.\"), mdx(\"p\", null, \"Pa\\xADra\\xADme\\xADter with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awesomeParameter\"), \" with type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter awesomeParameter = params.queryParameter(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"awesomeParameter\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (awesomeParameter != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \") {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// awesomeParameter parameter exists, but we are not sure that is empty or not (query parameters can be empty with allowEmptyValue: true)\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (!awesomeParameter.isEmpty()) {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now we are sure that it exists and it's not empty, so we can extract it\"), \"\\n      Integer awesome = awesomeParameter.getInteger();\\n    } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Parameter exists, but it's empty value\"), \"\\n    }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Parameter doesn't exist (it's not required)\"), \"\\n}\\n\")), mdx(\"p\", null, \"As you can see, every pa\\xADra\\xADme\\xADter is mapped in re\\xADspec\\xADtive ob\\xADjects (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Integer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format: int64\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Long\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"float\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Float\"), \" and so on)\"), mdx(\"p\", null, \"Comma sep\\xADa\\xADrated array with name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awesomeParameters\"), \" with type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"integer\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter awesomeParameters = params.queryParameter(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"awesomeParameters\\\"\"), \");\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (awesomeParameters != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \" && !awesomeParameters.isEmpty()) {\\n    List<RequestParameter> awesomeList = awesomeParameters.getArray();\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"for\"), \" (RequestParameter awesome : awesomeList) {\\n      Integer a = awesome.getInteger();\\n    }\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// awesomeParameters not found or empty string\"), \"\\n}\\n\")), mdx(\"p\", null, \"JSON Body:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"RequestParameter body = params.body();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (body != \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"null\"), \")\\n  JsonObject jsonBody = body.getJsonObject();\\n\")), mdx(\"h2\", {\n    \"id\": \"security-handling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#security-handling\"\n  })), \"Security handling\"), mdx(\"p\", null, \"You can mount only one se\\xADcu\\xADrity han\\xADdler for a com\\xADbi\\xADna\\xADtion of schema and scope.\"), mdx(\"p\", null, \"To add a se\\xADcu\\xADrity han\\xADdler only with a schema name:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routerFactory.addSecurityHandler(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"security_scheme_name\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here and then call next()\"), \"\\n    routingContext.next();\\n});\\n\")), mdx(\"p\", null, \"To add a se\\xADcu\\xADrity han\\xADdler with a com\\xADbi\\xADna\\xADtion of schema name and scope:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"routerFactory.addSecuritySchemaScopeValidator(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"security_scheme_name\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"scope_name\\\"\"), \", routingContext -> {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle security here and then call next()\"), \"\\n    routingContext.next();\\n});\\n\")), mdx(Alert, {\n    info: true,\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"You can de\\xADfine se\\xADcu\\xADrity han\\xADdlers where you want but de\\xADfine it! | Dur\\xADing Router in\\xADstan\\xADti\\xADa\\xADtion, if fac\\xADtory finds a path that re\\xADquire a se\\xADcu\\xADrity schema with\\xADout an as\\xADsigned han\\xADdler, It will throw a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RouterFactoryException\"))), mdx(\"h2\", {\n    \"id\": \"error-handling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#error-handling\"\n  })), \"Error handling\"), mdx(\"p\", null, \"Every time you add an han\\xADdler for an op\\xADer\\xADa\\xADtion you can add a fail\\xADure han\\xADdler. To han\\xADdle a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationException\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Throwable failure = routingContext.failure();\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (failure \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"instanceof\"), \" ValidationException)\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Handle Validation Exception\"), \"\\n    routingContext.response().setStatusCode(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"400\"), \").setStatusMessage(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"ValidationError\\\"\"), \").end(failure.getMessage());\\n\")), mdx(\"p\", null, \"Also the router fac\\xADtory pro\\xADvides two other tools:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It au\\xADto\\xADmat\\xADi\\xADcally mounts a 501 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Not Implemented\"), \" han\\xADdler for op\\xADer\\xADa\\xADtions where you haven\\u2019t mounted any han\\xADdler\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It can load a de\\xADfault \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ValidationException\"), \" fail\\xADure han\\xADdler\")), mdx(\"p\", null, \"Both these op\\xADtions are con\\xADfig\\xADurable with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"RouterFactoryOptions\"))), mdx(\"h2\", {\n    \"id\": \"and-now-use-it\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-now-use-it\"\n  })), \"And now use it!\"), mdx(\"p\", null, \"Now you are ready to gen\\xADer\\xADate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \"!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-java\"\n  }), \"Router router = routerFactory.getRouter();\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// Now you can use your Router instance\"), \"\\nHttpServer server = vertx.createHttpServer(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"new\"), \" HttpServerOptions().setPort(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"8080\"), \").setHost(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"localhost\\\"\"), \"));\\nserver.requestHandler(router::accept).listen();\\n\")), mdx(Alert, {\n    info: true,\n    title: \"Lazy methods!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getRouter()\"), \" gen\\xADer\\xADate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" ob\\xADject, so you don\\u2019t have to care about code de\\xADf\\xADi\\xADn\\xADi\\xADtion order\")), mdx(\"h2\", {\n    \"id\": \"and-now\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#and-now\"\n  })), \"And now?\"), mdx(\"p\", null, \"You can find a com\\xADplete ex\\xADam\\xADple on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-examples/tree/master/web-examples#http-request-validation-and-openapi-3-router-factory\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"vertx-examples\"))), mdx(\"p\", null, \"You can ac\\xADcess to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/#web\"\n  }), \"doc\\xADu\\xADmen\\xADta\\xADtion here\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/package-summary.html\"\n  }), \"Javadoc here\")), mdx(Alert, {\n    info: true,\n    title: \"We want you!\",\n    mdxType: \"Alert\"\n  }, mdx(\"p\", null, \"Please give us your feed\\xADback open\\xADing an issue \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/slinkydeveloper/vertx-web/issues\"\n  }), \"here\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div class=\"alert info\"><div class=\"alert-title\">Now on upstream!</div><p>We have pub­lished this pack­age with name <code>vertx-web-api-contract</code></p></div><p>As GSoC 2017’s stu­dent, I’m ac­tu­ally work­ing on an em­bed­ded sup­port to Ope­nAPI 3 stan­dard in­side Eclipse Vert.x frame­work. Now, after a lot of work, you can try it!</p><h2 id=\"why-openapi-3\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#why-openapi-3\"></a>Why OpenAPI 3?</h2><p>Ope­nAPI 2 is the most im­por­tant industry-​grade stan­dard for API Spec­i­fi­ca­tions. As you can see on <a href=\"https://www.openapis.org/blog/2017/05/25/the-open-api-initiative-is-sending-you-a-save-the-date-card?utm_source=Blog&amp;utm_medium=Twitter&amp;utm_campaign=SaveTheDate\">of­fi­cial blog of Ope­nAPI Ini­tia­tive</a>, the re­lease of ver­sion 3 is be­hind the cor­ner, so we want to give to our com­mu­nity the lat­est tools for the lat­est stan­dards!</p><p>Vert.x project ob­jec­tive is to give you more in­te­grated tools. With this new sup­port, it gives you the abil­ity to use the <a href=\"https://swaggerhub.com/blog/api-design/design-first-or-code-first-api-development/\">De­sign Dri­ven</a> (or De­sign First) ap­proach <strong>with­out load­ing any thirds par­ties li­braries</strong>.</p><h2 id=\"features\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#features\"></a>Features</h2><p>The ac­tu­ally sup­ported fea­tures are the fol­low­ing (we reefer to Ope­nAPI ver­sion 3.0.0):</p><ul><li>Ope­nAPI 3 com­pli­ant API spec­i­fi­ca­tion val­i­da­tion with <strong>load­ing of ex­ter­nal Json schemas</strong></li><li>Au­to­matic re­quest val­i­da­tion</li><li>Au­to­matic mount of se­cu­rity val­i­da­tion han­dlers</li><li>Au­to­matic 501 re­sponse for not im­ple­mented op­er­a­tions</li><li>Router fac­tory to pro­vide all this fea­tures to users</li></ul><p>Au­to­matic re­quest val­i­da­tion is pro­vided by a new han­dler: <code>ValidationHandler</code>. You can also de­fine your own <code>ValidationHandler</code> with­out API spec­i­fi­ca­tions, but I will dis­cuss it later.</p><p>The re­quest val­i­da­tion (pro­vided by sub­class <code>OpenAPI3RequestValidationHandler</code>) ac­tu­ally sup­ports:</p><ul><li>Pa­ra­me­ters de­fined in <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#parameter-object\">Pa­ra­me­ter ob­ject</a>. We sup­port every type of pa­ra­me­ter, in­clud­ing <code>object</code> and <code>array</code>. We also sup­port every type de­scrip­tion field (for ex­am­ple <code>format</code>, <code>minimum</code>, <code>maximum</code>, etc). Also, at the mo­ment, we sup­port every com­bi­na­tion of <code>style</code> and <code>explode</code> field (ex­cluded styles <code>matrix</code> and <code>label</code>)</li><li>Body de­fined in new <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#request-body-object\">Re­quest­Body ob­ject</a>. In par­tic­u­lar:<ul><li>For <code>application/json</code> the val­i­da­tion han­dler will take schema that you have de­fined in <code>schema</code> ob­ject and will val­i­date json bod­ies with it</li><li>For <code>application/x-www-form-urlencoded</code> and <code>multipart/form-data</code> the val­i­da­tion han­dler will take care of val­i­date every pa­ra­me­ters in form at­trib­utes. It ac­tu­ally sup­ports only comma sep­a­rated val­ues for <code>object</code> and <code>arrays</code></li><li>For other pa­ra­me­ter types it will check <code>Content-Type</code> header</li></ul></li></ul><p>Re­quest val­i­da­tion er­rors will be car­ried with <code>RoutingContext</code> en­cap­su­lated in an ob­ject called <code>ValidationHandler</code>, so you have to at­tach fail­ure han­dler to check if some­thing went wrong dur­ing val­i­da­tion. Also the <code>RoutingContext</code> carry a new ob­ject called <code>RequestParameters</code> that en­cap­su­late all re­quest pa­ra­me­ters de­se­ri­al­ized and parsed.</p><p>Router fac­tory is in­tended to give you a re­ally sim­ple user in­ter­face to use Ope­nAPI 3 sup­port. Most im­por­tant fea­tures are:</p><ul><li>Async load­ing of spec­i­fi­ca­tion and its schema de­pen­den­cies</li><li>Au­to­matic con­vert Ope­nAPI style paths to Vert.x style paths</li><li>Lazy meth­ods: op­er­a­tions (com­bi­na­tion of paths and HTTP meth­ods) are mounted in de­f­i­n­i­tion order in­side spec­i­fi­ca­tion</li><li>Au­to­matic mount of se­cu­rity val­i­da­tion han­dlers</li></ul><p>Also, it’s planned to re­lease a <strong>project skele­ton gen­er­a­tor</strong> based on API spec.</p><h2 id=\"startup-your-project\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#startup-your-project\"></a>Startup your project</h2><p>We are in a test­ing stage, so the vertx-​web of­fi­cial repo doesn’t con­tain it. To in­clude the mod­i­fied ver­sion of vertx-​web re­place your vertx-​web maven de­pen­dency with this one:</p><pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web-api-contract<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre><p>Now you can start using Ope­nAPI 3 in­side your Vert.x pow­ered app!</p><p>First of all you need to load the spec­i­fi­ca­tion and con­struct the router fac­tory:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Load the api spec. This operation is asynchronous</span>\nOpenAPI3RouterFactory.create(<span class=\"hljs-keyword\">this</span>.vertx, <span class=\"hljs-string\">&quot;src/main/resources/petstore.yaml&quot;</span>, ar -&gt; {\n    <span class=\"hljs-keyword\">if</span> (ar.succeeded()) {\n        <span class=\"hljs-comment\">// Spec loaded with success</span>\n        OpenAPI3RouterFactory routerFactory = ar.result();\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-comment\">// Something went wrong during router factory initialization</span>\n        Throwable exception = ar.cause();\n        logger.error(<span class=\"hljs-string\">&quot;Ops!&quot;</span>, exception);\n    }\n});\n</code></pre><h2 id=\"handlers-mounting\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#handlers-mounting\"></a>Handlers mounting</h2><p>Now load han­dlers to your op­er­a­tions. Use <code>addHandlerByOperationId(String operationId, Handler&lt;RoutingContext&gt; handler)</code> to add an han­dler to a route that matches the <code>operationId</code>. To add a fail­ure han­dler use <code>addFailureHandlerByOperationId(String operationId, Handler&lt;RoutingContext&gt; failureHandler) </code></p><p>You can, of course, <strong>add mul­ti­ple han­dlers to same op­er­a­tion</strong>, with­out over­writ­ing the ex­ist­ing ones.</p><p>This is an ex­am­ple of <code>addHandlerByOperationId()</code>:</p><pre><code class=\"hljs language-java\"><span class=\"hljs-comment\">// Add an handler with operationId</span>\nrouterFactory.addHandlerByOperationId(<span class=\"hljs-string\">&quot;listPets&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle listPets operation (GET /pets)</span>\n}, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle failure</span>\n});\n</code></pre><h2 id=\"request-parameters\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#request-parameters\"></a>Request parameters</h2><p>Now you can freely use re­quest pa­ra­me­ters. To get the <code>RequestParameters</code> ob­ject:</p><pre><code class=\"hljs language-java\">RequestParameters params = routingContext.get(<span class=\"hljs-string\">&quot;parsedParameters&quot;</span>);\n</code></pre><p>The <code>RequestParameters</code> ob­ject pro­vides all meth­ods to ac­cess to query, cookie, header, path, form and en­tire body pa­ra­me­ters. Here are some ex­am­ples of how to use this ob­ject.</p><p>Pa­ra­me­ter with name <code>awesomeParameter</code> with type <code>integer</code> in <code>query</code>:</p><pre><code class=\"hljs language-java\">RequestParameter awesomeParameter = params.queryParameter(<span class=\"hljs-string\">&quot;awesomeParameter&quot;</span>);\n<span class=\"hljs-keyword\">if</span> (awesomeParameter != <span class=\"hljs-keyword\">null</span>) {\n    <span class=\"hljs-comment\">// awesomeParameter parameter exists, but we are not sure that is empty or not (query parameters can be empty with allowEmptyValue: true)</span>\n    <span class=\"hljs-keyword\">if</span> (!awesomeParameter.isEmpty()) {\n      <span class=\"hljs-comment\">// Now we are sure that it exists and it&#x27;s not empty, so we can extract it</span>\n      Integer awesome = awesomeParameter.getInteger();\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-comment\">// Parameter exists, but it&#x27;s empty value</span>\n    }\n} <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Parameter doesn&#x27;t exist (it&#x27;s not required)</span>\n}\n</code></pre><p>As you can see, every pa­ra­me­ter is mapped in re­spec­tive ob­jects (<code>integer</code> in <code>Integer</code>, <code>integer</code> with <code>format: int64</code> in <code>Long</code>, <code>float</code> in <code>Float</code> and so on)</p><p>Comma sep­a­rated array with name <code>awesomeParameters</code> with type <code>integer</code> in <code>query</code>:</p><pre><code class=\"hljs language-java\">RequestParameter awesomeParameters = params.queryParameter(<span class=\"hljs-string\">&quot;awesomeParameters&quot;</span>);\n<span class=\"hljs-keyword\">if</span> (awesomeParameters != <span class=\"hljs-keyword\">null</span> &amp;&amp; !awesomeParameters.isEmpty()) {\n    List&lt;RequestParameter&gt; awesomeList = awesomeParameters.getArray();\n    <span class=\"hljs-keyword\">for</span> (RequestParameter awesome : awesomeList) {\n      Integer a = awesome.getInteger();\n    }\n} <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-comment\">// awesomeParameters not found or empty string</span>\n}\n</code></pre><p>JSON Body:</p><pre><code class=\"hljs language-java\">RequestParameter body = params.body();\n<span class=\"hljs-keyword\">if</span> (body != <span class=\"hljs-keyword\">null</span>)\n  JsonObject jsonBody = body.getJsonObject();\n</code></pre><h2 id=\"security-handling\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#security-handling\"></a>Security handling</h2><p>You can mount only one se­cu­rity han­dler for a com­bi­na­tion of schema and scope.</p><p>To add a se­cu­rity han­dler only with a schema name:</p><pre><code class=\"hljs language-java\">routerFactory.addSecurityHandler(<span class=\"hljs-string\">&quot;security_scheme_name&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle security here and then call next()</span>\n    routingContext.next();\n});\n</code></pre><p>To add a se­cu­rity han­dler with a com­bi­na­tion of schema name and scope:</p><pre><code class=\"hljs language-java\">routerFactory.addSecuritySchemaScopeValidator(<span class=\"hljs-string\">&quot;security_scheme_name&quot;</span>, <span class=\"hljs-string\">&quot;scope_name&quot;</span>, routingContext -&gt; {\n    <span class=\"hljs-comment\">// Handle security here and then call next()</span>\n    routingContext.next();\n});\n</code></pre><div class=\"alert info\"><p>You can de­fine se­cu­rity han­dlers where you want but de­fine it! | Dur­ing Router in­stan­ti­a­tion, if fac­tory finds a path that re­quire a se­cu­rity schema with­out an as­signed han­dler, It will throw a <code>RouterFactoryException</code></p></div><h2 id=\"error-handling\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#error-handling\"></a>Error handling</h2><p>Every time you add an han­dler for an op­er­a­tion you can add a fail­ure han­dler. To han­dle a <code>ValidationException</code>:</p><pre><code class=\"hljs language-java\">Throwable failure = routingContext.failure();\n<span class=\"hljs-keyword\">if</span> (failure <span class=\"hljs-keyword\">instanceof</span> ValidationException)\n    <span class=\"hljs-comment\">// Handle Validation Exception</span>\n    routingContext.response().setStatusCode(<span class=\"hljs-number\">400</span>).setStatusMessage(<span class=\"hljs-string\">&quot;ValidationError&quot;</span>).end(failure.getMessage());\n</code></pre><p>Also the router fac­tory pro­vides two other tools:</p><ul><li>It au­to­mat­i­cally mounts a 501 <code>Not Implemented</code> han­dler for op­er­a­tions where you haven’t mounted any han­dler</li><li>It can load a de­fault <code>ValidationException</code> fail­ure han­dler</li></ul><p>Both these op­tions are con­fig­urable with <a href=\"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/RouterFactoryOptions.html\"><code>RouterFactoryOptions</code></a></p><h2 id=\"and-now-use-it\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-now-use-it\"></a>And now use it!</h2><p>Now you are ready to gen­er­ate the <code>Router</code>!</p><pre><code class=\"hljs language-java\">Router router = routerFactory.getRouter();\n\n<span class=\"hljs-comment\">// Now you can use your Router instance</span>\nHttpServer server = vertx.createHttpServer(<span class=\"hljs-keyword\">new</span> HttpServerOptions().setPort(<span class=\"hljs-number\">8080</span>).setHost(<span class=\"hljs-string\">&quot;localhost&quot;</span>));\nserver.requestHandler(router::accept).listen();\n</code></pre><div class=\"alert info\"><div class=\"alert-title\">Lazy methods!</div><p><code>getRouter()</code> gen­er­ate the <code>Router</code> ob­ject, so you don’t have to care about code de­f­i­n­i­tion order</p></div><h2 id=\"and-now\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#and-now\"></a>And now?</h2><p>You can find a com­plete ex­am­ple on <a href=\"https://github.com/vert-x3/vertx-examples/tree/master/web-examples#http-request-validation-and-openapi-3-router-factory\"><code>vertx-examples</code></a></p><p>You can ac­cess to <a href=\"https://vertx.io/docs/#web\">doc­u­men­ta­tion here</a> and <a href=\"https://vertx.io/docs/apidocs/io/vertx/ext/web/api/contract/package-summary.html\">Javadoc here</a></p><div class=\"alert info\"><div class=\"alert-title\">We want you!</div><p>Please give us your feed­back open­ing an issue <a href=\"https://github.com/slinkydeveloper/vertx-web/issues\">here</a></p></div>","scope":{}},"tfIdfTerms":[{"term":"handler","tf":21},{"term":"valid","tf":12},{"term":"object","tf":11},{"term":"paramet","tf":11},{"term":"support","tf":9},{"term":"openapi","tf":9},{"term":"us","tf":9},{"term":"secur","tf":8},{"term":"schema","tf":7},{"term":"automat","tf":7},{"term":"request","tf":7},{"term":"mount","tf":7},{"term":"will","tf":7},{"term":"add","tf":7},{"term":"specif","tf":6},{"term":"load","tf":6},{"term":"oper","tf":6},{"term":"defin","tf":6},{"term":"everi","tf":6},{"term":"name","tf":5},{"term":"give","tf":5},{"term":"router","tf":5},{"term":"factori","tf":5},{"term":"provid","tf":5},{"term":"type","tf":5}]},{"filename":"blog/2017-06-09-preview-of-a-guide-for-java-developers.mdx","date":"2017-06-09","slug":"preview-of-a-guide-for-java-developers","meta":{"title":"Preview of a guide for Java developers","category":"news","authors":[{"name":"Julien Ponge","github_id":"jponge"}],"summary":"We are introducing the book “A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers”."},"readingTime":{"text":"3 min read","minutes":2.14,"time":128400,"words":428},"content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I could not at\\xADtend the last Eclipse Vert.x com\\xADmu\\xADnity face-\\u200Bto-face meet\\xADing last fall, but one item that was dis\\xADcussed is the need for guides aimed at cer\\xADtain types of de\\xADvel\\xADop\\xADers.\\nOne of my mis\\xADsions as part of join\\xADing the team was to work on this and I\\u2019m very happy to share it with you today!\"), mdx(\"h2\", {\n    \"id\": \"a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"\n  })), \"A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers\"), mdx(\"p\", null, \"The guide is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201CA gen\\xADtle guide to asyn\\xADchro\\xADnous pro\\xADgram\\xADming with Eclipse Vert.x for en\\xADter\\xADprise ap\\xADpli\\xADca\\xADtion de\\xADvel\\xADop\\xADers\\u201D\"), \" and it is an in\\xADtro\\xADduc\\xADtion to asyn\\xADchro\\xADnous pro\\xADgram\\xADming with Vert.x, pri\\xADmar\\xADily aimed at de\\xADvel\\xADop\\xADers fa\\xADmil\\xADiar with main\\xADstream non-\\u200Basynchronous web de\\xADvel\\xADop\\xADment frame\\xADworks and li\\xADbraries (e.g., Java EE, Spring).\"), mdx(\"p\", null, \"Quot\\xADing the in\\xADtro\\xADduc\\xADtion:\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"We will start from a wiki web ap\\xADpli\\xADca\\xADtion backed by a re\\xADla\\xADtional data\\xADbase and server-\\u200Bside ren\\xADder\\xADing of pages; then we will evolve the ap\\xADpli\\xADca\\xADtion through sev\\xADeral steps until it be\\xADcomes a mod\\xADern single-\\u200Bpage ap\\xADpli\\xADca\\xADtion with \\u201Creal-\\u200Btime\\u201D web fea\\xADtures. Along the way you will learn to:\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"De\\xADsign a web ap\\xADpli\\xADca\\xADtion with server-\\u200Bside ren\\xADder\\xADing of pages through tem\\xADplates, and using a re\\xADla\\xADtional data\\xADbase for per\\xADsist\\xADing data.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Cleanly iso\\xADlate each tech\\xADni\\xADcal com\\xADpo\\xADnent as a reusable event pro\\xADcess\\xADing unit called a ver\\xADti\\xADcle.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ex\\xADtract Vert.x ser\\xADvices for fa\\xADcil\\xADi\\xADtat\\xADing the de\\xADsign of ver\\xADti\\xADcles that com\\xADmu\\xADni\\xADcate with each other seam\\xADlessly both within the same JVM process or among dis\\xADtrib\\xADuted nodes in a clus\\xADter.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Test\\xADing code with asyn\\xADchro\\xADnous op\\xADer\\xADa\\xADtions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"In\\xADte\\xADgrat\\xADing with third-\\u200Bparty ser\\xADvices ex\\xADpos\\xADing a HTTP/JSON web API.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ex\\xADpos\\xADing a HTTP/JSON web API.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Se\\xADcur\\xADing and con\\xADtrol\\xADling ac\\xADcess using HTTPS, user au\\xADthen\\xADti\\xADca\\xADtion for web browser ses\\xADsions and JWT to\\xADkens for third-\\u200Bparty client ap\\xADpli\\xADca\\xADtions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Refac\\xADtor\\xADing some code to use re\\xADac\\xADtive pro\\xADgram\\xADming with the pop\\xADu\\xADlar Rx\\xADJava li\\xADbrary and its Vert.x in\\xADte\\xADgra\\xADtion.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Client-\\u200Bside pro\\xADgram\\xADming of a single-\\u200Bpage ap\\xADpli\\xADca\\xADtion with An\\xADgu\\xADlarJS.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Real-\\u200Btime web pro\\xADgram\\xADming using the uni\\xADfied Vert.x event bus in\\xADte\\xADgra\\xADtion over SockJS.\"))), mdx(\"p\", null, \"The guide takes a grad\\xADual ap\\xADproach by start\\xADing with a \\u201Cquick and dirty\\u201D so\\xADlu\\xADtion, then refac\\xADtor\\xADing it prop\\xADerly, ex\\xADpos\\xADing the core Vert.x con\\xADcepts, adding fea\\xADtures, and mov\\xADing from call\\xADbacks to Rx\\xADJava.\"), mdx(\"h2\", {\n    \"id\": \"we-need-your-feedback\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": true,\n    \"tabIndex\": -1,\n    \"className\": \"heading-anchor\",\n    \"href\": \"#we-need-your-feedback\"\n  })), \"We need your feedback!\"), mdx(\"p\", null, \"The code is avail\\xADable at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vert-x3/vertx-guide-for-java-devs\"\n  }), \"https://github.com/vert-\\u200Bx3/vertx-\\u200Bguide-for-java-devs\"), \".\\nYou can re\\xADport feed\\xADback as Github is\\xADsues to that repos\\xADi\\xADtory and even offer pull-\\u200Brequests.\"), mdx(\"p\", null, \"You can check it out from GitHub (the Asci\\xADiDoc is being ren\\xADdered fine from the repos\\xADi\\xADtory in\\xADter\\xADface) or you can check out pre-\\u200Brendered HTML and PDF ver\\xADsions that I am tem\\xADporar\\xADily shar\\xADing and keep\\xADing up-\\u200Bto-date from my Drop\\xADbox: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.dropbox.com/sh/ni9znfkzlkl3q12/AABn-OCi1CZfgbTzOU0jYQpJa?dl=0\"\n  }), \"https://www.drop\\xADbox.com/sh/ni9zn\\xADfk\\xADzlkl3q12/AABn-\\u200BOCi1CZfg\\xADbT\\xADzOU0jYQpJa?dl=0\")), mdx(\"p\", null, \"Many thanks to Thomas Segis\\xADmont and Julien Viet who con\\xADtributed some parts, and also to the peo\\xADple who re\\xADviewed it pri\\xADvately.\"), mdx(\"p\", null, \"As usual, we wel\\xADcome your feed\\xADback!\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>I could not at­tend the last Eclipse Vert.x com­mu­nity face-​to-face meet­ing last fall, but one item that was dis­cussed is the need for guides aimed at cer­tain types of de­vel­op­ers.\nOne of my mis­sions as part of join­ing the team was to work on this and I’m very happy to share it with you today!</p><h2 id=\"a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#a-gentle-guide-to-asynchronous-programming-with-eclipse-vertx-for-enterprise-application-developers\"></a>A gentle guide to asynchronous programming with Eclipse Vert.x for enterprise application developers</h2><p>The guide is called <strong>“A gen­tle guide to asyn­chro­nous pro­gram­ming with Eclipse Vert.x for en­ter­prise ap­pli­ca­tion de­vel­op­ers”</strong> and it is an in­tro­duc­tion to asyn­chro­nous pro­gram­ming with Vert.x, pri­mar­ily aimed at de­vel­op­ers fa­mil­iar with main­stream non-​asynchronous web de­vel­op­ment frame­works and li­braries (e.g., Java EE, Spring).</p><p>Quot­ing the in­tro­duc­tion:</p><p><em>We will start from a wiki web ap­pli­ca­tion backed by a re­la­tional data­base and server-​side ren­der­ing of pages; then we will evolve the ap­pli­ca­tion through sev­eral steps until it be­comes a mod­ern single-​page ap­pli­ca­tion with “real-​time” web fea­tures. Along the way you will learn to:</em></p><ol><li><em>De­sign a web ap­pli­ca­tion with server-​side ren­der­ing of pages through tem­plates, and using a re­la­tional data­base for per­sist­ing data.</em></li><li><em>Cleanly iso­late each tech­ni­cal com­po­nent as a reusable event pro­cess­ing unit called a ver­ti­cle.</em></li><li><em>Ex­tract Vert.x ser­vices for fa­cil­i­tat­ing the de­sign of ver­ti­cles that com­mu­ni­cate with each other seam­lessly both within the same JVM process or among dis­trib­uted nodes in a clus­ter.</em></li><li><em>Test­ing code with asyn­chro­nous op­er­a­tions.</em></li><li><em>In­te­grat­ing with third-​party ser­vices ex­pos­ing a HTTP/JSON web API.</em></li><li><em>Ex­pos­ing a HTTP/JSON web API.</em></li><li><em>Se­cur­ing and con­trol­ling ac­cess using HTTPS, user au­then­ti­ca­tion for web browser ses­sions and JWT to­kens for third-​party client ap­pli­ca­tions.</em></li><li><em>Refac­tor­ing some code to use re­ac­tive pro­gram­ming with the pop­u­lar Rx­Java li­brary and its Vert.x in­te­gra­tion.</em></li><li><em>Client-​side pro­gram­ming of a single-​page ap­pli­ca­tion with An­gu­larJS.</em></li><li><em>Real-​time web pro­gram­ming using the uni­fied Vert.x event bus in­te­gra­tion over SockJS.</em></li></ol><p>The guide takes a grad­ual ap­proach by start­ing with a “quick and dirty” so­lu­tion, then refac­tor­ing it prop­erly, ex­pos­ing the core Vert.x con­cepts, adding fea­tures, and mov­ing from call­backs to Rx­Java.</p><h2 id=\"we-need-your-feedback\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"heading-anchor\" href=\"#we-need-your-feedback\"></a>We need your feedback!</h2><p>The code is avail­able at <a href=\"https://github.com/vert-x3/vertx-guide-for-java-devs\">https://github.com/vert-​x3/vertx-​guide-for-java-devs</a>.\nYou can re­port feed­back as Github is­sues to that repos­i­tory and even offer pull-​requests.</p><p>You can check it out from GitHub (the Asci­iDoc is being ren­dered fine from the repos­i­tory in­ter­face) or you can check out pre-​rendered HTML and PDF ver­sions that I am tem­porar­ily shar­ing and keep­ing up-​to-date from my Drop­box: <a href=\"https://www.dropbox.com/sh/ni9znfkzlkl3q12/AABn-OCi1CZfgbTzOU0jYQpJa?dl=0\">https://www.drop­box.com/sh/ni9zn­fk­zlkl3q12/AABn-​OCi1CZfg­bT­zOU0jYQpJa?dl=0</a></p><p>Many thanks to Thomas Segis­mont and Julien Viet who con­tributed some parts, and also to the peo­ple who re­viewed it pri­vately.</p><p>As usual, we wel­come your feed­back!</p>","scope":{}},"tfIdfTerms":[{"term":"applic","tf":8},{"term":"web","tf":8},{"term":"guid","tf":6},{"term":"program","tf":6},{"term":"develop","tf":5},{"term":"asynchron","tf":5},{"term":"http","tf":5},{"term":"render","tf":4},{"term":"page","tf":4},{"term":"us","tf":4},{"term":"will","tf":3},{"term":"side","tf":3},{"term":"code","tf":3},{"term":"integr","tf":3},{"term":"expos","tf":3},{"term":"feedback","tf":3},{"term":"github","tf":3},{"term":"last","tf":2},{"term":"commun","tf":2},{"term":"face","tf":2},{"term":"on","tf":2},{"term":"need","tf":2},{"term":"aim","tf":2},{"term":"part","tf":2},{"term":"share","tf":2}]}],"numPages":16},"__N_SSG":true}